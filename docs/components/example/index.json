{
  "action-button-brand-solid": "import { ActionButton } from \"seed-design/ui/action-button\";\n\nexport default function ActionButtonBrandSolid() {\n  return <ActionButton variant=\"brandSolid\">라벨</ActionButton>;\n}",
  "action-button-brand-weak": "import { ActionButton } from \"seed-design/ui/action-button\";\n\nexport default function ActionButtonBrandWeak() {\n  return <ActionButton variant=\"brandWeak\">라벨</ActionButton>;\n}",
  "action-button-danger-solid": "import { ActionButton } from \"seed-design/ui/action-button\";\n\nexport default function ActionButtonDangerSolid() {\n  return <ActionButton variant=\"dangerSolid\">라벨</ActionButton>;\n}",
  "action-button-icon-only": "import { IconPlusFill } from \"@daangn/react-monochrome-icon\";\nimport { ActionButton } from \"seed-design/ui/action-button\";\n\nexport default function ActionButtonIconOnly() {\n  return (\n    <ActionButton layout=\"iconOnly\">\n      <IconPlusFill />\n    </ActionButton>\n  );\n}",
  "action-button-neutral-solid": "import { ActionButton } from \"seed-design/ui/action-button\";\n\nexport default function ActionButtonNeutralSolid() {\n  return <ActionButton variant=\"neutralSolid\">라벨</ActionButton>;\n}",
  "action-button-neutral-weak": "import { ActionButton } from \"seed-design/ui/action-button\";\n\nexport default function ActionButtonNeutralWeak() {\n  return <ActionButton variant=\"neutralWeak\">라벨</ActionButton>;\n}",
  "action-button-prefix-icon": "import { IconPlusFill } from \"@daangn/react-monochrome-icon\";\nimport { ActionButton } from \"seed-design/ui/action-button\";\n\nexport default function ActionButtonPrefixIcon() {\n  return <ActionButton prefixIcon={<IconPlusFill />}>라벨</ActionButton>;\n}",
  "action-button-preview": "import { ActionButton } from \"seed-design/ui/action-button\";\n\nexport default function ActionButtonPreview() {\n  return <ActionButton>라벨</ActionButton>;\n}",
  "action-chip-icon-only": "import { IconPlusFill } from \"@daangn/react-monochrome-icon\";\nimport { ActionChip } from \"seed-design/ui/action-chip\";\n\nexport default function ActionChipIconOnly() {\n  return (\n    <ActionChip layout=\"iconOnly\">\n      <IconPlusFill />\n    </ActionChip>\n  );\n}",
  "action-chip-medium": "import { ActionChip } from \"seed-design/ui/action-chip\";\n\nexport default function ActionChipMedium() {\n  return <ActionChip size=\"medium\">라벨</ActionChip>;\n}",
  "action-chip-prefix-icon": "import { IconPlusFill } from \"@daangn/react-monochrome-icon\";\nimport { ActionChip } from \"seed-design/ui/action-chip\";\n\nexport default function ActionChipPrefixIcon() {\n  return <ActionChip prefixIcon={<IconPlusFill />}>라벨</ActionChip>;\n}",
  "action-chip-preview": "import { ActionChip } from \"seed-design/ui/action-chip\";\n\nexport default function ActionChipPreview() {\n  return <ActionChip>라벨</ActionChip>;\n}",
  "action-chip-small": "import { ActionChip } from \"seed-design/ui/action-chip\";\n\nexport default function ActionChipSmall() {\n  return <ActionChip size=\"small\">라벨</ActionChip>;\n}",
  "alert-dialog-default-activity": "import * as React from \"react\";\n\nimport { AppScreen } from \"@stackflow/plugin-basic-ui\";\nimport {\n  type ActivityComponentType,\n  useStepFlow,\n  useStack,\n} from \"@stackflow/react/future\";\n\nimport { ActionButton } from \"seed-design/ui/action-button\";\nimport { AlertDialog as UIAlertDialog } from \"seed-design/ui/alert-dialog\";\n\ndeclare module \"@stackflow/config\" {\n  interface Register {\n    AlertDialogDefault: {\n      alert: boolean;\n    };\n  }\n}\n\nconst AlertDialogDefaultActivity: ActivityComponentType<\n  \"AlertDialogDefault\"\n> = ({ params }) => {\n  const { alert } = params;\n  const stack = useStack();\n  const { pushStep, popStep } = useStepFlow(\"AlertDialogDefault\");\n\n  const appBarLeft = () => <div>Left</div>;\n  const appBarRight = () => <div>Right</div>;\n\n  const onInteractOutside = () => {\n    popStep();\n  };\n\n  const onButtonClick = () => {\n    pushStep({\n      alert: true,\n    });\n  };\n\n  const mainActivitySteps = stack.activities[0].steps;\n\n  return (\n    <AppScreen\n      appBar={{\n        renderLeft: appBarLeft,\n        renderRight: appBarRight,\n      }}\n    >\n      <div\n        style={{\n          position: \"relative\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"100%\",\n          width: \"100%\",\n        }}\n      >\n        <ActionButton onClick={onButtonClick}>Open</ActionButton>\n        {alert && (\n          <UIAlertDialog\n            onInteractOutside={onInteractOutside}\n            title=\"Title\"\n            description=\"Description\"\n          />\n        )}\n      </div>\n\n      <div\n        style={{\n          position: \"fixed\",\n          bottom: \"0\",\n          right: \"0\",\n          padding: \"8px\",\n        }}\n      >\n        <span\n          style={{\n            fontSize: \"12px\",\n            color: \"var(--seed-semantic-color-divider-3)\",\n          }}\n        >\n          Steps\n        </span>\n        {mainActivitySteps.map((step) => (\n          <div\n            style={{\n              fontSize: \"12px\",\n              width: \"1rem\",\n              height: \"1rem\",\n              borderRadius: \"50%\",\n              border: \"1px solid var(--seed-semantic-color-divider-3)\",\n              margin: \"8px\",\n            }}\n            key={step.id}\n          />\n        ))}\n      </div>\n\n      <div\n        style={{\n          position: \"fixed\",\n          bottom: \"0\",\n          left: \"0\",\n          padding: \"8px\",\n          zIndex: 1000,\n        }}\n      >\n        <ActionButton onClick={() => popStep}>Back</ActionButton>\n      </div>\n    </AppScreen>\n  );\n};\n\nexport default AlertDialogDefaultActivity;\n\nAlertDialogDefaultActivity.displayName = \"AlertDialogDefaultActivity\";",
  "alert-dialog-preview": "import * as React from \"react\";\n\nimport { AlertDialog } from \"seed-design/ui/alert-dialog\";\n\nexport default function AlertDialogPreview() {\n  return <AlertDialog title=\"Title\" description=\"Description\" />;\n}",
  "badge-brand": "import { Badge } from \"seed-design/ui/badge\";\n\nexport default function BadgeBrand() {\n  return <Badge tone=\"brand\">라벨</Badge>;\n}",
  "badge-danger": "import { Badge } from \"seed-design/ui/badge\";\n\nexport default function BadgeDanger() {\n  return <Badge tone=\"danger\">라벨</Badge>;\n}",
  "badge-informative": "import { Badge } from \"seed-design/ui/badge\";\n\nexport default function BadgeInformative() {\n  return <Badge tone=\"informative\">라벨</Badge>;\n}",
  "badge-medium": "import { Badge } from \"seed-design/ui/badge\";\n\nexport default function BadgeMedium() {\n  return <Badge size=\"medium\">라벨</Badge>;\n}",
  "badge-neutral": "import { Badge } from \"seed-design/ui/badge\";\n\nexport default function BadgeNeutral() {\n  return <Badge tone=\"neutral\">라벨</Badge>;\n}",
  "badge-outlined": "import { Badge } from \"seed-design/ui/badge\";\n\nexport default function BadgeOutlined() {\n  return <Badge variant=\"outlined\">라벨</Badge>;\n}",
  "badge-pill": "import { Badge } from \"seed-design/ui/badge\";\n\nexport default function BadgeRectangle() {\n  return <Badge shape=\"pill\">라벨</Badge>;\n}",
  "badge-positive": "import { Badge } from \"seed-design/ui/badge\";\n\nexport default function BadgePositive() {\n  return <Badge tone=\"positive\">라벨</Badge>;\n}",
  "badge-preview": "import { Badge } from \"seed-design/ui/badge\";\n\nexport default function BadgePreview() {\n  return <Badge>라벨</Badge>;\n}",
  "badge-rectangle": "import { Badge } from \"seed-design/ui/badge\";\n\nexport default function BadgeRectangle() {\n  return <Badge shape=\"rectangle\">라벨</Badge>;\n}",
  "badge-small": "import { Badge } from \"seed-design/ui/badge\";\n\nexport default function BadgeSmall() {\n  return <Badge size=\"small\">라벨</Badge>;\n}",
  "badge-soft": "import { Badge } from \"seed-design/ui/badge\";\n\nexport default function BadgeSoft() {\n  return <Badge variant=\"soft\">라벨</Badge>;\n}",
  "badge-solid": "import { Badge } from \"seed-design/ui/badge\";\n\nexport default function BadgeSolid() {\n  return <Badge variant=\"solid\">라벨</Badge>;\n}",
  "checkbox-preview": "import { Checkbox } from \"seed-design/ui/checkbox\";\n\nexport default function CheckboxPreview() {\n  return <Checkbox label=\"hi\" />;\n}",
  "chip-tabs-basic-activity": "import * as React from \"react\";\n\nimport {\n  ChipTabs,\n  ChipTabTrigger,\n  ChipTabTriggerList,\n} from \"seed-design/ui/chip-tabs\";\n\nimport type { ActivityComponentType } from \"@stackflow/react/future\";\nimport AppScreen from \"@/components/stackflow/ActivityLayout\";\n\ndeclare module \"@stackflow/config\" {\n  interface Register {\n    ChipTabsBasic: unknown;\n  }\n}\n\nconst ChipTabsBasicActivity: ActivityComponentType<\"ChipTabsBasic\"> = () => {\n  const [value, setValue] = React.useState(\"1\");\n\n  const commonStyle = {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#eeeeee\",\n    height: \"100%\",\n  };\n\n  return (\n    <AppScreen>\n      <ChipTabs\n        variant=\"neutralSolid\"\n        defaultValue=\"1\"\n        value={value}\n        onValueChange={(value) => setValue(value)}\n      >\n        <ChipTabTriggerList>\n          <ChipTabTrigger value=\"1\">라벨1</ChipTabTrigger>\n          <ChipTabTrigger value=\"2\">라벨2</ChipTabTrigger>\n          <ChipTabTrigger value=\"3\">라벨3</ChipTabTrigger>\n        </ChipTabTriggerList>\n      </ChipTabs>\n      {value === \"1\" && <div style={commonStyle}>content 1</div>}\n      {value === \"2\" && <div style={commonStyle}>content 2</div>}\n      {value === \"3\" && <div style={commonStyle}>content 3</div>}\n    </AppScreen>\n  );\n};\n\nexport default ChipTabsBasicActivity;",
  "chip-tabs-preview": "import * as React from \"react\";\nimport {\n  ChipTabs,\n  ChipTabTrigger,\n  ChipTabTriggerList,\n} from \"seed-design/ui/chip-tabs\";\n\nexport default function ChipTabsPreview() {\n  const [value, setValue] = React.useState(\"1\");\n  return (\n    <>\n      <ChipTabs\n        variant=\"neutralSolid\"\n        defaultValue=\"1\"\n        value={value}\n        onValueChange={(value) => setValue(value)}\n      >\n        <ChipTabTriggerList>\n          <ChipTabTrigger value=\"1\">라벨1</ChipTabTrigger>\n          <ChipTabTrigger value=\"2\">라벨2</ChipTabTrigger>\n          <ChipTabTrigger value=\"3\">라벨3</ChipTabTrigger>\n        </ChipTabTriggerList>\n      </ChipTabs>\n      {value === \"1\" && <div>content 1</div>}\n      {value === \"2\" && <div>content 2</div>}\n      {value === \"3\" && <div>content 3</div>}\n    </>\n  );\n}",
  "chip-tabs-variant-brand-weak": "import * as React from \"react\";\nimport {\n  ChipTabs,\n  ChipTabTrigger,\n  ChipTabTriggerList,\n} from \"seed-design/ui/chip-tabs\";\n\nexport default function ChipTabsVariantBrandWeak() {\n  const [value, setValue] = React.useState(\"1\");\n  return (\n    <>\n      <ChipTabs\n        variant=\"brandWeak\"\n        defaultValue=\"1\"\n        value={value}\n        onValueChange={(value) => setValue(value)}\n      >\n        <ChipTabTriggerList>\n          <ChipTabTrigger value=\"1\">라벨1</ChipTabTrigger>\n          <ChipTabTrigger value=\"2\">라벨2</ChipTabTrigger>\n          <ChipTabTrigger value=\"3\">라벨3</ChipTabTrigger>\n        </ChipTabTriggerList>\n      </ChipTabs>\n      {value === \"1\" && <div>content 1</div>}\n      {value === \"2\" && <div>content 2</div>}\n      {value === \"3\" && <div>content 3</div>}\n    </>\n  );\n}",
  "chip-tabs-variant-neutral-solid": "import * as React from \"react\";\nimport {\n  ChipTabs,\n  ChipTabTrigger,\n  ChipTabTriggerList,\n} from \"seed-design/ui/chip-tabs\";\n\nexport default function ChipTabsVariantNeutralSolid() {\n  const [value, setValue] = React.useState(\"1\");\n  return (\n    <>\n      <ChipTabs\n        variant=\"neutralSolid\"\n        defaultValue=\"1\"\n        value={value}\n        onValueChange={(value) => setValue(value)}\n      >\n        <ChipTabTriggerList>\n          <ChipTabTrigger value=\"1\">라벨1</ChipTabTrigger>\n          <ChipTabTrigger value=\"2\">라벨2</ChipTabTrigger>\n          <ChipTabTrigger value=\"3\">라벨3</ChipTabTrigger>\n        </ChipTabTriggerList>\n      </ChipTabs>\n      {value === \"1\" && <div>content 1</div>}\n      {value === \"2\" && <div>content 2</div>}\n      {value === \"3\" && <div>content 3</div>}\n    </>\n  );\n}",
  "control-chip-icon-only": "import { IconPlusFill } from \"@daangn/react-monochrome-icon\";\nimport { ControlChip } from \"seed-design/ui/control-chip\";\n\nexport default function ControlChipIconOnly() {\n  return (\n    <ControlChip.Toggle layout=\"iconOnly\">\n      <IconPlusFill />\n    </ControlChip.Toggle>\n  );\n}",
  "control-chip-medium": "import { ControlChip } from \"seed-design/ui/control-chip\";\n\nexport default function ActionChipMedium() {\n  return <ControlChip.Toggle size=\"medium\">라벨</ControlChip.Toggle>;\n}",
  "control-chip-prefix-icon": "import { IconPlusFill } from \"@daangn/react-monochrome-icon\";\nimport { ControlChip } from \"seed-design/ui/control-chip\";\n\nexport default function ControlChipPrefixIcon() {\n  return <ControlChip.Toggle prefixIcon={<IconPlusFill />}>라벨</ControlChip.Toggle>;\n}",
  "control-chip-preview": "import { ControlChip } from \"seed-design/ui/control-chip\";\n\nexport default function ControlChipPreview() {\n  return <ControlChip.Toggle>라벨</ControlChip.Toggle>;\n}",
  "control-chip-small": "import { ControlChip } from \"seed-design/ui/control-chip\";\n\nexport default function ActionChipSmall() {\n  return <ControlChip.Toggle size=\"small\">라벨</ControlChip.Toggle>;\n}",
  "expand-button-preview": "import { ExpandButton } from \"seed-design/ui/expand-button\";\nimport { IconChevronRightFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function ExpandButtonPreview() {\n  return <ExpandButton suffixIcon={<IconChevronRightFill />}>라벨</ExpandButton>;\n}",
  "inline-banner-action": "import { InlineBanner } from \"seed-design/ui/inline-banner\";\nimport { IconExclamationmarkCircleFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function InlineBannerAction() {\n  return (\n    <div className=\"flex gap-2 w-full flex-col\">\n      <InlineBanner\n        action={{ onClick: () => {}, label: \"자세히 보기\" }}\n        tone=\"warning\"\n        variant=\"weak\"\n        prefixIcon={<IconExclamationmarkCircleFill />}\n      >\n        사업자 정보를 등록해주세요.\n      </InlineBanner>\n      <InlineBanner\n        action={{ onClick: () => {}, label: \"자세히 보기\" }}\n        tone=\"warning\"\n        variant=\"weak\"\n        prefixIcon={<IconExclamationmarkCircleFill />}\n      >\n        사업자 정보를 등록해주세요. 사업자 등록을 하지 않으면, 판매자로서의 활동이 제한됩니다.\n        왜냐하면, 판매자로서의 활동을 하기 위해서는 사업자 등록이 필요하기 때문입니다.\n      </InlineBanner>\n    </div>\n  );\n}",
  "inline-banner-activity": "import * as React from \"react\";\n\nimport { InlineBanner, type InlineBannerProps } from \"seed-design/ui/inline-banner\";\nimport { ActionButton } from \"seed-design/ui/action-button\";\n\nimport type { ActivityComponentType } from \"@stackflow/react/future\";\nimport AppScreen from \"@/components/stackflow/ActivityLayout\";\n\ndeclare module \"@stackflow/config\" {\n  interface Register {\n    InlineBanner: unknown;\n  }\n}\n\nconst InlineBannerActivity: ActivityComponentType<\"InlineBanner\"> = () => {\n  const [tone, setTone] =\n    React.useState<Extract<InlineBannerProps[\"tone\"], \"neutral\" | \"danger\">>(\"danger\");\n\n  return (\n    <AppScreen>\n      <InlineBanner tone={tone as \"danger\"}>\n        Lorem ipsum dolor sit amet consectetur adipisicing elit.\n      </InlineBanner>\n      <div style={{ display: \"flex\", flexDirection: \"column\", padding: \"1rem\", gap: \"0.75rem\" }}>\n        <ActionButton onClick={() => setTone((prev) => (prev === \"danger\" ? \"neutral\" : \"danger\"))}>\n          Toggle tone\n        </ActionButton>\n        <p style={{ marginBlock: 0, lineHeight: 1.35 }}>\n          Lorem ipsum dolor sit, amet consectetur adipisicing elit. At a eaque fugiat sint sapiente.\n          Id, hic ex, blanditiis totam animi amet delectus temporibus quae fugiat magnam, quos eaque\n          dolorum a? Lorem ipsum dolor, sit amet consectetur adipisicing elit. Possimus labore unde\n          minus temporibus beatae commodi et nesciunt iure in dignissimos suscipit, alias ab\n          voluptatem facilis tempora numquam. Veritatis, dolorum suscipit! Lorem ipsum dolor sit,\n          amet consectetur adipisicing elit. Explicabo fugiat molestias iusto, ipsum distinctio\n          officia ad id ratione esse ducimus architecto deleniti illum reiciendis rerum, at\n          blanditiis molestiae. Cupiditate, nobis? Lorem ipsum dolor sit amet consectetur\n          adipisicing elit. Ab, magni. Aliquid inventore quaerat nemo architecto harum earum quas\n          porro repudiandae explicabo repellat repellendus magni, corporis omnis laborum, velit\n          dicta blanditiis. Lorem ipsum dolor sit, amet consectetur adipisicing elit. Debitis,\n          eveniet quas. Accusamus facere veritatis expedita delectus, asperiores numquam placeat\n          necessitatibus assumenda, nesciunt in dolorem sit provident repellendus, voluptatem earum!\n          Consequatur. Lorem ipsum dolor, sit amet consectetur adipisicing elit. Aut earum\n          asperiores aliquam magnam est delectus veritatis numquam sint porro tenetur dolores nobis,\n          deleniti voluptas quaerat, quia voluptatum soluta autem perspiciatis? Lorem ipsum dolor\n          sit amet consectetur adipisicing elit. Facilis possimus eaque aliquam maxime? Quidem enim,\n          sed itaque at veritatis nihil officia esse qui provident ipsa adipisci necessitatibus\n          officiis distinctio laborum!\n        </p>\n      </div>\n    </AppScreen>\n  );\n};\n\nexport default InlineBannerActivity;",
  "inline-banner-danger-solid": "import { InlineBanner } from \"seed-design/ui/inline-banner\";\nimport { IconExclamationmarkCircleFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function InlineBannerDangerSolid() {\n  return (\n    <InlineBanner tone=\"danger\" variant=\"solid\" prefixIcon={<IconExclamationmarkCircleFill />}>\n      사업자 정보를 등록해주세요.\n    </InlineBanner>\n  );\n}",
  "inline-banner-danger-weak": "import { InlineBanner } from \"seed-design/ui/inline-banner\";\nimport { IconExclamationmarkCircleFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function InlineBannerDangerWeak() {\n  return (\n    <InlineBanner tone=\"danger\" variant=\"weak\" prefixIcon={<IconExclamationmarkCircleFill />}>\n      사업자 정보를 등록해주세요.\n    </InlineBanner>\n  );\n}",
  "inline-banner-default": "import { InlineBanner } from \"seed-design/ui/inline-banner\";\nimport { IconExclamationmarkCircleFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function InlineBannerDefault() {\n  return (\n    <div className=\"flex gap-2 w-full flex-col\">\n      <InlineBanner tone=\"warning\" variant=\"weak\" prefixIcon={<IconExclamationmarkCircleFill />}>\n        사업자 정보를 등록해주세요.\n      </InlineBanner>\n      <InlineBanner tone=\"warning\" variant=\"weak\" prefixIcon={<IconExclamationmarkCircleFill />}>\n        사업자 정보를 등록해주세요. 사업자 등록을 하지 않으면, 판매자로서의 활동이 제한됩니다.\n        왜냐하면, 판매자로서의 활동을 하기 위해서는 사업자 등록이 필요하기 때문입니다.\n      </InlineBanner>\n    </div>\n  );\n}",
  "inline-banner-dismissible": "import { InlineBanner } from \"seed-design/ui/inline-banner\";\nimport { IconExclamationmarkCircleFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function InlineBannerDismissible() {\n  return (\n    <div className=\"flex gap-2 w-full flex-col\">\n      <InlineBanner\n        dismissAriaLabel=\"닫기\"\n        tone=\"warning\"\n        variant=\"weak\"\n        prefixIcon={<IconExclamationmarkCircleFill />}\n      >\n        사업자 정보를 등록해주세요.\n      </InlineBanner>\n      <InlineBanner\n        dismissAriaLabel=\"닫기\"\n        tone=\"warning\"\n        variant=\"weak\"\n        prefixIcon={<IconExclamationmarkCircleFill />}\n      >\n        사업자 정보를 등록해주세요. 사업자 등록을 하지 않으면, 판매자로서의 활동이 제한됩니다.\n        왜냐하면, 판매자로서의 활동을 하기 위해서는 사업자 등록이 필요하기 때문입니다.\n      </InlineBanner>\n    </div>\n  );\n}",
  "inline-banner-informative-solid": "import { InlineBanner } from \"seed-design/ui/inline-banner\";\nimport { IconExclamationmarkCircleFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function InlineBannerInformativeSolid() {\n  return (\n    <InlineBanner tone=\"informative\" variant=\"solid\" prefixIcon={<IconExclamationmarkCircleFill />}>\n      사업자 정보를 등록해주세요.\n    </InlineBanner>\n  );\n}",
  "inline-banner-informative-weak": "import { InlineBanner } from \"seed-design/ui/inline-banner\";\nimport { IconExclamationmarkCircleFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function InlineBannerInformativeWeak() {\n  return (\n    <InlineBanner tone=\"informative\" variant=\"weak\" prefixIcon={<IconExclamationmarkCircleFill />}>\n      사업자 정보를 등록해주세요.\n    </InlineBanner>\n  );\n}",
  "inline-banner-neutral-solid": "import { InlineBanner } from \"seed-design/ui/inline-banner\";\nimport { IconExclamationmarkCircleFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function InlineBannerNeutralSolid() {\n  return (\n    <InlineBanner tone=\"neutral\" variant=\"solid\" prefixIcon={<IconExclamationmarkCircleFill />}>\n      사업자 정보를 등록해주세요.\n    </InlineBanner>\n  );\n}",
  "inline-banner-neutral-weak": "import { InlineBanner } from \"seed-design/ui/inline-banner\";\nimport { IconExclamationmarkCircleFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function InlineBannerNeutralWeak() {\n  return (\n    <InlineBanner tone=\"neutral\" variant=\"weak\" prefixIcon={<IconExclamationmarkCircleFill />}>\n      사업자 정보를 등록해주세요.\n    </InlineBanner>\n  );\n}",
  "inline-banner-positive-solid": "import { InlineBanner } from \"seed-design/ui/inline-banner\";\nimport { IconExclamationmarkCircleFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function InlineBannerPositiveSolid() {\n  return (\n    <InlineBanner tone=\"positive\" variant=\"solid\" prefixIcon={<IconExclamationmarkCircleFill />}>\n      사업자 정보를 등록해주세요.\n    </InlineBanner>\n  );\n}",
  "inline-banner-positive-weak": "import { InlineBanner } from \"seed-design/ui/inline-banner\";\nimport { IconExclamationmarkCircleFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function InlineBannerPositiveWeak() {\n  return (\n    <InlineBanner tone=\"positive\" variant=\"weak\" prefixIcon={<IconExclamationmarkCircleFill />}>\n      사업자 정보를 등록해주세요.\n    </InlineBanner>\n  );\n}",
  "inline-banner-preview": "import { InlineBanner } from \"seed-design/ui/inline-banner\";\n\nexport default function InlineBannerPreview() {\n  return <InlineBanner>사업자 정보를 등록해주세요.</InlineBanner>;\n}",
  "inline-banner-text-only": "import { InlineBanner } from \"seed-design/ui/inline-banner\";\n\nexport default function InlineBannerTextOnly() {\n  return (\n    <InlineBanner tone=\"warning\" variant=\"weak\">\n      사업자 정보를 등록해주세요.\n    </InlineBanner>\n  );\n}",
  "inline-banner-warning-solid": "import { InlineBanner } from \"seed-design/ui/inline-banner\";\nimport { IconExclamationmarkCircleFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function InlineBannerWarningSolid() {\n  return (\n    <InlineBanner tone=\"warning\" variant=\"solid\" prefixIcon={<IconExclamationmarkCircleFill />}>\n      사업자 정보를 등록해주세요.\n    </InlineBanner>\n  );\n}",
  "inline-banner-warning-weak": "import { InlineBanner } from \"seed-design/ui/inline-banner\";\nimport { IconExclamationmarkCircleFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function InlineBannerWarningWeak() {\n  return (\n    <InlineBanner tone=\"warning\" variant=\"weak\" prefixIcon={<IconExclamationmarkCircleFill />}>\n      사업자 정보를 등록해주세요.\n    </InlineBanner>\n  );\n}",
  "inline-banner-with-icon": "import { InlineBanner } from \"seed-design/ui/inline-banner\";\nimport { IconExclamationmarkCircleFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function InlineBannerWithIcon() {\n  return (\n    <InlineBanner tone=\"warning\" variant=\"weak\" prefixIcon={<IconExclamationmarkCircleFill />}>\n      사업자 정보를 등록해주세요.\n    </InlineBanner>\n  );\n}",
  "skeleton-wave-activity": "import type { ActivityComponentType } from \"@stackflow/react/future\";\nimport type * as React from \"react\";\n\nimport Layout from \"@/components/stackflow/ActivityLayout\";\nimport { Skeleton } from \"seed-design/ui/skeleton\";\nimport {\n  useSkeletonDuration,\n  useIsRealLoading,\n  useSkeletonLoading,\n  useSkeletonTimingFunction,\n  useSkeletonInitTransitionDuration,\n  useSkeletonGradient,\n} from \"@/stores/skeleton\";\n\ndeclare module \"@stackflow/config\" {\n  interface Register {\n    SkeletonWave: unknown;\n  }\n}\n\nconst Fallback = () => {\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"12px\" }}>\n      <Skeleton width=\"100%\" height=\"300px\" borderRadius=\"square\" />\n      <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"4px\" }}>\n        <Skeleton width=\"50px\" height=\"50px\" borderRadius=\"circle\" />\n        <Skeleton width=\"100%\" height=\"20px\" borderRadius=\"rounded\" />\n        <Skeleton width=\"200px\" height=\"20px\" borderRadius=\"rounded\" />\n      </div>\n    </div>\n  );\n};\n\nconst SkeletonWaveActivity: ActivityComponentType<\"SkeletonWave\"> = () => {\n  const isLoading = useSkeletonLoading();\n  const isRealLoading = useIsRealLoading();\n  const animationDuration = useSkeletonDuration();\n  const animationTiming = useSkeletonTimingFunction();\n  const initTransitionDuration = useSkeletonInitTransitionDuration();\n  const gradient = useSkeletonGradient();\n\n  return (\n    <Layout>\n      <div\n        style={\n          {\n            padding: \"16px\",\n            \"--skeleton-gradient\": gradient,\n            \"--skeleton-init-transition-duration\": initTransitionDuration,\n            \"--skeleton-animation-duration\": animationDuration,\n            \"--skeleton-animation-timing-function\": animationTiming,\n          } as React.CSSProperties\n        }\n      >\n        {isLoading ? isRealLoading && <Fallback /> : <div>content</div>}\n      </div>\n    </Layout>\n  );\n};\n\nexport default SkeletonWaveActivity;\n\nSkeletonWaveActivity.displayName = \"SkeletonWaveActivity\";",
  "switch-medium": "import { useState } from \"react\";\nimport { Switch } from \"seed-design/ui/switch\";\n\nexport default function SwitchMedium() {\n  const [isChecked, setIsChecked] = useState(false);\n\n  return (\n    <Switch size=\"medium\" checked={isChecked} onCheckedChange={setIsChecked} />\n  );\n}",
  "switch-preview": "import { useState } from \"react\";\nimport { Switch } from \"seed-design/ui/switch\";\n\nexport default function SwitchPreview() {\n  const [isChecked, setIsChecked] = useState(false);\n\n  return <Switch checked={isChecked} onCheckedChange={setIsChecked} />;\n}",
  "switch-small": "import { useState } from \"react\";\nimport { Switch } from \"seed-design/ui/switch\";\n\nexport default function SwitchSmall() {\n  const [isChecked, setIsChecked] = useState(false);\n\n  return (\n    <Switch size=\"small\" checked={isChecked} onCheckedChange={setIsChecked} />\n  );\n}",
  "tabs-alert": "import {\n  Tabs,\n  TabContent,\n  TabContentList,\n  TabTrigger,\n  TabTriggerList,\n} from \"seed-design/ui/tabs\";\n\nexport default function TabsAlert() {\n  return (\n    <div style={{ width: \"360px\" }}>\n      <Tabs defaultValue=\"1\">\n        <TabTriggerList>\n          <TabTrigger value=\"1\">라벨1</TabTrigger>\n          <TabTrigger value=\"2\" alert>\n            라벨2\n          </TabTrigger>\n          <TabTrigger value=\"3\">라벨3</TabTrigger>\n        </TabTriggerList>\n        <TabContentList>\n          <TabContent value=\"1\">\n            <Content>Content 1</Content>\n          </TabContent>\n          <TabContent value=\"2\">\n            <Content>Content 2</Content>\n          </TabContent>\n          <TabContent value=\"3\">\n            <Content>Content 3</Content>\n          </TabContent>\n        </TabContentList>\n      </Tabs>\n    </div>\n  );\n}\n\nconst Content = (props: React.PropsWithChildren) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"300px\",\n        backgroundColor: \"var(--seed-color-bg-layer-default)\",\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};",
  "tabs-disabled": "import { Tabs, TabContent, TabContentList, TabTrigger, TabTriggerList } from \"seed-design/ui/tabs\";\n\nexport default function TabsDisabled() {\n  return (\n    <div style={{ width: \"360px\" }}>\n      <Tabs defaultValue=\"1\">\n        <TabTriggerList>\n          <TabTrigger value=\"1\">라벨1</TabTrigger>\n          <TabTrigger value=\"2\" isDisabled>\n            라벨2\n          </TabTrigger>\n          <TabTrigger value=\"3\">라벨3</TabTrigger>\n        </TabTriggerList>\n        <TabContentList>\n          <TabContent value=\"1\">\n            <Content>Content 1</Content>\n          </TabContent>\n          <TabContent value=\"2\">\n            <Content>Content 2</Content>\n          </TabContent>\n          <TabContent value=\"3\">\n            <Content>Content 3</Content>\n          </TabContent>\n        </TabContentList>\n      </Tabs>\n    </div>\n  );\n}\n\nconst Content = (props: React.PropsWithChildren) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"300px\",\n        backgroundColor: \"var(--seed-color-bg-layer-default)\",\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};",
  "tabs-dynamic-height": "import { Tabs, TabContent, TabContentList, TabTrigger, TabTriggerList } from \"seed-design/ui/tabs\";\n\nexport default function TabsDynamicHeight() {\n  return (\n    <div style={{ width: \"360px\" }}>\n      <Tabs defaultValue=\"1\" lazyMode=\"unmount\" isLazy={true} isSwipeable={false}>\n        <TabTriggerList>\n          <TabTrigger value=\"1\">라벨1</TabTrigger>\n          <TabTrigger value=\"2\">라벨2</TabTrigger>\n          <TabTrigger value=\"3\">라벨3</TabTrigger>\n        </TabTriggerList>\n        <TabContentList>\n          <TabContent value=\"1\">\n            <Content height=\"100px\">Content 1</Content>\n          </TabContent>\n          <TabContent value=\"2\">\n            <Content height=\"200px\">Content 2</Content>\n          </TabContent>\n          <TabContent value=\"3\">\n            <Content height=\"300px\">Content 3</Content>\n          </TabContent>\n        </TabContentList>\n      </Tabs>\n      <div style={{ height: \"100px\", backgroundColor: \"gray\" }}>아래 컨텐츠</div>\n    </div>\n  );\n}\n\nconst Content = (props: React.PropsWithChildren<{ height: string }>) => {\n  const { height, children } = props;\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height,\n        backgroundColor: \"var(--seed-color-bg-layer-default)\",\n      }}\n    >\n      {children}\n    </div>\n  );\n};",
  "tabs-layout-fill": "import {\n  Tabs,\n  TabContent,\n  TabContentList,\n  TabTrigger,\n  TabTriggerList,\n} from \"seed-design/ui/tabs\";\n\nexport default function TabsLayoutFill() {\n  return (\n    <div style={{ width: \"360px\" }}>\n      <Tabs defaultValue=\"2\" layout=\"fill\">\n        <TabTriggerList>\n          <TabTrigger value=\"1\">라벨1</TabTrigger>\n          <TabTrigger value=\"2\">라벨2</TabTrigger>\n          <TabTrigger value=\"3\">라벨3</TabTrigger>\n        </TabTriggerList>\n        <TabContentList>\n          <TabContent value=\"1\">\n            <Content>Content 1</Content>\n          </TabContent>\n          <TabContent value=\"2\">\n            <Content>Content 2</Content>\n          </TabContent>\n          <TabContent value=\"3\">\n            <Content>Content 3</Content>\n          </TabContent>\n        </TabContentList>\n      </Tabs>\n    </div>\n  );\n}\n\nconst Content = (props: React.PropsWithChildren) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"300px\",\n        backgroundColor: \"var(--seed-color-bg-layer-default)\",\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};",
  "tabs-layout-hug": "import { Tabs, TabContent, TabContentList, TabTrigger, TabTriggerList } from \"seed-design/ui/tabs\";\n\nexport default function TabsLayoutHug() {\n  return (\n    <div style={{ width: \"360px\" }}>\n      <Tabs defaultValue=\"1\" layout=\"hug\">\n        <TabTriggerList>\n          <TabTrigger value=\"1\">라벨1</TabTrigger>\n          <TabTrigger value=\"2\">라벨2</TabTrigger>\n          <TabTrigger value=\"3\">라벨3</TabTrigger>\n        </TabTriggerList>\n        <TabContentList>\n          <TabContent value=\"1\">\n            <Content>Content 1</Content>\n          </TabContent>\n          <TabContent value=\"2\">\n            <Content>Content 2</Content>\n          </TabContent>\n          <TabContent value=\"3\">\n            <Content>Content 3</Content>\n          </TabContent>\n        </TabContentList>\n      </Tabs>\n    </div>\n  );\n}\n\nconst Content = (props: React.PropsWithChildren) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"300px\",\n        backgroundColor: \"var(--seed-color-bg-layer-default)\",\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};",
  "tabs-preview": "import { Tabs, TabContent, TabContentList, TabTrigger, TabTriggerList } from \"seed-design/ui/tabs\";\n\nexport default function TabsPreview() {\n  return (\n    <div style={{ width: \"360px\" }}>\n      <Tabs defaultValue=\"1\">\n        <TabTriggerList>\n          <TabTrigger value=\"1\">라벨1</TabTrigger>\n          <TabTrigger value=\"2\">라벨2</TabTrigger>\n          <TabTrigger value=\"3\">라벨3</TabTrigger>\n        </TabTriggerList>\n        <TabContentList>\n          <TabContent value=\"1\">\n            <Content>Content 1</Content>\n          </TabContent>\n          <TabContent value=\"2\">\n            <Content>Content 2</Content>\n          </TabContent>\n          <TabContent value=\"3\">\n            <Content>Content 3</Content>\n          </TabContent>\n        </TabContentList>\n      </Tabs>\n    </div>\n  );\n}\n\nconst Content = (props: React.PropsWithChildren) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"300px\",\n        backgroundColor: \"var(--seed-color-bg-layer-default)\",\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};",
  "tabs-size-medium": "import { Tabs, TabContent, TabContentList, TabTrigger, TabTriggerList } from \"seed-design/ui/tabs\";\n\nexport default function TabsSizeMedium() {\n  return (\n    <div style={{ width: \"360px\" }}>\n      <Tabs defaultValue=\"1\" size=\"medium\">\n        <TabTriggerList>\n          <TabTrigger value=\"1\">라벨1</TabTrigger>\n          <TabTrigger value=\"2\">라벨2</TabTrigger>\n          <TabTrigger value=\"3\">라벨3</TabTrigger>\n        </TabTriggerList>\n        <TabContentList>\n          <TabContent value=\"1\">\n            <Content>Content 1</Content>\n          </TabContent>\n          <TabContent value=\"2\">\n            <Content>Content 2</Content>\n          </TabContent>\n          <TabContent value=\"3\">\n            <Content>Content 3</Content>\n          </TabContent>\n        </TabContentList>\n      </Tabs>\n    </div>\n  );\n}\n\nconst Content = (props: React.PropsWithChildren) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"300px\",\n        backgroundColor: \"var(--seed-color-bg-layer-default)\",\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};",
  "tabs-size-small": "import { Tabs, TabContent, TabContentList, TabTrigger, TabTriggerList } from \"seed-design/ui/tabs\";\n\nexport default function TabsSizeSmall() {\n  return (\n    <div style={{ width: \"360px\" }}>\n      <Tabs defaultValue=\"1\" size=\"small\">\n        <TabTriggerList>\n          <TabTrigger value=\"1\">라벨1</TabTrigger>\n          <TabTrigger value=\"2\">라벨2</TabTrigger>\n          <TabTrigger value=\"3\">라벨3</TabTrigger>\n        </TabTriggerList>\n        <TabContentList>\n          <TabContent value=\"1\">\n            <Content>Content 1</Content>\n          </TabContent>\n          <TabContent value=\"2\">\n            <Content>Content 2</Content>\n          </TabContent>\n          <TabContent value=\"3\">\n            <Content>Content 3</Content>\n          </TabContent>\n        </TabContentList>\n      </Tabs>\n    </div>\n  );\n}\n\nconst Content = (props: React.PropsWithChildren) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"300px\",\n        backgroundColor: \"var(--seed-color-bg-layer-default)\",\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};",
  "tabs-swipeable": "import { Tabs, TabContent, TabContentList, TabTrigger, TabTriggerList } from \"seed-design/ui/tabs\";\n\nexport default function TabsSwipeable() {\n  return (\n    <div style={{ width: \"360px\" }}>\n      <Tabs defaultValue=\"1\" isSwipeable>\n        <TabTriggerList>\n          <TabTrigger value=\"1\">라벨1</TabTrigger>\n          <TabTrigger value=\"2\">라벨2</TabTrigger>\n          <TabTrigger value=\"3\">라벨3</TabTrigger>\n        </TabTriggerList>\n        <TabContentList>\n          <TabContent value=\"1\">\n            <Content>Content 1</Content>\n          </TabContent>\n          <TabContent value=\"2\">\n            <Content>Content 2</Content>\n          </TabContent>\n          <TabContent value=\"3\">\n            <Content>Content 3</Content>\n          </TabContent>\n        </TabContentList>\n      </Tabs>\n    </div>\n  );\n}\n\nconst Content = (props: React.PropsWithChildren) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"300px\",\n        backgroundColor: \"var(--seed-color-bg-layer-default)\",\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};"
}