{
  "action-button-brand-outline": "import { ActionButton } from \"seed-design/ui/action-button\";\n\nexport default function ActionButtonBrandOutline() {\n  return <ActionButton variant=\"brandOutline\">라벨</ActionButton>;\n}",
  "action-button-brand-solid": "import { ActionButton } from \"seed-design/ui/action-button\";\n\nexport default function ActionButtonBrandSolid() {\n  return <ActionButton variant=\"brandSolid\">라벨</ActionButton>;\n}",
  "action-button-danger-solid": "import { ActionButton } from \"seed-design/ui/action-button\";\n\nexport default function ActionButtonDangerSolid() {\n  return <ActionButton variant=\"dangerSolid\">라벨</ActionButton>;\n}",
  "action-button-disabled": "import { ActionButton } from \"seed-design/ui/action-button\";\n\nexport default function ActionButtonDisabled() {\n  return <ActionButton disabled>라벨</ActionButton>;\n}",
  "action-button-icon-only": "import { IconPlusFill } from \"@daangn/react-monochrome-icon\";\nimport { ActionButton } from \"seed-design/ui/action-button\";\n\nexport default function ActionButtonIconOnly() {\n  return (\n    <ActionButton layout=\"iconOnly\">\n      <IconPlusFill />\n    </ActionButton>\n  );\n}",
  "action-button-loading": "import { useState } from \"react\";\nimport { ActionButton } from \"seed-design/ui/action-button\";\n\nexport default function ActionButtonLoading() {\n  const [loading, setLoading] = useState(false);\n\n  function handleClick() {\n    setLoading(true);\n    setTimeout(() => setLoading(false), 2000);\n  }\n\n  // 이벤트 핸들링이 필요할 수 있으므로 loading은 disabled를 포함하지 않습니다. 이벤트 발생을 원하지 않는 경우, disabled 속성을 추가해주세요.\n  return (\n    <ActionButton loading={loading} onClick={handleClick}>\n      시간이 걸리는 액션\n    </ActionButton>\n  );\n}",
  "action-button-neutral-outline": "import { ActionButton } from \"seed-design/ui/action-button\";\n\nexport default function ActionButtonNeutralOutline() {\n  return <ActionButton variant=\"neutralOutline\">라벨</ActionButton>;\n}",
  "action-button-neutral-solid": "import { ActionButton } from \"seed-design/ui/action-button\";\n\nexport default function ActionButtonNeutralSolid() {\n  return <ActionButton variant=\"neutralSolid\">라벨</ActionButton>;\n}",
  "action-button-neutral-weak": "import { ActionButton } from \"seed-design/ui/action-button\";\n\nexport default function ActionButtonNeutralWeak() {\n  return <ActionButton variant=\"neutralWeak\">라벨</ActionButton>;\n}",
  "action-button-prefix-icon": "import { IconPlusFill } from \"@daangn/react-monochrome-icon\";\nimport { ActionButton } from \"seed-design/ui/action-button\";\n\nexport default function ActionButtonPrefixIcon() {\n  return <ActionButton prefixIcon={<IconPlusFill />}>라벨</ActionButton>;\n}",
  "action-button-preview": "import { ActionButton } from \"seed-design/ui/action-button\";\n\nexport default function ActionButtonPreview() {\n  return <ActionButton>라벨</ActionButton>;\n}",
  "action-button-suffix-icon": "import { IconChevronRightFill } from \"@daangn/react-monochrome-icon\";\nimport { ActionButton } from \"seed-design/ui/action-button\";\n\nexport default function ActionButtonSuffixIcon() {\n  return <ActionButton suffixIcon={<IconChevronRightFill />}>라벨</ActionButton>;\n}",
  "action-chip-icon-only": "import { IconPlusFill } from \"@daangn/react-monochrome-icon\";\nimport { ActionChip } from \"seed-design/ui/action-chip\";\n\nexport default function ActionChipIconOnly() {\n  return (\n    <ActionChip layout=\"iconOnly\">\n      <IconPlusFill />\n    </ActionChip>\n  );\n}",
  "action-chip-medium": "import { ActionChip } from \"seed-design/ui/action-chip\";\n\nexport default function ActionChipMedium() {\n  return <ActionChip size=\"medium\">라벨</ActionChip>;\n}",
  "action-chip-prefix-icon": "import { IconPlusFill } from \"@daangn/react-monochrome-icon\";\nimport { ActionChip } from \"seed-design/ui/action-chip\";\n\nexport default function ActionChipPrefixIcon() {\n  return <ActionChip prefixIcon={<IconPlusFill />}>라벨</ActionChip>;\n}",
  "action-chip-preview": "import { ActionChip } from \"seed-design/ui/action-chip\";\n\nexport default function ActionChipPreview() {\n  return <ActionChip>라벨</ActionChip>;\n}",
  "action-chip-small": "import { ActionChip } from \"seed-design/ui/action-chip\";\n\nexport default function ActionChipSmall() {\n  return <ActionChip size=\"small\">라벨</ActionChip>;\n}",
  "action-chip-suffix-icon": "import { IconChevronDownFill } from \"@daangn/react-monochrome-icon\";\nimport { ActionChip } from \"seed-design/ui/action-chip\";\n\nexport default function ActionChipSuffixIcon() {\n  return <ActionChip suffixIcon={<IconChevronDownFill />}>라벨</ActionChip>;\n}",
  "actionable-callout-danger": "import { ActionableCallout, CalloutDescription } from \"seed-design/ui/callout\";\n\nexport default function ActionableCalloutDanger() {\n  return (\n    <ActionableCallout onClick={() => window.alert(\"Hello World\")} variant=\"danger\">\n      <CalloutDescription>\n        Dolore ex occaecat Lorem ad eu. Consectetur consectetur magna pariatur aliquip enim non.\n      </CalloutDescription>\n    </ActionableCallout>\n  );\n}",
  "actionable-callout-informative": "import { ActionableCallout, CalloutDescription } from \"seed-design/ui/callout\";\n\nexport default function ActionableCalloutInformative() {\n  return (\n    <ActionableCallout onClick={() => window.alert(\"Hello World\")} variant=\"informative\">\n      <CalloutDescription>\n        Dolore ex occaecat Lorem ad eu. Consectetur consectetur magna pariatur aliquip enim non.\n      </CalloutDescription>\n    </ActionableCallout>\n  );\n}",
  "actionable-callout-magic": "import { ActionableCallout, CalloutDescription } from \"seed-design/ui/callout\";\n\nexport default function ActionableCalloutNeutral() {\n  return (\n    <ActionableCallout onClick={() => window.alert(\"Hello World\")} variant=\"magic\">\n      <CalloutDescription>\n        Dolore ex occaecat Lorem ad eu. Consectetur consectetur magna pariatur aliquip enim non.\n      </CalloutDescription>\n    </ActionableCallout>\n  );\n}",
  "actionable-callout-neutral": "import { ActionableCallout, CalloutDescription } from \"seed-design/ui/callout\";\n\nexport default function ActionableCalloutNeutral() {\n  return (\n    <ActionableCallout onClick={() => window.alert(\"Hello World\")} variant=\"neutral\">\n      <CalloutDescription>\n        Dolore ex occaecat Lorem ad eu. Consectetur consectetur magna pariatur aliquip enim non.\n      </CalloutDescription>\n    </ActionableCallout>\n  );\n}",
  "actionable-callout-preview": "import { ActionableCallout, CalloutDescription } from \"seed-design/ui/callout\";\n\nexport default function ActionableCalloutPreview() {\n  const onClick = () => window.alert(\"Hello World\");\n\n  return (\n    <div className=\"flex flex-col gap-3 w-full\">\n      <ActionableCallout onClick={onClick}>\n        <CalloutDescription>veniam</CalloutDescription>\n      </ActionableCallout>\n      <ActionableCallout onClick={onClick}>\n        <CalloutDescription>\n          기능에 대한 안내 또는 유익한 내용을 전달해요. 콜아웃은 꼭 필요한 경우에만 절제하여\n          사용해요.\n        </CalloutDescription>\n      </ActionableCallout>\n    </div>\n  );\n}",
  "actionable-callout-text-only": "import { ActionableCallout, CalloutDescription } from \"seed-design/ui/callout\";\n\nexport default function ActionableCalloutTextOnly() {\n  return (\n    <ActionableCallout onClick={() => window.alert(\"Hello World\")} variant=\"magic\">\n      <CalloutDescription>\n        Aliquip laboris excepteur enim sunt eiusmod laboris anim.\n      </CalloutDescription>\n    </ActionableCallout>\n  );\n}",
  "actionable-callout-warning": "import { ActionableCallout, CalloutDescription } from \"seed-design/ui/callout\";\n\nexport default function ActionableCalloutWarning() {\n  return (\n    <ActionableCallout onClick={() => window.alert(\"Hello World\")} variant=\"warning\">\n      <CalloutDescription>\n        Dolore ex occaecat Lorem ad eu. Consectetur consectetur magna pariatur aliquip enim non.\n      </CalloutDescription>\n    </ActionableCallout>\n  );\n}",
  "actionable-callout-with-title-text": "import { ActionableCallout, CalloutDescription, CalloutTitle } from \"seed-design/ui/callout\";\n\nexport default function ActionableCalloutWithTitleText() {\n  return (\n    <ActionableCallout onClick={() => window.alert(\"Hello World\")} variant=\"magic\">\n      <CalloutTitle>새로운 기능</CalloutTitle>\n      <CalloutDescription>\n        Aliquip laboris excepteur enim sunt eiusmod laboris anim.\n      </CalloutDescription>\n    </ActionableCallout>\n  );\n}",
  "actionable-inline-banner-activity": "import * as React from \"react\";\n\nimport {\n  ActionableInlineBanner,\n  InlineBannerDescription,\n  type ActionableInlineBannerProps,\n} from \"seed-design/ui/inline-banner\";\nimport { ActionButton } from \"seed-design/ui/action-button\";\n\nimport type { ActivityComponentType } from \"@stackflow/react/future\";\nimport AppScreen from \"@/components/stackflow/ActivityLayout\";\n\ndeclare module \"@stackflow/config\" {\n  interface Register {\n    ActionableInlineBanner: unknown;\n  }\n}\n\nconst ActionableInlineBannerActivity: ActivityComponentType<\"ActionableInlineBanner\"> = () => {\n  const [variant, setVariant] =\n    React.useState<Extract<ActionableInlineBannerProps[\"variant\"], \"neutralWeak\" | \"dangerSolid\">>(\n      \"dangerSolid\",\n    );\n\n  return (\n    <AppScreen>\n      <ActionableInlineBanner\n        variant={variant}\n        style={variant === \"dangerSolid\" ? { position: \"sticky\", top: 0 } : undefined}\n        onClick={() => window.alert(\"Hello World\")}\n      >\n        <InlineBannerDescription>\n          Lorem ipsum dolor sit amet consectetur adipisicing elit.\n        </InlineBannerDescription>\n      </ActionableInlineBanner>\n      <div style={{ display: \"flex\", flexDirection: \"column\", padding: \"1rem\", gap: \"0.75rem\" }}>\n        <ActionButton\n          onClick={() =>\n            setVariant((prev) => (prev === \"dangerSolid\" ? \"neutralWeak\" : \"dangerSolid\"))\n          }\n        >\n          Toggle tone\n        </ActionButton>\n        <p style={{ marginBlock: 0, lineHeight: 1.35 }}>\n          Lorem ipsum dolor sit, amet consectetur adipisicing elit. At a eaque fugiat sint sapiente.\n          Id, hic ex, blanditiis totam animi amet delectus temporibus quae fugiat magnam, quos eaque\n          dolorum a? Lorem ipsum dolor, sit amet consectetur adipisicing elit. Possimus labore unde\n          minus temporibus beatae commodi et nesciunt iure in dignissimos suscipit, alias ab\n          voluptatem facilis tempora numquam. Veritatis, dolorum suscipit! Lorem ipsum dolor sit,\n          amet consectetur adipisicing elit. Explicabo fugiat molestias iusto, ipsum distinctio\n          officia ad id ratione esse ducimus architecto deleniti illum reiciendis rerum, at\n          blanditiis molestiae. Cupiditate, nobis? Lorem ipsum dolor sit amet consectetur\n          adipisicing elit. Ab, magni. Aliquid inventore quaerat nemo architecto harum earum quas\n          porro repudiandae explicabo repellat repellendus magni, corporis omnis laborum, velit\n          dicta blanditiis. Lorem ipsum dolor sit, amet consectetur adipisicing elit. Debitis,\n          eveniet quas. Accusamus facere veritatis expedita delectus, asperiores numquam placeat\n          necessitatibus assumenda, nesciunt in dolorem sit provident repellendus, voluptatem earum!\n          Consequatur. Lorem ipsum dolor, sit amet consectetur adipisicing elit. Aut earum\n          asperiores aliquam magnam est delectus veritatis numquam sint porro tenetur dolores nobis,\n          deleniti voluptas quaerat, quia voluptatum soluta autem perspiciatis? Lorem ipsum dolor\n          sit amet consectetur adipisicing elit. Facilis possimus eaque aliquam maxime? Quidem enim,\n          sed itaque at veritatis nihil officia esse qui provident ipsa adipisci necessitatibus\n          officiis distinctio laborum!\n        </p>\n      </div>\n    </AppScreen>\n  );\n};\n\nexport default ActionableInlineBannerActivity;",
  "actionable-inline-banner-danger-solid": "import { ActionableInlineBanner, InlineBannerDescription } from \"seed-design/ui/inline-banner\";\nimport { IconExclamationmarkCircleFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function ActionableInlineBannerDangerSolid() {\n  return (\n    <ActionableInlineBanner\n      onClick={() => window.alert(\"Hello World\")}\n      variant=\"dangerSolid\"\n      icon={<IconExclamationmarkCircleFill />}\n    >\n      <InlineBannerDescription>사업자 정보를 등록해주세요.</InlineBannerDescription>\n    </ActionableInlineBanner>\n  );\n}",
  "actionable-inline-banner-danger-weak": "import { ActionableInlineBanner, InlineBannerDescription } from \"seed-design/ui/inline-banner\";\nimport { IconExclamationmarkCircleFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function ActionableInlineBannerDangerWeak() {\n  return (\n    <ActionableInlineBanner\n      onClick={() => window.alert(\"Hello World\")}\n      variant=\"dangerWeak\"\n      icon={<IconExclamationmarkCircleFill />}\n    >\n      <InlineBannerDescription>사업자 정보를 등록해주세요.</InlineBannerDescription>\n    </ActionableInlineBanner>\n  );\n}",
  "actionable-inline-banner-informative-weak": "import { ActionableInlineBanner, InlineBannerDescription } from \"seed-design/ui/inline-banner\";\nimport { IconExclamationmarkCircleFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function ActionableInlineBannerInformativeWeak() {\n  return (\n    <ActionableInlineBanner\n      onClick={() => window.alert(\"Hello World\")}\n      variant=\"informativeWeak\"\n      icon={<IconExclamationmarkCircleFill />}\n    >\n      <InlineBannerDescription>사업자 정보를 등록해주세요.</InlineBannerDescription>\n    </ActionableInlineBanner>\n  );\n}",
  "actionable-inline-banner-neutral-weak": "import { ActionableInlineBanner, InlineBannerDescription } from \"seed-design/ui/inline-banner\";\nimport { IconExclamationmarkCircleFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function ActionableInlineBannerNeutralWeak() {\n  return (\n    <ActionableInlineBanner\n      onClick={() => window.alert(\"Hello World\")}\n      variant=\"neutralWeak\"\n      icon={<IconExclamationmarkCircleFill />}\n    >\n      <InlineBannerDescription>사업자 정보를 등록해주세요.</InlineBannerDescription>\n    </ActionableInlineBanner>\n  );\n}",
  "actionable-inline-banner-positive-weak": "import { ActionableInlineBanner, InlineBannerDescription } from \"seed-design/ui/inline-banner\";\nimport { IconExclamationmarkCircleFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function ActionableInlineBannerPositiveWeak() {\n  return (\n    <ActionableInlineBanner\n      onClick={() => window.alert(\"Hello World\")}\n      variant=\"positiveWeak\"\n      icon={<IconExclamationmarkCircleFill />}\n    >\n      <InlineBannerDescription>사업자 정보를 등록해주세요.</InlineBannerDescription>\n    </ActionableInlineBanner>\n  );\n}",
  "actionable-inline-banner-preview": "import { ActionableInlineBanner, InlineBannerDescription } from \"seed-design/ui/inline-banner\";\n\nexport default function ActionableInlineBannerPreview() {\n  const onClick = () => window.alert(\"Hello World\");\n\n  return (\n    <div className=\"flex flex-col gap-3 w-full\">\n      <ActionableInlineBanner onClick={onClick}>\n        <InlineBannerDescription>ullamco</InlineBannerDescription>\n      </ActionableInlineBanner>\n      <ActionableInlineBanner onClick={onClick}>\n        <InlineBannerDescription>\n          Ut veniam in ea ea anim laborum magna dolore ea laborum duis ut aute mollit amet.\n        </InlineBannerDescription>\n      </ActionableInlineBanner>\n    </div>\n  );\n}",
  "actionable-inline-banner-text-only": "import { ActionableInlineBanner, InlineBannerDescription } from \"seed-design/ui/inline-banner\";\n\nexport default function ActionableInlineBannerTextOnly() {\n  return (\n    <ActionableInlineBanner variant=\"informativeWeak\" onClick={() => window.alert(\"Hello World\")}>\n      <InlineBannerDescription>다른 사람과 예약된 물품이 있</InlineBannerDescription>\n      어요.\n    </ActionableInlineBanner>\n  );\n}",
  "actionable-inline-banner-warning-solid": "import { ActionableInlineBanner, InlineBannerDescription } from \"seed-design/ui/inline-banner\";\nimport { IconExclamationmarkCircleFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function ActionableInlineBannerWarningSolid() {\n  return (\n    <ActionableInlineBanner\n      onClick={() => window.alert(\"Hello World\")}\n      variant=\"warningSolid\"\n      icon={<IconExclamationmarkCircleFill />}\n    >\n      <InlineBannerDescription>사업자 정보를 등록해주세요.</InlineBannerDescription>\n    </ActionableInlineBanner>\n  );\n}",
  "actionable-inline-banner-warning-weak": "import { ActionableInlineBanner, InlineBannerDescription } from \"seed-design/ui/inline-banner\";\nimport { IconExclamationmarkCircleFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function ActionableInlineBannerWarningWeak() {\n  return (\n    <ActionableInlineBanner\n      onClick={() => window.alert(\"Hello World\")}\n      variant=\"warningWeak\"\n      icon={<IconExclamationmarkCircleFill />}\n    >\n      <InlineBannerDescription>사업자 정보를 등록해주세요.</InlineBannerDescription>\n    </ActionableInlineBanner>\n  );\n}",
  "actionable-inline-banner-with-icon-and-title-text": "import { IconILowercaseSerifCircleFill } from \"@daangn/react-monochrome-icon\";\nimport {\n  ActionableInlineBanner,\n  InlineBannerDescription,\n  InlineBannerTitle,\n} from \"seed-design/ui/inline-banner\";\n\nexport default function ActionableInlineBannerWithIconAndTitleText() {\n  return (\n    <ActionableInlineBanner\n      onClick={() => window.alert(\"Hello World\")}\n      variant=\"informativeWeak\"\n      icon={<IconILowercaseSerifCircleFill />}\n    >\n      <InlineBannerTitle>예약</InlineBannerTitle>\n      <InlineBannerDescription>다른 사람과 예약된 물품이 있어요.</InlineBannerDescription>\n    </ActionableInlineBanner>\n  );\n}",
  "actionable-inline-banner-with-icon": "import { ActionableInlineBanner, InlineBannerDescription } from \"seed-design/ui/inline-banner\";\nimport { IconILowercaseSerifCircleFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function ActionableInlineBannerWithIcon() {\n  return (\n    <ActionableInlineBanner\n      onClick={() => window.alert(\"Hello World\")}\n      variant=\"informativeWeak\"\n      icon={<IconILowercaseSerifCircleFill />}\n    >\n      <InlineBannerDescription>다른 사람과 예약된 물품이 있어요.</InlineBannerDescription>\n    </ActionableInlineBanner>\n  );\n}",
  "alert-dialog-default-activity": "import * as React from \"react\";\n\nimport { AppScreen } from \"@stackflow/plugin-basic-ui\";\nimport { type ActivityComponentType, useStepFlow, useStack } from \"@stackflow/react/future\";\n\nimport { ActionButton } from \"seed-design/ui/action-button\";\nimport { AlertDialog as UIAlertDialog } from \"seed-design/ui/alert-dialog\";\n\ndeclare module \"@stackflow/config\" {\n  interface Register {\n    AlertDialogDefault: {\n      alert: boolean;\n    };\n  }\n}\n\nconst AlertDialogDefaultActivity: ActivityComponentType<\"AlertDialogDefault\"> = ({ params }) => {\n  const { alert } = params;\n  const stack = useStack();\n  const { pushStep, popStep } = useStepFlow(\"AlertDialogDefault\");\n\n  const appBarLeft = () => <div>Left</div>;\n  const appBarRight = () => <div>Right</div>;\n\n  const onInteractOutside = () => {\n    popStep();\n  };\n\n  const onButtonClick = () => {\n    pushStep({\n      alert: true,\n    });\n  };\n\n  const mainActivitySteps = stack.activities[0].steps;\n\n  return (\n    <AppScreen\n      appBar={{\n        renderLeft: appBarLeft,\n        renderRight: appBarRight,\n      }}\n    >\n      <div\n        style={{\n          position: \"relative\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"100%\",\n          width: \"100%\",\n        }}\n      >\n        <ActionButton onClick={onButtonClick}>Open</ActionButton>\n        {alert && (\n          <UIAlertDialog\n            onInteractOutside={onInteractOutside}\n            title=\"Title\"\n            description=\"Description\"\n          />\n        )}\n      </div>\n\n      <div\n        style={{\n          position: \"fixed\",\n          bottom: \"0\",\n          right: \"0\",\n          padding: \"8px\",\n        }}\n      >\n        <span\n          style={{\n            fontSize: \"12px\",\n            color: \"var(--seed-semantic-color-divider-3)\",\n          }}\n        >\n          Steps\n        </span>\n        {mainActivitySteps.map((step) => (\n          <div\n            style={{\n              fontSize: \"12px\",\n              width: \"1rem\",\n              height: \"1rem\",\n              borderRadius: \"50%\",\n              border: \"1px solid var(--seed-semantic-color-divider-3)\",\n              margin: \"8px\",\n            }}\n            key={step.id}\n          />\n        ))}\n      </div>\n\n      <div\n        style={{\n          position: \"fixed\",\n          bottom: \"0\",\n          left: \"0\",\n          padding: \"8px\",\n          zIndex: 1000,\n        }}\n      >\n        <ActionButton onClick={() => popStep}>Back</ActionButton>\n      </div>\n    </AppScreen>\n  );\n};\n\nexport default AlertDialogDefaultActivity;\n\nAlertDialogDefaultActivity.displayName = \"AlertDialogDefaultActivity\";",
  "alert-dialog-preview": "import * as React from \"react\";\n\nimport { AlertDialog } from \"seed-design/ui/alert-dialog\";\n\nexport default function AlertDialogPreview() {\n  return <AlertDialog title=\"Title\" description=\"Description\" />;\n}",
  "avatar-preview": "import { Flex } from \"@/registry/ui/flex\";\nimport { Avatar, AvatarBadge, AvatarFallback, AvatarImage } from \"seed-design/ui/avatar\";\n\nfunction IdentityPlaceholder() {\n  return (\n    <div style={{ width: \"100%\", height: \"100%\", backgroundColor: \"#dcdee3\" }}>\n      <svg viewBox=\"0 0 640 640\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M420.093 431.464C471.194 398.801 505.076 341.555 505.076 276.392C505.076 174.831 422.774 92.5 321.25 92.5C219.726 92.5 137.424 174.831 137.424 276.392C137.424 341.555 171.306 398.801 222.407 431.464C136.423 466.256 72.9584 545.086 59.9561 640H582.544C569.542 545.086 506.077 466.256 420.093 431.464ZM262.5 254.75C257.53 254.75 253.5 258.779 253.5 263.75V273.75C253.5 278.721 257.53 282.75 262.5 282.75C267.471 282.75 271.5 278.721 271.5 273.75V263.75C271.5 258.779 267.471 254.75 262.5 254.75ZM377.5 254.75C372.53 254.75 368.5 258.779 368.5 263.75V273.75C368.5 278.721 372.53 282.75 377.5 282.75C382.471 282.75 386.5 278.721 386.5 273.75V263.75C386.5 258.779 382.471 254.75 377.5 254.75ZM263.768 315.067C267.873 313.433 272.525 315.437 274.159 319.542C281.44 337.839 299.308 350.75 320.172 350.75C341.036 350.75 358.903 337.839 366.184 319.542C367.818 315.437 372.47 313.433 376.575 315.067C380.681 316.701 382.684 321.353 381.05 325.458C371.429 349.636 347.809 366.75 320.172 366.75C292.535 366.75 268.914 349.636 259.293 325.458C257.659 321.353 259.663 316.701 263.768 315.067Z\"\n          fill=\"#f7f8f9\"\n        />\n      </svg>\n    </div>\n  );\n}\n\nexport default function AvatarPreview() {\n  return (\n    <Flex gap=\"s4\">\n      <Avatar size=\"80\">\n        <AvatarImage src=\"https://avatars.githubusercontent.com/u/62840502?v=4\" />\n        <AvatarFallback>\n          <IdentityPlaceholder />\n        </AvatarFallback>\n        <AvatarBadge>+</AvatarBadge>\n      </Avatar>\n      <Avatar size=\"80\">\n        <AvatarImage src=\"...\" />\n        <AvatarFallback>\n          <IdentityPlaceholder />\n        </AvatarFallback>\n      </Avatar>\n    </Flex>\n  );\n}",
  "avatar-size": "import { Flex } from \"@/registry/ui/flex\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"seed-design/ui/avatar\";\n\nexport default function AvatarSize() {\n  return (\n    <Flex gap=\"s4\">\n      <Avatar size=\"20\">\n        <AvatarImage src=\"https://avatars.githubusercontent.com/u/62840502?v=4\" />\n        <AvatarFallback>L</AvatarFallback>\n      </Avatar>\n      <Avatar size=\"24\">\n        <AvatarImage src=\"https://avatars.githubusercontent.com/u/62840502?v=4\" />\n        <AvatarFallback>L</AvatarFallback>\n      </Avatar>\n      <Avatar size=\"36\">\n        <AvatarImage src=\"https://avatars.githubusercontent.com/u/62840502?v=4\" />\n        <AvatarFallback>L</AvatarFallback>\n      </Avatar>\n      <Avatar size=\"48\">\n        <AvatarImage src=\"https://avatars.githubusercontent.com/u/62840502?v=4\" />\n        <AvatarFallback>L</AvatarFallback>\n      </Avatar>\n      <Avatar size=\"64\">\n        <AvatarImage src=\"https://avatars.githubusercontent.com/u/62840502?v=4\" />\n        <AvatarFallback>L</AvatarFallback>\n      </Avatar>\n      <Avatar size=\"80\">\n        <AvatarImage src=\"https://avatars.githubusercontent.com/u/62840502?v=4\" />\n        <AvatarFallback>L</AvatarFallback>\n      </Avatar>\n      <Avatar size=\"96\">\n        <AvatarImage src=\"https://avatars.githubusercontent.com/u/62840502?v=4\" />\n        <AvatarFallback>L</AvatarFallback>\n      </Avatar>\n    </Flex>\n  );\n}",
  "badge-as-child": "import { Badge } from \"seed-design/ui/badge\";\n\nexport default function BadgeAsChild() {\n  return (\n    <Badge asChild>\n      <a href=\"https://example.com\" target=\"_blank\" rel=\"noreferrer\">\n        링크\n      </a>\n    </Badge>\n  );\n}",
  "badge-brand": "import { Badge } from \"seed-design/ui/badge\";\n\nexport default function BadgeBrand() {\n  return <Badge tone=\"brand\">라벨</Badge>;\n}",
  "badge-danger": "import { Badge } from \"seed-design/ui/badge\";\n\nexport default function BadgeDanger() {\n  return <Badge tone=\"danger\">라벨</Badge>;\n}",
  "badge-informative": "import { Badge } from \"seed-design/ui/badge\";\n\nexport default function BadgeInformative() {\n  return <Badge tone=\"informative\">라벨</Badge>;\n}",
  "badge-large": "import { Badge } from \"seed-design/ui/badge\";\n\nexport default function BadgeLarge() {\n  return <Badge size=\"large\">라벨</Badge>;\n}",
  "badge-medium": "import { Badge } from \"seed-design/ui/badge\";\n\nexport default function BadgeMedium() {\n  return <Badge size=\"medium\">라벨</Badge>;\n}",
  "badge-neutral": "import { Badge } from \"seed-design/ui/badge\";\n\nexport default function BadgeNeutral() {\n  return <Badge tone=\"neutral\">라벨</Badge>;\n}",
  "badge-outlined": "import { Badge } from \"seed-design/ui/badge\";\n\nexport default function BadgeOutlined() {\n  return <Badge variant=\"outlined\">라벨</Badge>;\n}",
  "badge-pill": "import { Badge } from \"seed-design/ui/badge\";\n\nexport default function BadgeRectangle() {\n  return <Badge shape=\"pill\">라벨</Badge>;\n}",
  "badge-positive": "import { Badge } from \"seed-design/ui/badge\";\n\nexport default function BadgePositive() {\n  return <Badge tone=\"positive\">라벨</Badge>;\n}",
  "badge-preview": "import { Badge } from \"seed-design/ui/badge\";\n\nexport default function BadgePreview() {\n  return <Badge>라벨</Badge>;\n}",
  "badge-rectangle": "import { Badge } from \"seed-design/ui/badge\";\n\nexport default function BadgeRectangle() {\n  return <Badge shape=\"rectangle\">라벨</Badge>;\n}",
  "badge-solid": "import { Badge } from \"seed-design/ui/badge\";\n\nexport default function BadgeSolid() {\n  return <Badge variant=\"solid\">라벨</Badge>;\n}",
  "badge-weak": "import { Badge } from \"seed-design/ui/badge\";\n\nexport default function BadgeWeak() {\n  return <Badge variant=\"weak\">라벨</Badge>;\n}",
  "callout-danger": "import { Callout, CalloutDescription } from \"seed-design/ui/callout\";\n\nexport default function CalloutDanger() {\n  return (\n    <Callout variant=\"danger\">\n      <CalloutDescription>\n        Dolore ex occaecat Lorem ad eu. Consectetur consectetur magna pariatur aliquip enim non.\n      </CalloutDescription>\n    </Callout>\n  );\n}",
  "callout-informative": "import { Callout, CalloutDescription } from \"seed-design/ui/callout\";\n\nexport default function CalloutInformative() {\n  return (\n    <Callout variant=\"informative\">\n      <CalloutDescription>\n        Dolore ex occaecat Lorem ad eu. Consectetur consectetur magna pariatur aliquip enim non.\n      </CalloutDescription>\n    </Callout>\n  );\n}",
  "callout-magic": "import { Callout, CalloutDescription } from \"seed-design/ui/callout\";\n\nexport default function CalloutNeutral() {\n  return (\n    <Callout variant=\"magic\">\n      <CalloutDescription>\n        Dolore ex occaecat Lorem ad eu. Consectetur consectetur magna pariatur aliquip enim non.\n      </CalloutDescription>\n    </Callout>\n  );\n}",
  "callout-neutral": "import { Callout, CalloutDescription } from \"seed-design/ui/callout\";\n\nexport default function CalloutNeutral() {\n  return (\n    <Callout variant=\"neutral\">\n      <CalloutDescription>\n        Dolore ex occaecat Lorem ad eu. Consectetur consectetur magna pariatur aliquip enim non.\n      </CalloutDescription>\n    </Callout>\n  );\n}",
  "callout-preview": "import { Callout, CalloutDescription } from \"seed-design/ui/callout\";\n\nexport default function CalloutPreview() {\n  return (\n    <div className=\"flex flex-col gap-3 w-full\">\n      <Callout>\n        <CalloutDescription>veniam</CalloutDescription>\n      </Callout>\n      <Callout>\n        <CalloutDescription>\n          기능에 대한 안내 또는 유익한 내용을 전달해요. 콜아웃은 꼭 필요한 경우에만 절제하여\n          사용해요.\n        </CalloutDescription>\n      </Callout>\n    </div>\n  );\n}",
  "callout-text-only": "import { Callout, CalloutDescription } from \"seed-design/ui/callout\";\n\nexport default function CalloutTextOnly() {\n  return (\n    <Callout variant=\"magic\">\n      <CalloutDescription>\n        Aliquip laboris excepteur enim sunt eiusmod laboris anim.\n      </CalloutDescription>\n    </Callout>\n  );\n}",
  "callout-warning": "import { Callout, CalloutDescription } from \"seed-design/ui/callout\";\n\nexport default function CalloutWarning() {\n  return (\n    <Callout variant=\"warning\">\n      <CalloutDescription>\n        Dolore ex occaecat Lorem ad eu. Consectetur consectetur magna pariatur aliquip enim non.\n      </CalloutDescription>\n    </Callout>\n  );\n}",
  "callout-with-all": "import { IconSparkle2Fill } from \"@daangn/react-monochrome-icon\";\nimport { Callout, CalloutDescription, CalloutLink, CalloutTitle } from \"seed-design/ui/callout\";\n\nexport default function CalloutWithAll() {\n  return (\n    <Callout variant=\"magic\" icon={<IconSparkle2Fill />}>\n      <CalloutTitle>새로운 기능</CalloutTitle>\n      <CalloutDescription>\n        Aliquip laboris excepteur enim sunt eiusmod laboris anim.\n      </CalloutDescription>\n      <CalloutLink onClick={() => window.alert(\"Hello World\")}>시도해 보기</CalloutLink>\n    </Callout>\n  );\n}",
  "callout-with-icon": "import { IconSparkle2Fill } from \"@daangn/react-monochrome-icon\";\nimport { Callout, CalloutDescription } from \"seed-design/ui/callout\";\n\nexport default function CalloutWithIcon() {\n  return (\n    <Callout variant=\"magic\" icon={<IconSparkle2Fill />}>\n      <CalloutDescription>\n        Aliquip laboris excepteur enim sunt eiusmod laboris anim.\n      </CalloutDescription>\n    </Callout>\n  );\n}",
  "callout-with-link-as-child": "import { Callout, CalloutDescription, CalloutLink } from \"seed-design/ui/callout\";\n\nexport default function CalloutWithLink() {\n  return (\n    <Callout variant=\"magic\">\n      <CalloutDescription>\n        Aliquip laboris excepteur enim sunt eiusmod laboris anim.\n      </CalloutDescription>\n      <CalloutLink asChild>\n        <a href=\"https://www.daangn.com\" target=\"_blank\" rel=\"noreferrer\">\n          시도해 보기\n        </a>\n      </CalloutLink>\n    </Callout>\n  );\n}",
  "callout-with-link": "import { Callout, CalloutDescription, CalloutLink } from \"seed-design/ui/callout\";\n\nexport default function CalloutWithLink() {\n  return (\n    <Callout variant=\"magic\">\n      <CalloutDescription>\n        Aliquip laboris excepteur enim sunt eiusmod laboris anim.\n      </CalloutDescription>\n      <CalloutLink onClick={() => window.alert(\"Hello World\")}>시도해 보기</CalloutLink>\n    </Callout>\n  );\n}",
  "callout-with-title-text": "import { Callout, CalloutDescription, CalloutTitle } from \"seed-design/ui/callout\";\n\nexport default function CalloutWithTitleText() {\n  return (\n    <Callout variant=\"magic\">\n      <CalloutTitle>새로운 기능</CalloutTitle>\n      <CalloutDescription>\n        Aliquip laboris excepteur enim sunt eiusmod laboris anim.\n      </CalloutDescription>\n    </Callout>\n  );\n}",
  "checkbox-bold": "import { Checkbox } from \"seed-design/ui/checkbox\";\n\nexport default function CheckboxBold() {\n  return <Checkbox label=\"Bold Label Text\" bold />;\n}",
  "checkbox-disabled": "import { Checkbox } from \"seed-design/ui/checkbox\";\n\nexport default function CheckboxDisabled() {\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"8px\" }}>\n      <Checkbox defaultChecked label=\"Disabled Checked, Square\" disabled />\n      <Checkbox checked={false} label=\"Disabled without Checked, Square\" disabled />\n      <Checkbox variant=\"ghost\" defaultChecked label=\"Disabled Checked, Ghost\" disabled />\n      <Checkbox variant=\"ghost\" checked={false} label=\"Disabled without Checked, Ghost\" disabled />\n    </div>\n  );\n}",
  "checkbox-indeterminate": "import { Checkbox } from \"seed-design/ui/checkbox\";\n\nexport default function CheckboxIndeterminate() {\n  return <Checkbox defaultChecked label=\"indeterminate\" indeterminate />;\n}",
  "checkbox-long-text": "import { Checkbox } from \"seed-design/ui/checkbox\";\n\nexport default function CheckboxLongText() {\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"8px\" }}>\n      <Checkbox\n        size=\"small\"\n        label=\"Lorem ipsum dolor sit, amet consectetur adipisicing elit. At a eaque fugiat sint sapiente.\n          Id, hic ex, blanditiis totam animi amet delectus temporibus quae fugiat magnam, quos eaque\n          dolorum a? Lorem ipsum dolor, sit amet consectetur adipisicing elit. Possimus labore unde\n          minus temporibus beatae commodi et nesciunt iure in dignissimos suscipit, alias ab\n          voluptatem facilis tempora numquam. Veritatis, dolorum suscipit! Lorem ipsum dolor sit,\n          amet consectetur adipisicing elit. Explicabo fugiat molestias iusto, ipsum distinctio\n          officia ad id ratione esse ducimus architecto deleniti illum reiciendis rerum, at\n          blanditiis molestiae. Cupiditate, nobis? Lorem ipsum dolor sit amet consectetur\n          adipisicing elit. Ab, magni. Aliquid inventore quaerat nemo architecto harum earum quas\n          porro repudiandae explicabo repellat repellendus magni, corporis omnis laborum, velit\n          dicta blanditiis. Lorem ipsum dolor sit, amet consectetur adipisicing elit. Debitis,\n          eveniet quas. Accusamus facere veritatis expedita delectus, asperiores numquam placeat\n          necessitatibus assumenda, nesciunt in dolorem sit provident repellendus, voluptatem earum!\n          Consequatur. Lorem ipsum dolor, sit amet consectetur adipisicing elit. Aut earum\n          asperiores aliquam magnam est delectus veritatis numquam sint porro tenetur dolores nobis,\n          deleniti voluptas quaerat, quia voluptatum soluta autem perspiciatis? Lorem ipsum dolor\n          sit amet consectetur adipisicing elit. Facilis possimus eaque aliquam maxime? Quidem enim,\n          sed itaque at veritatis nihil officia esse qui provident ipsa adipisci necessitatibus\n          officiis distinctio laborum!\"\n      />\n      <Checkbox\n        size=\"medium\"\n        label=\"Lorem ipsum dolor sit, amet consectetur adipisicing elit. At a eaque fugiat sint sapiente.\n          Id, hic ex, blanditiis totam animi amet delectus temporibus quae fugiat magnam, quos eaque\n          dolorum a? Lorem ipsum dolor, sit amet consectetur adipisicing elit. Possimus labore unde\n          minus temporibus beatae commodi et nesciunt iure in dignissimos suscipit, alias ab\n          voluptatem facilis tempora numquam. Veritatis, dolorum suscipit! Lorem ipsum dolor sit,\n          amet consectetur adipisicing elit. Explicabo fugiat molestias iusto, ipsum distinctio\n          officia ad id ratione esse ducimus architecto deleniti illum reiciendis rerum, at\n          blanditiis molestiae. Cupiditate, nobis? Lorem ipsum dolor sit amet consectetur\n          adipisicing elit. Ab, magni. Aliquid inventore quaerat nemo architecto harum earum quas\n          porro repudiandae explicabo repellat repellendus magni, corporis omnis laborum, velit\n          dicta blanditiis. Lorem ipsum dolor sit, amet consectetur adipisicing elit. Debitis,\n          eveniet quas. Accusamus facere veritatis expedita delectus, asperiores numquam placeat\n          necessitatibus assumenda, nesciunt in dolorem sit provident repellendus, voluptatem earum!\n          Consequatur. Lorem ipsum dolor, sit amet consectetur adipisicing elit. Aut earum\n          asperiores aliquam magnam est delectus veritatis numquam sint porro tenetur dolores nobis,\n          deleniti voluptas quaerat, quia voluptatum soluta autem perspiciatis? Lorem ipsum dolor\n          sit amet consectetur adipisicing elit. Facilis possimus eaque aliquam maxime? Quidem enim,\n          sed itaque at veritatis nihil officia esse qui provident ipsa adipisci necessitatibus\n          officiis distinctio laborum!\"\n      />\n      <Checkbox\n        size=\"large\"\n        label=\"Lorem ipsum dolor sit, amet consectetur adipisicing elit. At a eaque fugiat sint sapiente.\n          Id, hic ex, blanditiis totam animi amet delectus temporibus quae fugiat magnam, quos eaque\n          dolorum a? Lorem ipsum dolor, sit amet consectetur adipisicing elit. Possimus labore unde\n          minus temporibus beatae commodi et nesciunt iure in dignissimos suscipit, alias ab\n          voluptatem facilis tempora numquam. Veritatis, dolorum suscipit! Lorem ipsum dolor sit,\n          amet consectetur adipisicing elit. Explicabo fugiat molestias iusto, ipsum distinctio\n          officia ad id ratione esse ducimus architecto deleniti illum reiciendis rerum, at\n          blanditiis molestiae. Cupiditate, nobis? Lorem ipsum dolor sit amet consectetur\n          adipisicing elit. Ab, magni. Aliquid inventore quaerat nemo architecto harum earum quas\n          porro repudiandae explicabo repellat repellendus magni, corporis omnis laborum, velit\n          dicta blanditiis. Lorem ipsum dolor sit, amet consectetur adipisicing elit. Debitis,\n          eveniet quas. Accusamus facere veritatis expedita delectus, asperiores numquam placeat\n          necessitatibus assumenda, nesciunt in dolorem sit provident repellendus, voluptatem earum!\n          Consequatur. Lorem ipsum dolor, sit amet consectetur adipisicing elit. Aut earum\n          asperiores aliquam magnam est delectus veritatis numquam sint porro tenetur dolores nobis,\n          deleniti voluptas quaerat, quia voluptatum soluta autem perspiciatis? Lorem ipsum dolor\n          sit amet consectetur adipisicing elit. Facilis possimus eaque aliquam maxime? Quidem enim,\n          sed itaque at veritatis nihil officia esse qui provident ipsa adipisci necessitatibus\n          officiis distinctio laborum!\"\n      />\n    </div>\n  );\n}",
  "checkbox-preview": "import { Checkbox } from \"seed-design/ui/checkbox\";\n\nexport default function CheckboxPreview() {\n  return <Checkbox label=\"Hello World\" />;\n}",
  "checkbox-size": "import { Checkbox } from \"seed-design/ui/checkbox\";\n\nexport default function CheckboxSize() {\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"8px\" }}>\n      <Checkbox label=\"Small\" size=\"small\" />\n      <Checkbox label=\"Medium (default)\" size=\"medium\" />\n      <Checkbox label=\"Large\" size=\"large\" />\n    </div>\n  );\n}",
  "checkbox-variant": "import { Checkbox } from \"seed-design/ui/checkbox\";\n\nexport default function CheckboxVariant() {\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"8px\" }}>\n      <Checkbox label=\"Square (default)\" variant=\"square\" />\n      <Checkbox label=\"Ghost\" variant=\"ghost\" />\n    </div>\n  );\n}",
  "chip-tabs-basic-activity": "import * as React from \"react\";\n\nimport { ChipTabs, ChipTabTrigger, ChipTabTriggerList } from \"seed-design/ui/chip-tabs\";\n\nimport type { ActivityComponentType } from \"@stackflow/react/future\";\nimport AppScreen from \"@/components/stackflow/ActivityLayout\";\n\ndeclare module \"@stackflow/config\" {\n  interface Register {\n    ChipTabsBasic: unknown;\n  }\n}\n\nconst ChipTabsBasicActivity: ActivityComponentType<\"ChipTabsBasic\"> = () => {\n  const [value, setValue] = React.useState(\"1\");\n\n  const commonStyle = {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#eeeeee\",\n    height: \"100%\",\n  };\n\n  return (\n    <AppScreen>\n      <ChipTabs\n        variant=\"neutralSolid\"\n        defaultValue=\"1\"\n        value={value}\n        onValueChange={(value) => setValue(value)}\n      >\n        <ChipTabTriggerList>\n          <ChipTabTrigger value=\"1\">라벨1</ChipTabTrigger>\n          <ChipTabTrigger value=\"2\">라벨2</ChipTabTrigger>\n          <ChipTabTrigger value=\"3\">라벨3</ChipTabTrigger>\n        </ChipTabTriggerList>\n      </ChipTabs>\n      {value === \"1\" && <div style={commonStyle}>content 1</div>}\n      {value === \"2\" && <div style={commonStyle}>content 2</div>}\n      {value === \"3\" && <div style={commonStyle}>content 3</div>}\n    </AppScreen>\n  );\n};\n\nexport default ChipTabsBasicActivity;",
  "chip-tabs-preview": "import * as React from \"react\";\nimport { ChipTabs, ChipTabTrigger, ChipTabTriggerList } from \"seed-design/ui/chip-tabs\";\n\nexport default function ChipTabsPreview() {\n  const [value, setValue] = React.useState(\"1\");\n  return (\n    <>\n      <ChipTabs\n        variant=\"neutralSolid\"\n        defaultValue=\"1\"\n        value={value}\n        onValueChange={(value) => setValue(value)}\n      >\n        <ChipTabTriggerList>\n          <ChipTabTrigger value=\"1\">라벨1</ChipTabTrigger>\n          <ChipTabTrigger value=\"2\">라벨2</ChipTabTrigger>\n          <ChipTabTrigger value=\"3\">라벨3</ChipTabTrigger>\n        </ChipTabTriggerList>\n      </ChipTabs>\n      {value === \"1\" && <div>content 1</div>}\n      {value === \"2\" && <div>content 2</div>}\n      {value === \"3\" && <div>content 3</div>}\n    </>\n  );\n}",
  "chip-tabs-variant-brand-solid": "import * as React from \"react\";\nimport { ChipTabs, ChipTabTrigger, ChipTabTriggerList } from \"seed-design/ui/chip-tabs\";\n\nexport default function ChipTabsVariantBrandSolid() {\n  const [value, setValue] = React.useState(\"1\");\n  return (\n    <>\n      <ChipTabs\n        variant=\"brandSolid\"\n        defaultValue=\"1\"\n        value={value}\n        onValueChange={(value) => setValue(value)}\n      >\n        <ChipTabTriggerList>\n          <ChipTabTrigger value=\"1\">라벨1</ChipTabTrigger>\n          <ChipTabTrigger value=\"2\">라벨2</ChipTabTrigger>\n          <ChipTabTrigger value=\"3\">라벨3</ChipTabTrigger>\n        </ChipTabTriggerList>\n      </ChipTabs>\n      {value === \"1\" && <div>content 1</div>}\n      {value === \"2\" && <div>content 2</div>}\n      {value === \"3\" && <div>content 3</div>}\n    </>\n  );\n}",
  "chip-tabs-variant-neutral-solid": "import * as React from \"react\";\nimport { ChipTabs, ChipTabTrigger, ChipTabTriggerList } from \"seed-design/ui/chip-tabs\";\n\nexport default function ChipTabsVariantNeutralSolid() {\n  const [value, setValue] = React.useState(\"1\");\n  return (\n    <>\n      <ChipTabs\n        variant=\"neutralSolid\"\n        defaultValue=\"1\"\n        value={value}\n        onValueChange={(value) => setValue(value)}\n      >\n        <ChipTabTriggerList>\n          <ChipTabTrigger value=\"1\">라벨1</ChipTabTrigger>\n          <ChipTabTrigger value=\"2\">라벨2</ChipTabTrigger>\n          <ChipTabTrigger value=\"3\">라벨3</ChipTabTrigger>\n        </ChipTabTriggerList>\n      </ChipTabs>\n      {value === \"1\" && <div>content 1</div>}\n      {value === \"2\" && <div>content 2</div>}\n      {value === \"3\" && <div>content 3</div>}\n    </>\n  );\n}",
  "control-chip-icon-only": "import { IconPlusFill } from \"@daangn/react-monochrome-icon\";\nimport { ControlChip } from \"seed-design/ui/control-chip\";\n\nexport default function ControlChipIconOnly() {\n  return (\n    <ControlChip.Toggle layout=\"iconOnly\">\n      <IconPlusFill />\n    </ControlChip.Toggle>\n  );\n}",
  "control-chip-medium": "import { ControlChip } from \"seed-design/ui/control-chip\";\n\nexport default function ActionChipMedium() {\n  return <ControlChip.Toggle size=\"medium\">라벨</ControlChip.Toggle>;\n}",
  "control-chip-prefix-icon": "import { IconPlusFill } from \"@daangn/react-monochrome-icon\";\nimport { ControlChip } from \"seed-design/ui/control-chip\";\n\nexport default function ControlChipPrefixIcon() {\n  return <ControlChip.Toggle prefixIcon={<IconPlusFill />}>라벨</ControlChip.Toggle>;\n}",
  "control-chip-preview": "import { ControlChip } from \"seed-design/ui/control-chip\";\n\nexport default function ControlChipPreview() {\n  return <ControlChip.Toggle>라벨</ControlChip.Toggle>;\n}",
  "control-chip-small": "import { ControlChip } from \"seed-design/ui/control-chip\";\n\nexport default function ActionChipSmall() {\n  return <ControlChip.Toggle size=\"small\">라벨</ControlChip.Toggle>;\n}",
  "control-chip-suffix-icon": "import { IconChevronDownFill } from \"@daangn/react-monochrome-icon\";\nimport { ControlChip } from \"seed-design/ui/control-chip\";\n\nexport default function ControlChipSuffixIcon() {\n  return <ControlChip.Toggle suffixIcon={<IconChevronDownFill />}>라벨</ControlChip.Toggle>;\n}",
  "dismissible-callout-danger": "import { DismissibleCallout, CalloutDescription } from \"seed-design/ui/callout\";\n\nexport default function DismissibleCalloutDanger() {\n  return (\n    <DismissibleCallout dismissAriaLabel=\"닫기\" variant=\"danger\">\n      <CalloutDescription>\n        Dolore ex occaecat Lorem ad eu. Consectetur consectetur magna pariatur aliquip enim non.\n      </CalloutDescription>\n    </DismissibleCallout>\n  );\n}",
  "dismissible-callout-informative": "import { DismissibleCallout, CalloutDescription } from \"seed-design/ui/callout\";\n\nexport default function DismissibleCalloutInformative() {\n  return (\n    <DismissibleCallout dismissAriaLabel=\"닫기\" variant=\"informative\">\n      <CalloutDescription>\n        Dolore ex occaecat Lorem ad eu. Consectetur consectetur magna pariatur aliquip enim non.\n      </CalloutDescription>\n    </DismissibleCallout>\n  );\n}",
  "dismissible-callout-magic": "import { DismissibleCallout, CalloutDescription } from \"seed-design/ui/callout\";\n\nexport default function DismissibleCalloutNeutral() {\n  return (\n    <DismissibleCallout dismissAriaLabel=\"닫기\" variant=\"magic\">\n      <CalloutDescription>\n        Dolore ex occaecat Lorem ad eu. Consectetur consectetur magna pariatur aliquip enim non.\n      </CalloutDescription>\n    </DismissibleCallout>\n  );\n}",
  "dismissible-callout-neutral": "import { DismissibleCallout, CalloutDescription } from \"seed-design/ui/callout\";\n\nexport default function DismissibleCalloutNeutral() {\n  return (\n    <DismissibleCallout dismissAriaLabel=\"닫기\" variant=\"neutral\">\n      <CalloutDescription>\n        Dolore ex occaecat Lorem ad eu. Consectetur consectetur magna pariatur aliquip enim non.\n      </CalloutDescription>\n    </DismissibleCallout>\n  );\n}",
  "dismissible-callout-preview": "import { DismissibleCallout, CalloutDescription } from \"seed-design/ui/callout\";\n\nexport default function DismissibleCalloutPreview() {\n  const onDismiss = () => window.alert(\"닫기 버튼 클릭\");\n\n  return (\n    <div className=\"flex flex-col gap-3 w-full\">\n      <DismissibleCallout dismissAriaLabel=\"닫기\" onDismiss={onDismiss}>\n        <CalloutDescription>veniam</CalloutDescription>\n      </DismissibleCallout>\n      <DismissibleCallout dismissAriaLabel=\"닫기\" onDismiss={onDismiss}>\n        <CalloutDescription>\n          기능에 대한 안내 또는 유익한 내용을 전달해요. 콜아웃은 꼭 필요한 경우에만 절제하여\n          사용해요.\n        </CalloutDescription>\n      </DismissibleCallout>\n    </div>\n  );\n}",
  "dismissible-callout-text-only": "import { DismissibleCallout, CalloutDescription } from \"seed-design/ui/callout\";\n\nexport default function DismissibleCalloutTextOnly() {\n  return (\n    <DismissibleCallout dismissAriaLabel=\"닫기\" variant=\"magic\">\n      <CalloutDescription>\n        Aliquip laboris excepteur enim sunt eiusmod laboris anim.\n      </CalloutDescription>\n    </DismissibleCallout>\n  );\n}",
  "dismissible-callout-warning": "import { DismissibleCallout, CalloutDescription } from \"seed-design/ui/callout\";\n\nexport default function DismissibleCalloutWarning() {\n  return (\n    <DismissibleCallout dismissAriaLabel=\"닫기\" variant=\"warning\">\n      <CalloutDescription>\n        Dolore ex occaecat Lorem ad eu. Consectetur consectetur magna pariatur aliquip enim non.\n      </CalloutDescription>\n    </DismissibleCallout>\n  );\n}",
  "dismissible-callout-with-all": "import {\n  DismissibleCallout,\n  CalloutDescription,\n  CalloutLink,\n  CalloutTitle,\n} from \"seed-design/ui/callout\";\n\nexport default function DismissibleCalloutWithAll() {\n  return (\n    <DismissibleCallout dismissAriaLabel=\"닫기\" variant=\"magic\">\n      <CalloutTitle>새로운 기능</CalloutTitle>\n      <CalloutDescription>\n        Aliquip laboris excepteur enim sunt eiusmod laboris anim.\n      </CalloutDescription>\n      <CalloutLink onClick={() => window.alert(\"Hello World\")}>시도해 보기</CalloutLink>\n    </DismissibleCallout>\n  );\n}",
  "dismissible-callout-with-link-as-child": "import { DismissibleCallout, CalloutDescription, CalloutLink } from \"seed-design/ui/callout\";\n\nexport default function DismissibleCalloutWithLink() {\n  return (\n    <DismissibleCallout dismissAriaLabel=\"닫기\" variant=\"magic\">\n      <CalloutDescription>\n        Aliquip laboris excepteur enim sunt eiusmod laboris anim.\n      </CalloutDescription>\n      <CalloutLink asChild>\n        <a href=\"https://www.daangn.com\" target=\"_blank\" rel=\"noreferrer\">\n          시도해 보기\n        </a>\n      </CalloutLink>\n    </DismissibleCallout>\n  );\n}",
  "dismissible-callout-with-link": "import { DismissibleCallout, CalloutDescription, CalloutLink } from \"seed-design/ui/callout\";\n\nexport default function DismissibleCalloutWithLink() {\n  return (\n    <DismissibleCallout dismissAriaLabel=\"닫기\" variant=\"magic\">\n      <CalloutDescription>\n        Aliquip laboris excepteur enim sunt eiusmod laboris anim.\n      </CalloutDescription>\n      <CalloutLink onClick={() => window.alert(\"Hello World\")}>시도해 보기</CalloutLink>\n    </DismissibleCallout>\n  );\n}",
  "dismissible-callout-with-title-text": "import { DismissibleCallout, CalloutDescription, CalloutTitle } from \"seed-design/ui/callout\";\n\nexport default function DismissibleCalloutWithTitleText() {\n  return (\n    <DismissibleCallout dismissAriaLabel=\"닫기\" variant=\"magic\">\n      <CalloutTitle>새로운 기능</CalloutTitle>\n      <CalloutDescription>\n        Aliquip laboris excepteur enim sunt eiusmod laboris anim.\n      </CalloutDescription>\n    </DismissibleCallout>\n  );\n}",
  "dismissible-inline-banner-informative-weak": "import { DismissibleInlineBanner, InlineBannerDescription } from \"seed-design/ui/inline-banner\";\nimport { IconExclamationmarkCircleFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function DismissibleInlineBannerInformativeWeak() {\n  return (\n    <DismissibleInlineBanner\n      dismissAriaLabel=\"닫기\"\n      variant=\"informativeWeak\"\n      icon={<IconExclamationmarkCircleFill />}\n    >\n      <InlineBannerDescription>사업자 정보를 등록해주세요.</InlineBannerDescription>\n    </DismissibleInlineBanner>\n  );\n}",
  "dismissible-inline-banner-neutral-weak": "import { DismissibleInlineBanner, InlineBannerDescription } from \"seed-design/ui/inline-banner\";\nimport { IconExclamationmarkCircleFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function DismissibleInlineBannerNeutralWeak() {\n  return (\n    <DismissibleInlineBanner\n      dismissAriaLabel=\"닫기\"\n      variant=\"neutralWeak\"\n      icon={<IconExclamationmarkCircleFill />}\n    >\n      <InlineBannerDescription>사업자 정보를 등록해주세요.</InlineBannerDescription>\n    </DismissibleInlineBanner>\n  );\n}",
  "dismissible-inline-banner-positive-weak": "import { DismissibleInlineBanner, InlineBannerDescription } from \"seed-design/ui/inline-banner\";\nimport { IconExclamationmarkCircleFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function DismissibleInlineBannerPositiveWeak() {\n  return (\n    <DismissibleInlineBanner\n      dismissAriaLabel=\"닫기\"\n      variant=\"positiveWeak\"\n      icon={<IconExclamationmarkCircleFill />}\n    >\n      <InlineBannerDescription>사업자 정보를 등록해주세요.</InlineBannerDescription>\n    </DismissibleInlineBanner>\n  );\n}",
  "dismissible-inline-banner-preview": "import { DismissibleInlineBanner, InlineBannerDescription } from \"seed-design/ui/inline-banner\";\n\nexport default function DismissibleInlineBannerPreview() {\n  const onDismiss = () => window.alert(\"닫기 버튼 클릭\");\n\n  return (\n    <div className=\"flex flex-col gap-3 w-full\">\n      <DismissibleInlineBanner dismissAriaLabel=\"닫기\" onDismiss={onDismiss}>\n        <InlineBannerDescription>ullamco</InlineBannerDescription>\n      </DismissibleInlineBanner>\n      <DismissibleInlineBanner dismissAriaLabel=\"닫기\" onDismiss={onDismiss}>\n        <InlineBannerDescription>\n          Ut veniam in ea ea anim laborum magna dolore ea laborum duis ut aute mollit amet.\n        </InlineBannerDescription>\n      </DismissibleInlineBanner>\n    </div>\n  );\n}",
  "dismissible-inline-banner-text-only": "import { DismissibleInlineBanner, InlineBannerDescription } from \"seed-design/ui/inline-banner\";\n\nexport default function DismissibleInlineBannerTextOnly() {\n  return (\n    <DismissibleInlineBanner dismissAriaLabel=\"닫기\" variant=\"informativeWeak\">\n      <InlineBannerDescription>다른 사람과 예약된 물품이 있어요.</InlineBannerDescription>\n    </DismissibleInlineBanner>\n  );\n}",
  "dismissible-inline-banner-warning-solid": "import { DismissibleInlineBanner, InlineBannerDescription } from \"seed-design/ui/inline-banner\";\nimport { IconExclamationmarkCircleFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function DismissibleInlineBannerWarningSolid() {\n  return (\n    <DismissibleInlineBanner\n      dismissAriaLabel=\"닫기\"\n      variant=\"warningSolid\"\n      icon={<IconExclamationmarkCircleFill />}\n    >\n      <InlineBannerDescription>사업자 정보를 등록해주세요.</InlineBannerDescription>\n    </DismissibleInlineBanner>\n  );\n}",
  "dismissible-inline-banner-warning-weak": "import { DismissibleInlineBanner, InlineBannerDescription } from \"seed-design/ui/inline-banner\";\nimport { IconExclamationmarkCircleFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function DismissibleInlineBannerWarningWeak() {\n  return (\n    <DismissibleInlineBanner\n      dismissAriaLabel=\"닫기\"\n      variant=\"warningWeak\"\n      icon={<IconExclamationmarkCircleFill />}\n    >\n      <InlineBannerDescription>사업자 정보를 등록해주세요.</InlineBannerDescription>\n    </DismissibleInlineBanner>\n  );\n}",
  "dismissible-inline-banner-with-icon-and-title-text": "import { IconILowercaseSerifCircleFill } from \"@daangn/react-monochrome-icon\";\nimport {\n  DismissibleInlineBanner,\n  InlineBannerDescription,\n  InlineBannerTitle,\n} from \"seed-design/ui/inline-banner\";\n\nexport default function DismissibleInlineBannerWithIconAndTitleText() {\n  return (\n    <DismissibleInlineBanner\n      dismissAriaLabel=\"닫기\"\n      variant=\"informativeWeak\"\n      icon={<IconILowercaseSerifCircleFill />}\n    >\n      <InlineBannerTitle>예약</InlineBannerTitle>\n      <InlineBannerDescription>다른 사람과 예약된 물품이 있어요.</InlineBannerDescription>\n    </DismissibleInlineBanner>\n  );\n}",
  "dismissible-inline-banner-with-icon": "import { DismissibleInlineBanner, InlineBannerDescription } from \"seed-design/ui/inline-banner\";\nimport { IconILowercaseSerifCircleFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function DismissibleInlineBannerWithIcon() {\n  return (\n    <DismissibleInlineBanner\n      dismissAriaLabel=\"닫기\"\n      variant=\"informativeWeak\"\n      icon={<IconILowercaseSerifCircleFill />}\n    >\n      <InlineBannerDescription>다른 사람과 예약된 물품이 있어요.</InlineBannerDescription>\n    </DismissibleInlineBanner>\n  );\n}",
  "help-bubble-close-button": "import { ActionButton } from \"@/registry/ui/action-button\";\nimport { HelpBubbleTrigger } from \"seed-design/ui/help-bubble\";\n\nexport default function HelpBubbleCloseButton() {\n  return (\n    <HelpBubbleTrigger\n      defaultOpen\n      showCloseButton\n      title=\"Close Button\"\n      description=\"showCloseButton으로 닫기 버튼을 추가할 수 있어요.\"\n    >\n      <ActionButton>열기</ActionButton>\n    </HelpBubbleTrigger>\n  );\n}",
  "help-bubble-flip": "import { ActionButton } from \"@/registry/ui/action-button\";\nimport { HelpBubbleTrigger } from \"seed-design/ui/help-bubble\";\n\nexport default function HelpBubbleFlip() {\n  return (\n    <HelpBubbleTrigger\n      open\n      flip={false}\n      title=\"Flip\"\n      description=\"Flip을 끄면 화면 경계에서 방향이 바뀌지 않아요.\"\n    >\n      <ActionButton>열기</ActionButton>\n    </HelpBubbleTrigger>\n  );\n}",
  "help-bubble-placement": "import { ActionButton } from \"@/registry/ui/action-button\";\nimport { HelpBubbleTrigger } from \"seed-design/ui/help-bubble\";\n\nexport default function HelpBubblePreview() {\n  return (\n    <HelpBubbleTrigger\n      open\n      placement=\"bottom\"\n      title=\"Placement\"\n      description=\"Placement로 기본 위치를 설정할 수 있어요.\"\n    >\n      <ActionButton>열기</ActionButton>\n    </HelpBubbleTrigger>\n  );\n}",
  "help-bubble-preview": "import { ActionButton } from \"@/registry/ui/action-button\";\nimport { HelpBubbleTrigger } from \"seed-design/ui/help-bubble\";\n\nexport default function HelpBubblePreview() {\n  return (\n    <HelpBubbleTrigger\n      defaultOpen\n      flip={true}\n      title=\"타이틀\"\n      description=\"설명을 추가할 수 있어요.\"\n    >\n      <ActionButton>열기</ActionButton>\n    </HelpBubbleTrigger>\n  );\n}",
  "help-bubble-title-only": "import { ActionButton } from \"@/registry/ui/action-button\";\nimport { HelpBubbleTrigger } from \"seed-design/ui/help-bubble\";\n\nexport default function HelpBubbleTitleOnly() {\n  return (\n    <HelpBubbleTrigger open title=\"Title Only\">\n      <ActionButton>열기</ActionButton>\n    </HelpBubbleTrigger>\n  );\n}",
  "inline-banner-activity": "import * as React from \"react\";\n\nimport {\n  InlineBanner,\n  InlineBannerDescription,\n  type InlineBannerProps,\n} from \"seed-design/ui/inline-banner\";\nimport { ActionButton } from \"seed-design/ui/action-button\";\n\nimport type { ActivityComponentType } from \"@stackflow/react/future\";\nimport AppScreen from \"@/components/stackflow/ActivityLayout\";\n\ndeclare module \"@stackflow/config\" {\n  interface Register {\n    InlineBanner: unknown;\n  }\n}\n\nconst InlineBannerActivity: ActivityComponentType<\"InlineBanner\"> = () => {\n  const [variant, setVariant] =\n    React.useState<Extract<InlineBannerProps[\"variant\"], \"neutralWeak\" | \"dangerSolid\">>(\n      \"dangerSolid\",\n    );\n\n  return (\n    <AppScreen>\n      <InlineBanner\n        variant={variant}\n        style={variant === \"dangerSolid\" ? { position: \"sticky\", top: 0 } : undefined}\n      >\n        <InlineBannerDescription>\n          Lorem ipsum dolor sit amet consectetur adipisicing elit.\n        </InlineBannerDescription>\n      </InlineBanner>\n      <div style={{ display: \"flex\", flexDirection: \"column\", padding: \"1rem\", gap: \"0.75rem\" }}>\n        <ActionButton\n          onClick={() =>\n            setVariant((prev) => (prev === \"dangerSolid\" ? \"neutralWeak\" : \"dangerSolid\"))\n          }\n        >\n          Toggle tone\n        </ActionButton>\n        <p style={{ marginBlock: 0, lineHeight: 1.35 }}>\n          Lorem ipsum dolor sit, amet consectetur adipisicing elit. At a eaque fugiat sint sapiente.\n          Id, hic ex, blanditiis totam animi amet delectus temporibus quae fugiat magnam, quos eaque\n          dolorum a? Lorem ipsum dolor, sit amet consectetur adipisicing elit. Possimus labore unde\n          minus temporibus beatae commodi et nesciunt iure in dignissimos suscipit, alias ab\n          voluptatem facilis tempora numquam. Veritatis, dolorum suscipit! Lorem ipsum dolor sit,\n          amet consectetur adipisicing elit. Explicabo fugiat molestias iusto, ipsum distinctio\n          officia ad id ratione esse ducimus architecto deleniti illum reiciendis rerum, at\n          blanditiis molestiae. Cupiditate, nobis? Lorem ipsum dolor sit amet consectetur\n          adipisicing elit. Ab, magni. Aliquid inventore quaerat nemo architecto harum earum quas\n          porro repudiandae explicabo repellat repellendus magni, corporis omnis laborum, velit\n          dicta blanditiis. Lorem ipsum dolor sit, amet consectetur adipisicing elit. Debitis,\n          eveniet quas. Accusamus facere veritatis expedita delectus, asperiores numquam placeat\n          necessitatibus assumenda, nesciunt in dolorem sit provident repellendus, voluptatem earum!\n          Consequatur. Lorem ipsum dolor, sit amet consectetur adipisicing elit. Aut earum\n          asperiores aliquam magnam est delectus veritatis numquam sint porro tenetur dolores nobis,\n          deleniti voluptas quaerat, quia voluptatum soluta autem perspiciatis? Lorem ipsum dolor\n          sit amet consectetur adipisicing elit. Facilis possimus eaque aliquam maxime? Quidem enim,\n          sed itaque at veritatis nihil officia esse qui provident ipsa adipisci necessitatibus\n          officiis distinctio laborum!\n        </p>\n      </div>\n    </AppScreen>\n  );\n};\n\nexport default InlineBannerActivity;",
  "inline-banner-danger-solid": "import { InlineBanner, InlineBannerDescription } from \"seed-design/ui/inline-banner\";\nimport { IconExclamationmarkCircleFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function InlineBannerDangerSolid() {\n  return (\n    <InlineBanner variant=\"dangerSolid\" icon={<IconExclamationmarkCircleFill />}>\n      <InlineBannerDescription>사업자 정보를 등록해주세요.</InlineBannerDescription>\n    </InlineBanner>\n  );\n}",
  "inline-banner-danger-weak": "import { InlineBanner, InlineBannerDescription } from \"seed-design/ui/inline-banner\";\nimport { IconExclamationmarkCircleFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function InlineBannerDangerWeak() {\n  return (\n    <InlineBanner variant=\"dangerWeak\" icon={<IconExclamationmarkCircleFill />}>\n      <InlineBannerDescription>사업자 정보를 등록해주세요.</InlineBannerDescription>\n    </InlineBanner>\n  );\n}",
  "inline-banner-informative-weak": "import { InlineBanner, InlineBannerDescription } from \"seed-design/ui/inline-banner\";\nimport { IconExclamationmarkCircleFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function InlineBannerInformativeWeak() {\n  return (\n    <InlineBanner variant=\"informativeWeak\" icon={<IconExclamationmarkCircleFill />}>\n      <InlineBannerDescription>사업자 정보를 등록해주세요.</InlineBannerDescription>\n    </InlineBanner>\n  );\n}",
  "inline-banner-neutral-weak": "import { InlineBanner, InlineBannerDescription } from \"seed-design/ui/inline-banner\";\nimport { IconExclamationmarkCircleFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function InlineBannerNeutralWeak() {\n  return (\n    <InlineBanner variant=\"neutralWeak\" icon={<IconExclamationmarkCircleFill />}>\n      <InlineBannerDescription>사업자 정보를 등록해주세요.</InlineBannerDescription>\n    </InlineBanner>\n  );\n}",
  "inline-banner-positive-weak": "import { InlineBanner, InlineBannerDescription } from \"seed-design/ui/inline-banner\";\nimport { IconExclamationmarkCircleFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function InlineBannerPositiveWeak() {\n  return (\n    <InlineBanner variant=\"positiveWeak\" icon={<IconExclamationmarkCircleFill />}>\n      <InlineBannerDescription>사업자 정보를 등록해주세요.</InlineBannerDescription>\n    </InlineBanner>\n  );\n}",
  "inline-banner-preview": "import { InlineBanner, InlineBannerDescription } from \"seed-design/ui/inline-banner\";\n\nexport default function InlineBannerPreview() {\n  return (\n    <div className=\"flex flex-col gap-3 w-full\">\n      <InlineBanner>\n        <InlineBannerDescription>ullamco</InlineBannerDescription>\n      </InlineBanner>\n      <InlineBanner>\n        <InlineBannerDescription>\n          Ut veniam in ea ea anim laborum magna dolore ea laborum duis ut aute mollit amet.\n        </InlineBannerDescription>\n      </InlineBanner>\n    </div>\n  );\n}",
  "inline-banner-text-only": "import { InlineBanner, InlineBannerDescription } from \"seed-design/ui/inline-banner\";\n\nexport default function InlineBannerTextOnly() {\n  return (\n    <InlineBanner variant=\"informativeWeak\">\n      <InlineBannerDescription>다른 사람과 예약된 물품이 있어요.</InlineBannerDescription>\n    </InlineBanner>\n  );\n}",
  "inline-banner-warning-solid": "import { InlineBanner, InlineBannerDescription } from \"seed-design/ui/inline-banner\";\nimport { IconExclamationmarkCircleFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function InlineBannerWarningSolid() {\n  return (\n    <InlineBanner variant=\"warningSolid\" icon={<IconExclamationmarkCircleFill />}>\n      <InlineBannerDescription>사업자 정보를 등록해주세요.</InlineBannerDescription>\n    </InlineBanner>\n  );\n}",
  "inline-banner-warning-weak": "import { InlineBanner, InlineBannerDescription } from \"seed-design/ui/inline-banner\";\nimport { IconExclamationmarkCircleFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function InlineBannerWarningWeak() {\n  return (\n    <InlineBanner variant=\"warningWeak\" icon={<IconExclamationmarkCircleFill />}>\n      <InlineBannerDescription>사업자 정보를 등록해주세요.</InlineBannerDescription>\n    </InlineBanner>\n  );\n}",
  "inline-banner-with-all": "import { IconILowercaseSerifCircleFill } from \"@daangn/react-monochrome-icon\";\nimport {\n  InlineBanner,\n  InlineBannerDescription,\n  InlineBannerLink,\n  InlineBannerTitle,\n} from \"seed-design/ui/inline-banner\";\n\nexport default function InlineBannerWithAll() {\n  return (\n    <InlineBanner\n      variant=\"informativeWeak\"\n      icon={<IconILowercaseSerifCircleFill />}\n      suffix={<InlineBannerLink onClick={() => {}}>자세히 보기</InlineBannerLink>}\n    >\n      <InlineBannerTitle>예약</InlineBannerTitle>\n      <InlineBannerDescription>다른 사람과 예약된 물품이 있어요.</InlineBannerDescription>\n    </InlineBanner>\n  );\n}",
  "inline-banner-with-icon": "import { InlineBanner, InlineBannerDescription } from \"seed-design/ui/inline-banner\";\nimport { IconILowercaseSerifCircleFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function InlineBannerWithIcon() {\n  return (\n    <InlineBanner variant=\"informativeWeak\" icon={<IconILowercaseSerifCircleFill />}>\n      <InlineBannerDescription>다른 사람과 예약된 물품이 있어요.</InlineBannerDescription>\n    </InlineBanner>\n  );\n}",
  "inline-banner-with-link-as-child": "import {\n  InlineBanner,\n  InlineBannerDescription,\n  InlineBannerLink,\n} from \"seed-design/ui/inline-banner\";\n\nexport default function InlineBannerWithLinkAsChild() {\n  return (\n    <InlineBanner\n      variant=\"informativeWeak\"\n      suffix={\n        <InlineBannerLink asChild>\n          <a href=\"https://www.daangn.com\" target=\"_blank\" rel=\"noreferrer\">\n            자세히 보기\n          </a>\n        </InlineBannerLink>\n      }\n    >\n      <InlineBannerDescription>다른 사람과 예약된 물품이 있어요.</InlineBannerDescription>\n    </InlineBanner>\n  );\n}",
  "inline-banner-with-link": "import {\n  InlineBanner,\n  InlineBannerDescription,\n  InlineBannerLink,\n} from \"seed-design/ui/inline-banner\";\n\nexport default function InlineBannerWithLink() {\n  return (\n    <InlineBanner\n      variant=\"informativeWeak\"\n      suffix={<InlineBannerLink onClick={() => {}}>자세히 보기</InlineBannerLink>}\n    >\n      <InlineBannerDescription>다른 사람과 예약된 물품이 있어요.</InlineBannerDescription>\n    </InlineBanner>\n  );\n}",
  "inline-banner-with-title-text": "import {\n  InlineBanner,\n  InlineBannerDescription,\n  InlineBannerTitle,\n} from \"seed-design/ui/inline-banner\";\n\nexport default function InlineBannerWithTitleText() {\n  return (\n    <InlineBanner variant=\"informativeWeak\">\n      <InlineBannerTitle>예약</InlineBannerTitle>\n      <InlineBannerDescription>다른 사람과 예약된 물품이 있어요.</InlineBannerDescription>\n    </InlineBanner>\n  );\n}",
  "multiline-text-field-constraints": "import { FormControl, MultilineTextField } from \"seed-design/ui/text-field\";\n\nexport default function MultilineTextFieldConstraints() {\n  return (\n    <FormControl label=\"라벨\" description=\"설명을 써주세요\">\n      <MultilineTextField\n        placeholder=\"플레이스홀더\"\n        style={{ minHeight: \"200px\", maxHeight: \"300px\" }}\n      />\n    </FormControl>\n  );\n}",
  "multiline-text-field-disabled": "import { FormControl, MultilineTextField } from \"@/registry/ui/text-field\";\n\nexport default function MultilineTextFieldDisabled() {\n  return (\n    <div className=\"grid grid-cols-2 gap-4 w-full\">\n      <FormControl label=\"라벨\" description=\"설명을 써주세요\" disabled>\n        <MultilineTextField placeholder=\"플레이스홀더\" />\n      </FormControl>\n      <FormControl label=\"라벨\" description=\"설명을 써주세요\" disabled defaultValue=\"값\">\n        <MultilineTextField placeholder=\"플레이스홀더\" />\n      </FormControl>\n      <FormControl\n        label=\"라벨\"\n        description=\"설명을 써주세요\"\n        disabled\n        invalid\n        errorMessage=\"오류가 발생한 이유를 써주세요\"\n      >\n        <MultilineTextField placeholder=\"플레이스홀더\" />\n      </FormControl>\n      <FormControl\n        label=\"라벨\"\n        description=\"설명을 써주세요\"\n        disabled\n        invalid\n        errorMessage=\"오류가 발생한 이유를 써주세요\"\n        defaultValue=\"값\"\n      >\n        <MultilineTextField placeholder=\"플레이스홀더\" />\n      </FormControl>\n    </div>\n  );\n}",
  "multiline-text-field-enabled": "import { FormControl, MultilineTextField } from \"@/registry/ui/text-field\";\n\nexport default function MultilineTextFieldEnabled() {\n  return (\n    <div className=\"grid grid-cols-2 gap-4 w-full\">\n      <FormControl label=\"라벨\" description=\"설명을 써주세요\">\n        <MultilineTextField placeholder=\"플레이스홀더\" />\n      </FormControl>\n      <FormControl label=\"라벨\" description=\"설명을 써주세요\" defaultValue=\"값\">\n        <MultilineTextField placeholder=\"플레이스홀더\" />\n      </FormControl>\n      <FormControl\n        label=\"라벨\"\n        description=\"설명을 써주세요\"\n        invalid\n        errorMessage=\"오류가 발생한 이유를 써주세요\"\n      >\n        <MultilineTextField placeholder=\"플레이스홀더\" />\n      </FormControl>\n      <FormControl\n        label=\"라벨\"\n        description=\"설명을 써주세요\"\n        invalid\n        errorMessage=\"오류가 발생한 이유를 써주세요\"\n        defaultValue=\"값\"\n      >\n        <MultilineTextField placeholder=\"플레이스홀더\" />\n      </FormControl>\n    </div>\n  );\n}",
  "multiline-text-field-fixed-height": "import { FormControl, MultilineTextField } from \"seed-design/ui/text-field\";\n\nexport default function MultilineTextFieldSpecifiedHeight() {\n  return (\n    <FormControl label=\"라벨\" description=\"설명을 써주세요\">\n      <MultilineTextField placeholder=\"플레이스홀더\" style={{ height: \"250px\" }} />\n    </FormControl>\n  );\n}",
  "multiline-text-field-formatting": "import { useMemo, useState } from \"react\";\nimport { FormControl, MultilineTextField } from \"seed-design/ui/text-field\";\n\nexport default function MultilineTextFieldFormatting() {\n  const [value, setValue] = useState(\"\");\n\n  const formattedValue = useMemo(\n    () =>\n      value\n        .split(\"\")\n        .filter((char) => char !== \" \")\n        .join(\"\"),\n    [value],\n  );\n\n  return (\n    <FormControl\n      label=\"레이블\"\n      description=\"공백을 입력할 수 없어요\"\n      value={formattedValue}\n      onValueChange={({ value }) => setValue(value)}\n    >\n      <MultilineTextField placeholder=\"공백을 입력해보세요\" />\n    </FormControl>\n  );\n}",
  "multiline-text-field-grapheme-count": "import { FormControl, MultilineTextField } from \"seed-design/ui/text-field\";\n\nexport default function MultilineTextFieldGraphemeCount() {\n  return (\n    <FormControl label=\"라벨\" description=\"설명을 써주세요\" maxGraphemeCount={8}>\n      <MultilineTextField placeholder=\"플레이스홀더\" />\n    </FormControl>\n  );\n}",
  "multiline-text-field-large": "import { FormControl, MultilineTextField } from \"@/registry/ui/text-field\";\n\nexport default function MultilineTextFieldLarge() {\n  return (\n    <FormControl label=\"라벨\" description=\"설명을 써주세요\" size=\"large\">\n      <MultilineTextField placeholder=\"플레이스홀더\" />\n    </FormControl>\n  );\n}",
  "multiline-text-field-medium": "import { FormControl, MultilineTextField } from \"seed-design/ui/text-field\";\n\nexport default function MultilineTextFieldMedium() {\n  return (\n    <FormControl label=\"라벨\" description=\"설명을 써주세요\" size=\"medium\">\n      <MultilineTextField placeholder=\"플레이스홀더\" />\n    </FormControl>\n  );\n}",
  "multiline-text-field-optional": "import { FormControl, MultilineTextField } from \"seed-design/ui/text-field\";\n\nexport default function MultilineTextFieldOptional() {\n  return (\n    <FormControl label=\"라벨\" description=\"설명을 써주세요\" optionalIndicator=\"(선택)\">\n      <MultilineTextField placeholder=\"플레이스홀더\" />\n    </FormControl>\n  );\n}",
  "multiline-text-field-preview": "import { useState } from \"react\";\nimport { FormControl, MultilineTextField } from \"seed-design/ui/text-field\";\n\nexport default function MultilineTextFieldPreview() {\n  const [value, setValue] = useState(\"\");\n\n  return (\n    <div className=\"flex flex-col items-center w-full\">\n      <FormControl value={value} onValueChange={({ value }) => setValue(value)}>\n        <MultilineTextField autoFocus />\n      </FormControl>\n      <p className=\"text-center\">현재 값: {value}</p>\n    </div>\n  );\n}",
  "multiline-text-field-react-hook-form": "import { ActionButton } from \"@/registry/ui/action-button\";\nimport { IconHouseLine } from \"@daangn/react-monochrome-icon\";\nimport { useForm } from \"react-hook-form\";\nimport { FormControl, MultilineTextField } from \"seed-design/ui/text-field\";\n\ninterface FormValues {\n  bio: string;\n  address: string;\n}\n\nexport default function MultilineTextFieldReactHookForm() {\n  const {\n    register,\n    handleSubmit,\n    clearErrors,\n    formState: { errors },\n  } = useForm<FormValues>();\n\n  const onValid = (data: FormValues) => {\n    window.alert(JSON.stringify(data, null, 2));\n  };\n\n  return (\n    <form className=\"grid grid-cols-2 gap-3 w-full\" onSubmit={handleSubmit(onValid)}>\n      <FormControl\n        {...register(\"bio\", { required: \"필수 입력 항목입니다\" })}\n        label=\"자기소개\"\n        description=\"자기소개를 써주세요\"\n        invalid={!!errors.bio}\n        errorMessage={errors.bio?.message}\n        requiredIndicator=\"(필수)\"\n        required\n      >\n        <MultilineTextField placeholder=\"저는…\" />\n      </FormControl>\n      <FormControl\n        {...register(\"address\", {\n          required: \"필수 입력 항목입니다\",\n          pattern: {\n            value: /^대한민국/,\n            message: \"대한민국으로 시작해주세요\",\n          },\n        })}\n        label=\"주소\"\n        description=\"주소를 써주세요\"\n        invalid={!!errors.address}\n        errorMessage={errors.address?.message}\n        requiredIndicator=\"(필수)\"\n        required\n      >\n        <MultilineTextField placeholder=\"대한민국 서울특별시 은평구\" />\n      </FormControl>\n      <div className=\"col-span-2 flex gap-2\">\n        <ActionButton type=\"submit\" className=\"grow\">\n          제출\n        </ActionButton>\n        <ActionButton\n          type=\"reset\"\n          onClick={() => clearErrors([\"bio\", \"address\"])}\n          variant=\"neutralWeak\"\n        >\n          초기화\n        </ActionButton>\n      </div>\n    </form>\n  );\n}",
  "multiline-text-field-read-only": "import { FormControl, MultilineTextField } from \"@/registry/ui/text-field\";\n\nexport default function MultilineTextFieldReadOnly() {\n  return (\n    <div className=\"grid grid-cols-2 gap-4 w-full\">\n      <FormControl label=\"라벨\" description=\"설명을 써주세요\" readOnly>\n        <MultilineTextField placeholder=\"플레이스홀더\" />\n      </FormControl>\n      <FormControl label=\"라벨\" description=\"설명을 써주세요\" readOnly defaultValue=\"값\">\n        <MultilineTextField placeholder=\"플레이스홀더\" />\n      </FormControl>\n      <FormControl\n        label=\"라벨\"\n        description=\"설명을 써주세요\"\n        readOnly\n        invalid\n        errorMessage=\"오류가 발생한 이유를 써주세요\"\n      >\n        <MultilineTextField placeholder=\"플레이스홀더\" />\n      </FormControl>\n      <FormControl\n        label=\"라벨\"\n        description=\"설명을 써주세요\"\n        readOnly\n        invalid\n        errorMessage=\"오류가 발생한 이유를 써주세요\"\n        defaultValue=\"값\"\n      >\n        <MultilineTextField placeholder=\"플레이스홀더\" />\n      </FormControl>\n    </div>\n  );\n}",
  "multiline-text-field-required": "import { FormControl, MultilineTextField } from \"@/registry/ui/text-field\";\n\nexport default function MultilineTextFieldRequired() {\n  return (\n    <FormControl label=\"라벨\" description=\"설명을 써주세요\" required requiredIndicator=\"(필수)\">\n      <MultilineTextField placeholder=\"플레이스홀더\" />\n    </FormControl>\n  );\n}",
  "multiline-text-field-slicing": "import { useState } from \"react\";\nimport { FormControl, MultilineTextField } from \"seed-design/ui/text-field\";\n\nexport default function MultilineTextFieldSlicing() {\n  const [value, setValue] = useState(\"\");\n\n  return (\n    <FormControl\n      label=\"라벨\"\n      description=\"6글자까지 입력 가능합니다\"\n      maxGraphemeCount={6}\n      value={value}\n      onValueChange={({ slicedValue }) => setValue(slicedValue)}\n    >\n      <MultilineTextField placeholder=\"플레이스홀더\" />\n    </FormControl>\n  );\n}",
  "multiline-text-field-xlarge": "import { FormControl, MultilineTextField } from \"seed-design/ui/text-field\";\n\nexport default function MultilineTextFieldXlarge() {\n  return (\n    <FormControl label=\"라벨\" description=\"설명을 써주세요\" size=\"xlarge\">\n      <MultilineTextField placeholder=\"플레이스홀더\" />\n    </FormControl>\n  );\n}",
  "progress-circle-24": "import { ProgressCircle } from \"seed-design/ui/progress-circle\";\n\nexport default function ProgressCircle24() {\n  return <ProgressCircle size=\"24\" />;\n}",
  "progress-circle-40": "import { ProgressCircle } from \"seed-design/ui/progress-circle\";\n\nexport default function ProgressCircle40() {\n  return <ProgressCircle size=\"40\" />;\n}",
  "progress-circle-brand": "import { ProgressCircle } from \"seed-design/ui/progress-circle\";\n\nexport default function ProgressCircleBrand() {\n  return <ProgressCircle tone=\"brand\" />;\n}",
  "progress-circle-determinate": "import { ProgressCircle } from \"seed-design/ui/progress-circle\";\n\nexport default function ProgressCircleDeterminate() {\n  return <ProgressCircle minValue={0} maxValue={100} value={40} />;\n}",
  "progress-circle-indeterminate": "import { ProgressCircle } from \"seed-design/ui/progress-circle\";\n\nexport default function ProgressCirclePreview() {\n  // if you want to show an indeterminate progress circle, you can pass `undefined` or omit the `value` prop\n  return <ProgressCircle value={undefined} />;\n}",
  "progress-circle-neutral": "import { ProgressCircle } from \"seed-design/ui/progress-circle\";\n\nexport default function ProgressCircleNeutral() {\n  return <ProgressCircle tone=\"neutral\" />;\n}",
  "progress-circle-preview": "import { ProgressCircle } from \"seed-design/ui/progress-circle\";\n\nexport default function ProgressCirclePreview() {\n  return <ProgressCircle tone=\"neutral\" size=\"40\" />;\n}",
  "progress-circle-small": "import { ProgressCircle } from \"seed-design/ui/progress-circle\";\n\nexport default function ProgressCirclePreview() {\n  return <ProgressCircle size=\"40\" />;\n}",
  "progress-circle-static-white": "import { ProgressCircle } from \"seed-design/ui/progress-circle\";\n\nexport default function ProgressCircleStaticWhite() {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flex: 1,\n        width: \"100%\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        background: \"#000\",\n      }}\n    >\n      <ProgressCircle tone=\"staticWhite\" />\n    </div>\n  );\n}",
  "segmented-control-disabled": "import { SegmentedControl, Segment } from \"seed-design/ui/segmented-control\";\n\nexport default function SegmentedControlPreview() {\n  return (\n    <SegmentedControl defaultValue=\"Hot\" disabled>\n      <Segment value=\"Hot\">Hot</Segment>\n      <Segment value=\"New\">New</Segment>\n    </SegmentedControl>\n  );\n}",
  "segmented-control-fixed-width": "import { SegmentedControl, Segment } from \"seed-design/ui/segmented-control\";\n\nexport default function SegmentedControlFixedWidth() {\n  return (\n    <SegmentedControl defaultValue=\"new\">\n      <Segment value=\"new\">New</Segment>\n      <Segment value=\"hot\">Hot</Segment>\n    </SegmentedControl>\n  );\n}",
  "segmented-control-long-label-fixed-width": "import { SegmentedControl, Segment } from \"seed-design/ui/segmented-control\";\n\nexport default function SegmentedControlLongLabelFixedWidth() {\n  return (\n    <SegmentedControl defaultValue=\"price\">\n      <Segment value=\"price\">가격 높은 순</Segment>\n      <Segment value=\"discount\">할인율 높은 순</Segment>\n      <Segment value=\"popularity\">인기 많은 순</Segment>\n    </SegmentedControl>\n  );\n}",
  "segmented-control-long-label": "import { SegmentedControl, Segment } from \"seed-design/ui/segmented-control\";\n\nexport default function SegmentedControlLongLabel() {\n  return (\n    <SegmentedControl defaultValue=\"price\">\n      <Segment value=\"price\">가격 높은 순</Segment>\n      <Segment value=\"discount\">할인율 높은 순</Segment>\n      <Segment value=\"popularity\">인기 많은 순</Segment>\n    </SegmentedControl>\n  );\n}",
  "segmented-control-preview": "import { SegmentedControl, Segment } from \"seed-design/ui/segmented-control\";\n\nexport default function SegmentedControlPreview() {\n  return (\n    <SegmentedControl defaultValue=\"Hot\">\n      <Segment value=\"Hot\">Hot</Segment>\n      <Segment value=\"New\">New</Segment>\n    </SegmentedControl>\n  );\n}",
  "select-box-check-group-preview": "import { SelectBoxCheck, SelectBoxCheckGroup } from \"@/registry/ui/select-box-group\";\n\nexport default function SelectBoxCheckGroupPreview() {\n  return (\n    <SelectBoxCheckGroup>\n      <SelectBoxCheck value=\"culpa\" label=\"Culpa\" defaultChecked />\n      <SelectBoxCheck\n        value=\"voluptate\"\n        label=\"Voluptate\"\n        description=\"Elit cupidatat dolore fugiat enim veniam culpa.\"\n      />\n      <SelectBoxCheck value=\"eiusmod\" label=\"Eiusmod\" />\n    </SelectBoxCheckGroup>\n  );\n}",
  "select-box-radio-group-preview": "import { SelectBoxRadioGroup, SelectBoxRadio } from \"@/registry/ui/select-box-group\";\n\nexport default function SelectBoxRadioGroupPreview() {\n  return (\n    <SelectBoxRadioGroup defaultValue=\"culpa\">\n      <SelectBoxRadio value=\"culpa\" label=\"Culpa\" />\n      <SelectBoxRadio\n        value=\"voluptate\"\n        label=\"Voluptate\"\n        description=\"Elit cupidatat dolore fugiat enim veniam culpa.\"\n      />\n      <SelectBoxRadio value=\"eiusmod\" label=\"Eiusmod\" />\n    </SelectBoxRadioGroup>\n  );\n}",
  "skeleton-circular": "import { Skeleton } from \"seed-design/ui/skeleton\";\n\nexport default function SkeletonCircle() {\n  return <Skeleton shape=\"circular\" width=\"s12\" height=\"s12\" />;\n}",
  "skeleton-preview": "import { Flex } from \"@/registry/ui/flex\";\nimport { Skeleton } from \"seed-design/ui/skeleton\";\n\nexport default function SkeletonPreview() {\n  return (\n    <Flex gap=\"s4\" alignItems=\"center\">\n      <Skeleton shape=\"circular\" width=\"s12\" height=\"s12\" />\n      <Flex flexDirection=\"column\" gap=\"s2\">\n        <Skeleton shape=\"rounded\" height=\"s4\" width=\"250px\" />\n        <Skeleton shape=\"rounded\" height=\"s4\" width=\"250px\" />\n      </Flex>\n    </Flex>\n  );\n}",
  "skeleton-rectangular": "import { Skeleton } from \"seed-design/ui/skeleton\";\n\nexport default function SkeletonRectangular() {\n  return <Skeleton shape=\"rectangular\" width=\"s12\" height=\"s12\" />;\n}",
  "skeleton-rounded": "import { Skeleton } from \"seed-design/ui/skeleton\";\n\nexport default function SkeletonRounded() {\n  return <Skeleton shape=\"rounded\" width=\"s12\" height=\"s12\" />;\n}",
  "switch-disabled": "import { Switch } from \"seed-design/ui/switch\";\n\nexport default function SwitchDisabled() {\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\", gap: 10 }}>\n      <Switch disabled />\n      <Switch checked disabled />\n    </div>\n  );\n}",
  "switch-medium": "import { useState } from \"react\";\nimport { Switch } from \"seed-design/ui/switch\";\n\nexport default function SwitchMedium() {\n  const [isChecked, setIsChecked] = useState(false);\n\n  return <Switch size=\"medium\" checked={isChecked} onCheckedChange={setIsChecked} />;\n}",
  "switch-preview": "import { useState } from \"react\";\nimport { Switch } from \"seed-design/ui/switch\";\n\nexport default function SwitchPreview() {\n  const [isChecked, setIsChecked] = useState(false);\n\n  return <Switch checked={isChecked} onCheckedChange={setIsChecked} />;\n}",
  "switch-small": "import { useState } from \"react\";\nimport { Switch } from \"seed-design/ui/switch\";\n\nexport default function SwitchSmall() {\n  const [isChecked, setIsChecked] = useState(false);\n\n  return <Switch size=\"small\" checked={isChecked} onCheckedChange={setIsChecked} />;\n}",
  "tabs-alert": "import { Tabs, TabContent, TabContentList, TabTrigger, TabTriggerList } from \"seed-design/ui/tabs\";\n\nexport default function TabsAlert() {\n  return (\n    <div style={{ width: \"360px\" }}>\n      <Tabs defaultValue=\"1\">\n        <TabTriggerList>\n          <TabTrigger value=\"1\">라벨1</TabTrigger>\n          <TabTrigger value=\"2\" alert>\n            라벨2\n          </TabTrigger>\n          <TabTrigger value=\"3\">라벨3</TabTrigger>\n        </TabTriggerList>\n        <TabContentList>\n          <TabContent value=\"1\">\n            <Content>Content 1</Content>\n          </TabContent>\n          <TabContent value=\"2\">\n            <Content>Content 2</Content>\n          </TabContent>\n          <TabContent value=\"3\">\n            <Content>Content 3</Content>\n          </TabContent>\n        </TabContentList>\n      </Tabs>\n    </div>\n  );\n}\n\nconst Content = (props: React.PropsWithChildren) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"300px\",\n        backgroundColor: \"var(--seed-color-bg-layer-default)\",\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};",
  "tabs-disabled": "import { Tabs, TabContent, TabContentList, TabTrigger, TabTriggerList } from \"seed-design/ui/tabs\";\n\nexport default function TabsDisabled() {\n  return (\n    <div style={{ width: \"360px\" }}>\n      <Tabs defaultValue=\"1\">\n        <TabTriggerList>\n          <TabTrigger value=\"1\">라벨1</TabTrigger>\n          <TabTrigger value=\"2\" isDisabled>\n            라벨2\n          </TabTrigger>\n          <TabTrigger value=\"3\">라벨3</TabTrigger>\n        </TabTriggerList>\n        <TabContentList>\n          <TabContent value=\"1\">\n            <Content>Content 1</Content>\n          </TabContent>\n          <TabContent value=\"2\">\n            <Content>Content 2</Content>\n          </TabContent>\n          <TabContent value=\"3\">\n            <Content>Content 3</Content>\n          </TabContent>\n        </TabContentList>\n      </Tabs>\n    </div>\n  );\n}\n\nconst Content = (props: React.PropsWithChildren) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"300px\",\n        backgroundColor: \"var(--seed-color-bg-layer-default)\",\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};",
  "tabs-dynamic-height": "import { Tabs, TabContent, TabContentList, TabTrigger, TabTriggerList } from \"seed-design/ui/tabs\";\n\nexport default function TabsDynamicHeight() {\n  return (\n    <div style={{ width: \"360px\" }}>\n      <Tabs defaultValue=\"1\" lazyMode=\"unmount\" isLazy={true} isSwipeable={false}>\n        <TabTriggerList>\n          <TabTrigger value=\"1\">라벨1</TabTrigger>\n          <TabTrigger value=\"2\">라벨2</TabTrigger>\n          <TabTrigger value=\"3\">라벨3</TabTrigger>\n        </TabTriggerList>\n        <TabContentList>\n          <TabContent value=\"1\">\n            <Content height=\"100px\">Content 1</Content>\n          </TabContent>\n          <TabContent value=\"2\">\n            <Content height=\"200px\">Content 2</Content>\n          </TabContent>\n          <TabContent value=\"3\">\n            <Content height=\"300px\">Content 3</Content>\n          </TabContent>\n        </TabContentList>\n      </Tabs>\n      <div style={{ height: \"100px\", backgroundColor: \"gray\" }}>아래 컨텐츠</div>\n    </div>\n  );\n}\n\nconst Content = (props: React.PropsWithChildren<{ height: string }>) => {\n  const { height, children } = props;\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height,\n        backgroundColor: \"var(--seed-color-bg-layer-default)\",\n      }}\n    >\n      {children}\n    </div>\n  );\n};",
  "tabs-fix-trigger-list": "import { Tabs, TabContent, TabContentList, TabTrigger, TabTriggerList } from \"seed-design/ui/tabs\";\n\nexport default function TabsFixTriggerList() {\n  return (\n    // 600은 화면 높이라고 가정합니다.\n    <div style={{ width: \"360px\", height: \"600px\" }}>\n      <Tabs\n        defaultValue=\"1\"\n        lazyMode=\"keepMounted\"\n        isLazy={true}\n        size=\"medium\"\n        isSwipeable={false}\n        fixTriggerList\n        style={{ height: \"100%\" }} // 탭 영역을 전체 화면으로 설정합니다.\n      >\n        <TabTriggerList>\n          <TabTrigger value=\"1\">라벨1</TabTrigger>\n          <TabTrigger value=\"2\">라벨2</TabTrigger>\n          <TabTrigger value=\"3\">라벨3</TabTrigger>\n        </TabTriggerList>\n        <TabContentList>\n          <TabContent value=\"1\">\n            <Content height=\"1000px\">Content 1</Content>\n          </TabContent>\n          <TabContent value=\"2\">\n            <Content height=\"1000px\">Content 2</Content>\n          </TabContent>\n          <TabContent value=\"3\">\n            <Content height=\"1000px\">Content 3</Content>\n          </TabContent>\n        </TabContentList>\n      </Tabs>\n    </div>\n  );\n}\n\nconst Content = (props: React.PropsWithChildren<{ height: string }>) => {\n  const { height, children } = props;\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height,\n        background: \"linear-gradient(to bottom, white, gray)\",\n      }}\n    >\n      {children}\n    </div>\n  );\n};",
  "tabs-layout-fill": "import { Tabs, TabContent, TabContentList, TabTrigger, TabTriggerList } from \"seed-design/ui/tabs\";\n\nexport default function TabsLayoutFill() {\n  return (\n    <div style={{ width: \"360px\" }}>\n      <Tabs defaultValue=\"2\" layout=\"fill\">\n        <TabTriggerList>\n          <TabTrigger value=\"1\">라벨1</TabTrigger>\n          <TabTrigger value=\"2\">라벨2</TabTrigger>\n          <TabTrigger value=\"3\">라벨3</TabTrigger>\n        </TabTriggerList>\n        <TabContentList>\n          <TabContent value=\"1\">\n            <Content>Content 1</Content>\n          </TabContent>\n          <TabContent value=\"2\">\n            <Content>Content 2</Content>\n          </TabContent>\n          <TabContent value=\"3\">\n            <Content>Content 3</Content>\n          </TabContent>\n        </TabContentList>\n      </Tabs>\n    </div>\n  );\n}\n\nconst Content = (props: React.PropsWithChildren) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"300px\",\n        backgroundColor: \"var(--seed-color-bg-layer-default)\",\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};",
  "tabs-layout-hug": "import { Tabs, TabContent, TabContentList, TabTrigger, TabTriggerList } from \"seed-design/ui/tabs\";\n\nexport default function TabsLayoutHug() {\n  return (\n    <div style={{ width: \"360px\" }}>\n      <Tabs defaultValue=\"1\" layout=\"hug\">\n        <TabTriggerList>\n          <TabTrigger value=\"1\">라벨1</TabTrigger>\n          <TabTrigger value=\"2\">라벨2</TabTrigger>\n          <TabTrigger value=\"3\">라벨3</TabTrigger>\n        </TabTriggerList>\n        <TabContentList>\n          <TabContent value=\"1\">\n            <Content>Content 1</Content>\n          </TabContent>\n          <TabContent value=\"2\">\n            <Content>Content 2</Content>\n          </TabContent>\n          <TabContent value=\"3\">\n            <Content>Content 3</Content>\n          </TabContent>\n        </TabContentList>\n      </Tabs>\n    </div>\n  );\n}\n\nconst Content = (props: React.PropsWithChildren) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"300px\",\n        backgroundColor: \"var(--seed-color-bg-layer-default)\",\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};",
  "tabs-preview": "import { Tabs, TabContent, TabContentList, TabTrigger, TabTriggerList } from \"seed-design/ui/tabs\";\n\nexport default function TabsPreview() {\n  return (\n    <div style={{ width: \"360px\" }}>\n      <Tabs defaultValue=\"1\">\n        <TabTriggerList>\n          <TabTrigger value=\"1\">라벨1</TabTrigger>\n          <TabTrigger value=\"2\">라벨2</TabTrigger>\n          <TabTrigger value=\"3\">라벨3</TabTrigger>\n        </TabTriggerList>\n        <TabContentList>\n          <TabContent value=\"1\">\n            <Content>Content 1</Content>\n          </TabContent>\n          <TabContent value=\"2\">\n            <Content>Content 2</Content>\n          </TabContent>\n          <TabContent value=\"3\">\n            <Content>Content 3</Content>\n          </TabContent>\n        </TabContentList>\n      </Tabs>\n    </div>\n  );\n}\n\nconst Content = (props: React.PropsWithChildren) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"300px\",\n        backgroundColor: \"var(--seed-color-bg-layer-default)\",\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};",
  "tabs-scroll-top": "import { RefObject, useRef, useState } from \"react\";\nimport { TabContent, TabContentList, Tabs, TabTrigger, TabTriggerList } from \"seed-design/ui/tabs\";\n\nexport default function TabsScrollTop() {\n  const [currentTab, setCurrentTab] = useState(\"1\");\n  const contentRefs: Record<string, RefObject<HTMLDivElement>> = {\n    \"1\": useRef(null),\n    \"2\": useRef(null),\n  };\n\n  const handleTriggerClick = (value: string) => {\n    if (value === currentTab) {\n      contentRefs[value].current?.scrollTo({ top: 0, behavior: \"smooth\" });\n    }\n  };\n\n  return (\n    <div style={{ width: \"360px\" }}>\n      <Tabs layout=\"fill\" value={currentTab} onValueChange={setCurrentTab} isSwipeable={false}>\n        <TabTriggerList>\n          <TabTrigger onClick={() => handleTriggerClick(\"1\")} value=\"1\">\n            라벨1\n          </TabTrigger>\n          <TabTrigger onClick={() => handleTriggerClick(\"2\")} value=\"2\">\n            라벨2\n          </TabTrigger>\n        </TabTriggerList>\n        <TabContentList>\n          <TabContent ref={contentRefs[\"1\"]} value=\"1\" style={{ maxHeight: \"200px\" }}>\n            <Content height=\"1000px\">Content 1</Content>\n          </TabContent>\n          <TabContent ref={contentRefs[\"2\"]} value=\"2\" style={{ maxHeight: \"200px\" }}>\n            <Content height=\"1000px\">Content 2</Content>\n          </TabContent>\n        </TabContentList>\n      </Tabs>\n    </div>\n  );\n}\n\nconst Content = (props: React.PropsWithChildren<{ height: string }>) => {\n  const { height, children } = props;\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        height,\n        backgroundColor: \"var(--seed-color-bg-layer-default)\",\n      }}\n    >\n      {children}\n    </div>\n  );\n};",
  "tabs-size-medium": "import { Tabs, TabContent, TabContentList, TabTrigger, TabTriggerList } from \"seed-design/ui/tabs\";\n\nexport default function TabsSizeMedium() {\n  return (\n    <div style={{ width: \"360px\" }}>\n      <Tabs defaultValue=\"1\" size=\"medium\">\n        <TabTriggerList>\n          <TabTrigger value=\"1\">라벨1</TabTrigger>\n          <TabTrigger value=\"2\">라벨2</TabTrigger>\n          <TabTrigger value=\"3\">라벨3</TabTrigger>\n        </TabTriggerList>\n        <TabContentList>\n          <TabContent value=\"1\">\n            <Content>Content 1</Content>\n          </TabContent>\n          <TabContent value=\"2\">\n            <Content>Content 2</Content>\n          </TabContent>\n          <TabContent value=\"3\">\n            <Content>Content 3</Content>\n          </TabContent>\n        </TabContentList>\n      </Tabs>\n    </div>\n  );\n}\n\nconst Content = (props: React.PropsWithChildren) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"300px\",\n        backgroundColor: \"var(--seed-color-bg-layer-default)\",\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};",
  "tabs-size-small": "import { Tabs, TabContent, TabContentList, TabTrigger, TabTriggerList } from \"seed-design/ui/tabs\";\n\nexport default function TabsSizeSmall() {\n  return (\n    <div style={{ width: \"360px\" }}>\n      <Tabs defaultValue=\"1\" size=\"small\">\n        <TabTriggerList>\n          <TabTrigger value=\"1\">라벨1</TabTrigger>\n          <TabTrigger value=\"2\">라벨2</TabTrigger>\n          <TabTrigger value=\"3\">라벨3</TabTrigger>\n        </TabTriggerList>\n        <TabContentList>\n          <TabContent value=\"1\">\n            <Content>Content 1</Content>\n          </TabContent>\n          <TabContent value=\"2\">\n            <Content>Content 2</Content>\n          </TabContent>\n          <TabContent value=\"3\">\n            <Content>Content 3</Content>\n          </TabContent>\n        </TabContentList>\n      </Tabs>\n    </div>\n  );\n}\n\nconst Content = (props: React.PropsWithChildren) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"300px\",\n        backgroundColor: \"var(--seed-color-bg-layer-default)\",\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};",
  "tabs-standalone": "import { useState } from \"react\";\nimport { Tabs, TabTrigger, TabTriggerList } from \"seed-design/ui/tabs\";\n\nexport default function TabsStandalone() {\n  const [activeTab, setActiveTab] = useState(\"1\");\n\n  return (\n    <div style={{ width: \"360px\" }}>\n      <Tabs defaultValue=\"1\" onValueChange={setActiveTab}>\n        <TabTriggerList>\n          <TabTrigger value=\"1\">라벨1</TabTrigger>\n          <TabTrigger value=\"2\">라벨2</TabTrigger>\n          <TabTrigger value=\"3\">라벨3</TabTrigger>\n        </TabTriggerList>\n        {activeTab === \"1\" && (\n          <div>\n            <Content>Content 1</Content>\n          </div>\n        )}\n        {activeTab === \"2\" && (\n          <div>\n            <Content>Content 2</Content>\n          </div>\n        )}\n        {activeTab === \"3\" && (\n          <div>\n            <Content>Content 3</Content>\n          </div>\n        )}\n      </Tabs>\n    </div>\n  );\n}\n\nconst Content = (props: React.PropsWithChildren) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"300px\",\n        backgroundColor: \"var(--seed-color-bg-layer-default)\",\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};",
  "tabs-swipeable": "import { Tabs, TabContent, TabContentList, TabTrigger, TabTriggerList } from \"seed-design/ui/tabs\";\n\nexport default function TabsSwipeable() {\n  return (\n    <div style={{ width: \"360px\" }}>\n      <Tabs\n        defaultValue=\"2\"\n        isSwipeable\n        onSwipeStart={() => console.log(\"swipe start\")}\n        onSwipeEnd={() => console.log(\"swipe end\")}\n      >\n        <TabTriggerList>\n          <TabTrigger value=\"1\">라벨1</TabTrigger>\n          <TabTrigger value=\"2\">라벨2</TabTrigger>\n          <TabTrigger value=\"3\">라벨3</TabTrigger>\n        </TabTriggerList>\n        <TabContentList>\n          <TabContent value=\"1\">\n            <Content>Content 1</Content>\n          </TabContent>\n          <TabContent value=\"2\">\n            <Content>Content 2</Content>\n          </TabContent>\n          <TabContent value=\"3\">\n            <Content>Content 3</Content>\n          </TabContent>\n        </TabContentList>\n      </Tabs>\n    </div>\n  );\n}\n\nconst Content = (props: React.PropsWithChildren) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"300px\",\n        backgroundColor: \"var(--seed-color-bg-layer-default)\",\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};",
  "text-button-brand": "import { IconPlusCircleLine } from \"@daangn/react-monochrome-icon\";\nimport { TextButton } from \"seed-design/ui/text-button\";\n\nexport default function TextButtonBrand() {\n  return (\n    <TextButton variant=\"brand\" prefixIcon={<IconPlusCircleLine />}>\n      추가\n    </TextButton>\n  );\n}",
  "text-button-danger": "import { IconTrashcanLine } from \"@daangn/react-monochrome-icon\";\nimport { TextButton } from \"seed-design/ui/text-button\";\n\nexport default function TextButtonDanger() {\n  return (\n    <TextButton variant=\"danger\" prefixIcon={<IconTrashcanLine />}>\n      삭제\n    </TextButton>\n  );\n}",
  "text-button-disabled": "import { IconPenHorizlineLine } from \"@daangn/react-monochrome-icon\";\nimport { TextButton } from \"seed-design/ui/text-button\";\n\nexport default function TextButtonPreview() {\n  return (\n    <TextButton disabled prefixIcon={<IconPenHorizlineLine />}>\n      새 글\n    </TextButton>\n  );\n}",
  "text-button-large": "import { IconPlusCircleLine } from \"@daangn/react-monochrome-icon\";\nimport { TextButton } from \"seed-design/ui/text-button\";\n\nexport default function TextButtonLarge() {\n  return (\n    <TextButton variant=\"neutral\" prefixIcon={<IconPlusCircleLine />} size=\"large\">\n      추가\n    </TextButton>\n  );\n}",
  "text-button-leading-icon": "import { IconPlusCircleLine } from \"@daangn/react-monochrome-icon\";\nimport { TextButton } from \"seed-design/ui/text-button\";\n\nexport default function TextButtonLeadingIcon() {\n  return <TextButton prefixIcon={<IconPlusCircleLine />}>추가</TextButton>;\n}",
  "text-button-medium": "import { IconPlusCircleLine } from \"@daangn/react-monochrome-icon\";\nimport { TextButton } from \"seed-design/ui/text-button\";\n\nexport default function TextButtonMedium() {\n  return (\n    <TextButton variant=\"neutral\" prefixIcon={<IconPlusCircleLine />} size=\"medium\">\n      추가\n    </TextButton>\n  );\n}",
  "text-button-neutral-subtle": "import { IconPlusCircleLine } from \"@daangn/react-monochrome-icon\";\nimport { TextButton } from \"seed-design/ui/text-button\";\n\nexport default function TextButtonNeutralSubtle() {\n  return (\n    <TextButton variant=\"neutralSubtle\" prefixIcon={<IconPlusCircleLine />}>\n      추가\n    </TextButton>\n  );\n}",
  "text-button-neutral": "import { IconPlusCircleLine } from \"@daangn/react-monochrome-icon\";\nimport { TextButton } from \"seed-design/ui/text-button\";\n\nexport default function TextButtonNeutral() {\n  return (\n    <TextButton variant=\"neutral\" prefixIcon={<IconPlusCircleLine />}>\n      추가\n    </TextButton>\n  );\n}",
  "text-button-preview": "import { IconPenHorizlineLine } from \"@daangn/react-monochrome-icon\";\nimport { TextButton } from \"seed-design/ui/text-button\";\n\nexport default function TextButtonPreview() {\n  return <TextButton prefixIcon={<IconPenHorizlineLine />}>새 글</TextButton>;\n}",
  "text-button-small": "import { IconPlusCircleLine } from \"@daangn/react-monochrome-icon\";\nimport { TextButton } from \"seed-design/ui/text-button\";\n\nexport default function TextButtonSmall() {\n  return (\n    <TextButton variant=\"neutral\" prefixIcon={<IconPlusCircleLine />} size=\"small\">\n      추가\n    </TextButton>\n  );\n}",
  "text-button-trailing-chevron": "import { TextButton } from \"seed-design/ui/text-button\";\n\nexport default function TextButtonTrailingChevron() {\n  return <TextButton showSuffixChevron>더보기</TextButton>;\n}",
  "text-field-both-affixes": "import { IconPlusCircleLine, IconWonLine } from \"@daangn/react-monochrome-icon\";\nimport { FormControl, TextField } from \"seed-design/ui/text-field\";\n\nexport default function TextFieldSuffix() {\n  return (\n    <div className=\"flex gap-4 w-full\">\n      <FormControl label=\"라벨\" description=\"설명을 써주세요\">\n        <TextField placeholder=\"플레이스홀더\" prefix=\"만\" suffix=\"세\" />\n      </FormControl>\n      <FormControl label=\"라벨\" description=\"설명을 써주세요\">\n        <TextField\n          placeholder=\"플레이스홀더\"\n          prefixIcon={<IconPlusCircleLine />}\n          suffixIcon={<IconWonLine />}\n        />\n      </FormControl>\n    </div>\n  );\n}",
  "text-field-disabled": "import { FormControl, TextField } from \"seed-design/ui/text-field\";\n\nexport default function TextFieldDisabled() {\n  return (\n    <div className=\"grid grid-cols-2 gap-4 w-full\">\n      <FormControl label=\"라벨\" description=\"설명을 써주세요\" disabled>\n        <TextField placeholder=\"플레이스홀더\" />\n      </FormControl>\n      <FormControl label=\"라벨\" description=\"설명을 써주세요\" disabled defaultValue=\"값\">\n        <TextField placeholder=\"플레이스홀더\" />\n      </FormControl>\n      <FormControl\n        label=\"라벨\"\n        description=\"설명을 써주세요\"\n        disabled\n        invalid\n        errorMessage=\"오류가 발생한 이유를 써주세요\"\n      >\n        <TextField placeholder=\"플레이스홀더\" />\n      </FormControl>\n      <FormControl\n        label=\"라벨\"\n        description=\"설명을 써주세요\"\n        disabled\n        invalid\n        errorMessage=\"오류가 발생한 이유를 써주세요\"\n        defaultValue=\"값\"\n      >\n        <TextField placeholder=\"플레이스홀더\" />\n      </FormControl>\n    </div>\n  );\n}",
  "text-field-enabled": "import { FormControl, TextField } from \"seed-design/ui/text-field\";\n\nexport default function TextFieldEnabled() {\n  return (\n    <div className=\"grid grid-cols-2 gap-4 w-full\">\n      <FormControl label=\"라벨\" description=\"설명을 써주세요\">\n        <TextField placeholder=\"플레이스홀더\" />\n      </FormControl>\n      <FormControl label=\"라벨\" description=\"설명을 써주세요\" defaultValue=\"값\">\n        <TextField placeholder=\"플레이스홀더\" />\n      </FormControl>\n      <FormControl\n        label=\"라벨\"\n        description=\"설명을 써주세요\"\n        invalid\n        errorMessage=\"오류가 발생한 이유를 써주세요\"\n      >\n        <TextField placeholder=\"플레이스홀더\" />\n      </FormControl>\n      <FormControl\n        label=\"라벨\"\n        description=\"설명을 써주세요\"\n        invalid\n        errorMessage=\"오류가 발생한 이유를 써주세요\"\n        defaultValue=\"값\"\n      >\n        <TextField placeholder=\"플레이스홀더\" />\n      </FormControl>\n    </div>\n  );\n}",
  "text-field-grapheme-count": "import { FormControl, TextField } from \"seed-design/ui/text-field\";\n\nexport default function TextFieldGraphemeCount() {\n  return (\n    <FormControl label=\"라벨\" description=\"설명을 써주세요\" maxGraphemeCount={8}>\n      <TextField placeholder=\"플레이스홀더\" />\n    </FormControl>\n  );\n}",
  "text-field-large": "import { FormControl, TextField } from \"seed-design/ui/text-field\";\n\nexport default function TextFieldLarge() {\n  return (\n    <FormControl label=\"라벨\" description=\"설명을 써주세요\" size=\"large\">\n      <TextField placeholder=\"플레이스홀더\" />\n    </FormControl>\n  );\n}",
  "text-field-medium": "import { FormControl, TextField } from \"seed-design/ui/text-field\";\n\nexport default function TextFieldMedium() {\n  return (\n    <FormControl label=\"라벨\" description=\"설명을 써주세요\" size=\"medium\">\n      <TextField placeholder=\"플레이스홀더\" />\n    </FormControl>\n  );\n}",
  "text-field-number-formatting": "import { useMemo, useState } from \"react\";\nimport { FormControl, TextField } from \"seed-design/ui/text-field\";\n\nexport default function TextFieldNumberFormatting() {\n  const [value, setValue] = useState(\"1000\");\n\n  const formattedValue = useMemo(() => {\n    if (value === \"\") return value;\n\n    const number = Number(value.replace(/,/g, \"\"));\n    if (Number.isNaN(number)) return \"\";\n\n    return number.toLocaleString();\n  }, [value]);\n\n  return (\n    <FormControl\n      label=\"금액\"\n      description=\"금액을 써주세요\"\n      value={formattedValue}\n      onValueChange={({ value }) => setValue(value)}\n    >\n      <TextField placeholder=\"9,999,999\" />\n    </FormControl>\n  );\n}",
  "text-field-optional": "import { FormControl, TextField } from \"seed-design/ui/text-field\";\n\nexport default function TextFieldOptional() {\n  return (\n    <FormControl label=\"라벨\" description=\"설명을 써주세요\" optionalIndicator=\"(선택)\">\n      <TextField placeholder=\"플레이스홀더\" />\n    </FormControl>\n  );\n}",
  "text-field-prefix": "import { IconMagnifyingglassLine } from \"@daangn/react-monochrome-icon\";\nimport { FormControl, TextField } from \"seed-design/ui/text-field\";\n\nexport default function TextFieldPrefix() {\n  return (\n    <div className=\"flex gap-4 w-full\">\n      <FormControl label=\"라벨\" description=\"설명을 써주세요\">\n        <TextField placeholder=\"플레이스홀더\" prefix=\"https://\" />\n      </FormControl>\n      <FormControl label=\"라벨\" description=\"설명을 써주세요\">\n        <TextField placeholder=\"플레이스홀더\" prefixIcon={<IconMagnifyingglassLine />} />\n      </FormControl>\n    </div>\n  );\n}",
  "text-field-preview": "import { useState } from \"react\";\nimport { FormControl, TextField } from \"seed-design/ui/text-field\";\n\nexport default function TextFieldPreview() {\n  const [value, setValue] = useState(\"\");\n\n  return (\n    <div className=\"flex flex-col items-center w-full\">\n      <FormControl value={value} onValueChange={({ value }) => setValue(value)}>\n        <TextField autoFocus />\n      </FormControl>\n      <p className=\"text-center\">현재 값: {value}</p>\n    </div>\n  );\n}",
  "text-field-react-hook-form": "import { ActionButton } from \"@/registry/ui/action-button\";\nimport { IconHouseLine } from \"@daangn/react-monochrome-icon\";\nimport { useForm } from \"react-hook-form\";\nimport { FormControl, TextField } from \"seed-design/ui/text-field\";\n\ninterface FormValues {\n  name: string;\n  address: string;\n}\n\nexport default function TextFieldReactHookForm() {\n  const {\n    register,\n    handleSubmit,\n    clearErrors,\n    formState: { errors },\n  } = useForm<FormValues>();\n\n  const onValid = (data: FormValues) => {\n    window.alert(JSON.stringify(data, null, 2));\n  };\n\n  return (\n    <form className=\"grid grid-cols-2 gap-3 w-full\" onSubmit={handleSubmit(onValid)}>\n      <FormControl\n        {...register(\"name\", { required: \"필수 입력 항목입니다\" })}\n        label=\"이름\"\n        description=\"이름을 써주세요\"\n        invalid={!!errors.name}\n        errorMessage={errors.name?.message}\n        requiredIndicator=\"(필수)\"\n        required\n      >\n        <TextField placeholder=\"홍길동\" />\n      </FormControl>\n      <FormControl\n        {...register(\"address\", {\n          required: \"필수 입력 항목입니다\",\n          pattern: {\n            value: /^대한민국/,\n            message: \"대한민국으로 시작해주세요\",\n          },\n        })}\n        label=\"주소\"\n        description=\"주소를 써주세요\"\n        invalid={!!errors.address}\n        errorMessage={errors.address?.message}\n        requiredIndicator=\"(필수)\"\n        required\n      >\n        <TextField placeholder=\"대한민국 서울특별시 은평구\" prefixIcon={<IconHouseLine />} />\n      </FormControl>\n      <div className=\"col-span-2 flex gap-2\">\n        <ActionButton type=\"submit\" className=\"grow\">\n          제출\n        </ActionButton>\n        <ActionButton\n          type=\"reset\"\n          onClick={() => clearErrors([\"name\", \"address\"])}\n          variant=\"neutralWeak\"\n        >\n          초기화\n        </ActionButton>\n      </div>\n    </form>\n  );\n}",
  "text-field-read-only": "import { FormControl, TextField } from \"seed-design/ui/text-field\";\n\nexport default function TextFieldReadOnly() {\n  return (\n    <div className=\"grid grid-cols-2 gap-4 w-full\">\n      <FormControl label=\"라벨\" description=\"설명을 써주세요\" readOnly>\n        <TextField placeholder=\"플레이스홀더\" />\n      </FormControl>\n      <FormControl label=\"라벨\" description=\"설명을 써주세요\" readOnly defaultValue=\"값\">\n        <TextField placeholder=\"플레이스홀더\" />\n      </FormControl>\n      <FormControl\n        label=\"라벨\"\n        description=\"설명을 써주세요\"\n        readOnly\n        invalid\n        errorMessage=\"오류가 발생한 이유를 써주세요\"\n      >\n        <TextField placeholder=\"플레이스홀더\" />\n      </FormControl>\n      <FormControl\n        label=\"라벨\"\n        description=\"설명을 써주세요\"\n        readOnly\n        invalid\n        errorMessage=\"오류가 발생한 이유를 써주세요\"\n        defaultValue=\"값\"\n      >\n        <TextField placeholder=\"플레이스홀더\" />\n      </FormControl>\n    </div>\n  );\n}",
  "text-field-required": "import { FormControl, TextField } from \"seed-design/ui/text-field\";\n\nexport default function TextFieldRequired() {\n  return (\n    <FormControl label=\"라벨\" description=\"설명을 써주세요\" required requiredIndicator=\"(필수)\">\n      <TextField placeholder=\"플레이스홀더\" />\n    </FormControl>\n  );\n}",
  "text-field-slicing": "import { useState } from \"react\";\nimport { FormControl, TextField } from \"seed-design/ui/text-field\";\n\nexport default function TextFieldSlicing() {\n  const [value, setValue] = useState(\"\");\n\n  return (\n    <FormControl\n      label=\"라벨\"\n      description=\"6글자까지 입력 가능합니다\"\n      maxGraphemeCount={6}\n      value={value}\n      onValueChange={({ slicedValue }) => setValue(slicedValue)}\n    >\n      <TextField placeholder=\"플레이스홀더\" />\n    </FormControl>\n  );\n}",
  "text-field-suffix": "import { IconWonLine } from \"@daangn/react-monochrome-icon\";\nimport { FormControl, TextField } from \"seed-design/ui/text-field\";\n\nexport default function TextFieldSuffix() {\n  return (\n    <div className=\"flex gap-4 w-full\">\n      <FormControl label=\"라벨\" description=\"설명을 써주세요\">\n        <TextField placeholder=\"플레이스홀더\" suffix=\"cm\" />\n      </FormControl>\n      <FormControl label=\"라벨\" description=\"설명을 써주세요\">\n        <TextField placeholder=\"플레이스홀더\" suffixIcon={<IconWonLine />} />\n      </FormControl>\n    </div>\n  );\n}",
  "text-field-xlarge": "import { FormControl, TextField } from \"seed-design/ui/text-field\";\n\nexport default function TextFieldXlarge() {\n  return (\n    <FormControl label=\"라벨\" description=\"설명을 써주세요\" size=\"xlarge\">\n      <TextField placeholder=\"플레이스홀더\" />\n    </FormControl>\n  );\n}"
}