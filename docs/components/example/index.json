{
  "action-button-brand-outline": "import { ActionButton } from \"seed-design/ui/action-button\";\n\nexport default function ActionButtonBrandOutline() {\n  return <ActionButton variant=\"brandOutline\">라벨</ActionButton>;\n}",
  "action-button-brand-solid": "import { ActionButton } from \"seed-design/ui/action-button\";\n\nexport default function ActionButtonBrandSolid() {\n  return <ActionButton variant=\"brandSolid\">라벨</ActionButton>;\n}",
  "action-button-danger-solid": "import { ActionButton } from \"seed-design/ui/action-button\";\n\nexport default function ActionButtonDangerSolid() {\n  return <ActionButton variant=\"dangerSolid\">라벨</ActionButton>;\n}",
  "action-button-disabled": "import { ActionButton } from \"seed-design/ui/action-button\";\n\nexport default function ActionButtonDisabled() {\n  return <ActionButton disabled>라벨</ActionButton>;\n}",
  "action-button-icon-only": "import { IconPlusFill } from \"@daangn/react-monochrome-icon\";\nimport { ActionButton } from \"seed-design/ui/action-button\";\n\nexport default function ActionButtonIconOnly() {\n  return (\n    <ActionButton layout=\"iconOnly\">\n      <IconPlusFill />\n    </ActionButton>\n  );\n}",
  "action-button-loading": "import { useState } from \"react\";\nimport { ActionButton } from \"seed-design/ui/action-button\";\n\nexport default function ActionButtonLoading() {\n  const [loading, setLoading] = useState(false);\n\n  function handleClick() {\n    setLoading(true);\n    setTimeout(() => setLoading(false), 2000);\n  }\n\n  // 이벤트 핸들링이 필요할 수 있으므로 loading은 disabled를 포함하지 않습니다. 이벤트 발생을 원하지 않는 경우, disabled 속성을 추가해주세요.\n  return (\n    <ActionButton loading={loading} onClick={handleClick}>\n      시간이 걸리는 액션\n    </ActionButton>\n  );\n}",
  "action-button-neutral-outline": "import { ActionButton } from \"seed-design/ui/action-button\";\n\nexport default function ActionButtonNeutralOutline() {\n  return <ActionButton variant=\"neutralOutline\">라벨</ActionButton>;\n}",
  "action-button-neutral-solid": "import { ActionButton } from \"seed-design/ui/action-button\";\n\nexport default function ActionButtonNeutralSolid() {\n  return <ActionButton variant=\"neutralSolid\">라벨</ActionButton>;\n}",
  "action-button-neutral-weak": "import { ActionButton } from \"seed-design/ui/action-button\";\n\nexport default function ActionButtonNeutralWeak() {\n  return <ActionButton variant=\"neutralWeak\">라벨</ActionButton>;\n}",
  "action-button-prefix-icon": "import { IconPlusFill } from \"@daangn/react-monochrome-icon\";\nimport { ActionButton } from \"seed-design/ui/action-button\";\n\nexport default function ActionButtonPrefixIcon() {\n  return <ActionButton prefixIcon={<IconPlusFill />}>라벨</ActionButton>;\n}",
  "action-button-preview": "import { ActionButton } from \"seed-design/ui/action-button\";\n\nexport default function ActionButtonPreview() {\n  return <ActionButton>라벨</ActionButton>;\n}",
  "action-button-suffix-icon": "import { IconChevronRightFill } from \"@daangn/react-monochrome-icon\";\nimport { ActionButton } from \"seed-design/ui/action-button\";\n\nexport default function ActionButtonSuffixIcon() {\n  return <ActionButton suffixIcon={<IconChevronRightFill />}>라벨</ActionButton>;\n}",
  "action-chip-icon-only": "import { IconPlusFill } from \"@daangn/react-monochrome-icon\";\nimport { ActionChip } from \"seed-design/ui/action-chip\";\n\nexport default function ActionChipIconOnly() {\n  return (\n    <ActionChip layout=\"iconOnly\">\n      <IconPlusFill />\n    </ActionChip>\n  );\n}",
  "action-chip-medium": "import { ActionChip } from \"seed-design/ui/action-chip\";\n\nexport default function ActionChipMedium() {\n  return <ActionChip size=\"medium\">라벨</ActionChip>;\n}",
  "action-chip-prefix-icon": "import { IconPlusFill } from \"@daangn/react-monochrome-icon\";\nimport { ActionChip } from \"seed-design/ui/action-chip\";\n\nexport default function ActionChipPrefixIcon() {\n  return <ActionChip prefixIcon={<IconPlusFill />}>라벨</ActionChip>;\n}",
  "action-chip-preview": "import { ActionChip } from \"seed-design/ui/action-chip\";\n\nexport default function ActionChipPreview() {\n  return <ActionChip>라벨</ActionChip>;\n}",
  "action-chip-small": "import { ActionChip } from \"seed-design/ui/action-chip\";\n\nexport default function ActionChipSmall() {\n  return <ActionChip size=\"small\">라벨</ActionChip>;\n}",
  "action-chip-suffix-icon": "import { IconChevronDownFill } from \"@daangn/react-monochrome-icon\";\nimport { ActionChip } from \"seed-design/ui/action-chip\";\n\nexport default function ActionChipSuffixIcon() {\n  return <ActionChip suffixIcon={<IconChevronDownFill />}>라벨</ActionChip>;\n}",
  "action-sheet-preview": "import { IconEyeSlashLine } from \"@daangn/react-monochrome-icon\";\nimport { ActionSheet, ActionSheetGroup, ActionSheetItem } from \"seed-design/ui/action-sheet\";\n\nconst ActionSheetPreviewActivity = () => {\n  return (\n    <ActionSheet>\n      <ActionSheetGroup>\n        <ActionSheetItem prefixIcon={<IconEyeSlashLine />} label=\"Action 1\" />\n        <ActionSheetItem prefixIcon={<IconEyeSlashLine />} label=\"Action 2\" />\n        <ActionSheetItem prefixIcon={<IconEyeSlashLine />} label=\"Action 3\" />\n      </ActionSheetGroup>\n      <ActionSheetGroup>\n        <ActionSheetItem prefixIcon={<IconEyeSlashLine />} label=\"Action 4\" />\n        <ActionSheetItem tone=\"danger\" prefixIcon={<IconEyeSlashLine />} label=\"Action 5\" />\n      </ActionSheetGroup>\n    </ActionSheet>\n  );\n};\n\nexport default ActionSheetPreviewActivity;",
  "alert-dialog-danger": "import { ActionButton } from \"seed-design/ui/action-button\";\nimport { AlertDialog, AlertDialogAction } from \"seed-design/ui/alert-dialog\";\n\nconst AlertDialogDangerActivity = () => {\n  return (\n    <AlertDialog title=\"제목\" description=\"파괴적, 비가역적 작업을 경고\">\n      <AlertDialogAction asChild>\n        <ActionButton variant=\"neutralWeak\">취소</ActionButton>\n      </AlertDialogAction>\n      <AlertDialogAction asChild>\n        <ActionButton variant=\"dangerSolid\">확인</ActionButton>\n      </AlertDialogAction>\n    </AlertDialog>\n  );\n};\n\nexport default AlertDialogDangerActivity;",
  "alert-dialog-default-activity": "import * as React from \"react\";\n\nimport { AppScreen } from \"@stackflow/plugin-basic-ui\";\nimport { type ActivityComponentType, useStepFlow, useStack } from \"@stackflow/react/future\";\n\nimport { ActionButton } from \"seed-design/ui/action-button\";\nimport { AlertDialog as UIAlertDialog } from \"seed-design/ui/alert-dialog\";\n\ndeclare module \"@stackflow/config\" {\n  interface Register {\n    AlertDialogDefault: {\n      alert: boolean;\n    };\n  }\n}\n\nconst AlertDialogDefaultActivity: ActivityComponentType<\"AlertDialogDefault\"> = ({ params }) => {\n  const { alert } = params;\n  const stack = useStack();\n  const { pushStep, popStep } = useStepFlow(\"AlertDialogDefault\");\n\n  const appBarLeft = () => <div>Left</div>;\n  const appBarRight = () => <div>Right</div>;\n\n  const onInteractOutside = () => {\n    popStep();\n  };\n\n  const onButtonClick = () => {\n    pushStep({\n      alert: true,\n    });\n  };\n\n  const mainActivitySteps = stack.activities[0].steps;\n\n  return (\n    <AppScreen\n      appBar={{\n        renderLeft: appBarLeft,\n        renderRight: appBarRight,\n      }}\n    >\n      <div\n        style={{\n          position: \"relative\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"100%\",\n          width: \"100%\",\n        }}\n      >\n        <ActionButton onClick={onButtonClick}>Open</ActionButton>\n        {alert && (\n          <UIAlertDialog\n            onInteractOutside={onInteractOutside}\n            title=\"Title\"\n            description=\"Description\"\n          />\n        )}\n      </div>\n\n      <div\n        style={{\n          position: \"fixed\",\n          bottom: \"0\",\n          right: \"0\",\n          padding: \"8px\",\n        }}\n      >\n        <span\n          style={{\n            fontSize: \"12px\",\n            color: \"var(--seed-semantic-color-divider-3)\",\n          }}\n        >\n          Steps\n        </span>\n        {mainActivitySteps.map((step) => (\n          <div\n            style={{\n              fontSize: \"12px\",\n              width: \"1rem\",\n              height: \"1rem\",\n              borderRadius: \"50%\",\n              border: \"1px solid var(--seed-semantic-color-divider-3)\",\n              margin: \"8px\",\n            }}\n            key={step.id}\n          />\n        ))}\n      </div>\n\n      <div\n        style={{\n          position: \"fixed\",\n          bottom: \"0\",\n          left: \"0\",\n          padding: \"8px\",\n          zIndex: 1000,\n        }}\n      >\n        <ActionButton onClick={() => popStep}>Back</ActionButton>\n      </div>\n    </AppScreen>\n  );\n};\n\nexport default AlertDialogDefaultActivity;\n\nAlertDialogDefaultActivity.displayName = \"AlertDialogDefaultActivity\";",
  "alert-dialog-neutral": "import { ActionButton } from \"seed-design/ui/action-button\";\nimport { AlertDialog, AlertDialogAction } from \"seed-design/ui/alert-dialog\";\n\nconst AlertDialogNeutralActivity = () => {\n  return (\n    <AlertDialog title=\"제목\" description=\"중립적인 선택지를 제공\">\n      <AlertDialogAction asChild>\n        <ActionButton variant=\"neutralWeak\">취소</ActionButton>\n      </AlertDialogAction>\n      <AlertDialogAction asChild>\n        <ActionButton variant=\"neutralSolid\">확인</ActionButton>\n      </AlertDialogAction>\n    </AlertDialog>\n  );\n};\n\nexport default AlertDialogNeutralActivity;",
  "alert-dialog-nonpreferred": "import { ActionButton } from \"seed-design/ui/action-button\";\nimport { AlertDialog } from \"seed-design/ui/alert-dialog\";\nimport { Flex } from \"seed-design/ui/layout\";\n\nconst AlertDialogNonpreferredActivity = () => {\n  return (\n    <AlertDialog title=\"제목\" description=\"메인 액션을 권장\">\n      <Flex flexGrow={1} direction=\"column\" gap=\"s2_5\">\n        <ActionButton variant=\"neutralSolid\">확인</ActionButton>\n        <button\n          type=\"button\"\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            minHeight: \"24px\",\n            fontSize: \"14px\",\n            lineHeight: \"19px\",\n            fontWeight: \"bold\",\n            color: \"var(--seed-v3-color-fg-neutral-muted)\",\n          }}\n        >\n          취소\n        </button>\n      </Flex>\n    </AlertDialog>\n  );\n};\n\nexport default AlertDialogNonpreferredActivity;",
  "alert-dialog-preview": "import { ActionButton } from \"seed-design/ui/action-button\";\nimport { AlertDialog, AlertDialogAction } from \"seed-design/ui/alert-dialog\";\n\nconst AlertDialogPreviewActivity = () => {\n  return (\n    <AlertDialog title=\"주의\" description=\"이 작업은 되돌릴 수 없습니다.\">\n      <AlertDialogAction asChild>\n        <ActionButton variant=\"neutralWeak\">취소</ActionButton>\n      </AlertDialogAction>\n      <AlertDialogAction asChild>\n        <ActionButton variant=\"dangerSolid\">확인</ActionButton>\n      </AlertDialogAction>\n    </AlertDialog>\n  );\n};\n\nexport default AlertDialogPreviewActivity;",
  "alert-dialog-single": "import { Flex } from \"seed-design/ui/layout\";\nimport { ActionButton } from \"seed-design/ui/action-button\";\nimport { AlertDialog } from \"seed-design/ui/alert-dialog\";\n\nconst AlertDialogSingleActivity = () => {\n  return (\n    <AlertDialog title=\"제목\" description=\"단일 선택지를 제공\">\n      <Flex flexGrow={1} direction=\"column\">\n        <ActionButton variant=\"neutralSolid\">확인</ActionButton>\n      </Flex>\n    </AlertDialog>\n  );\n};\n\nexport default AlertDialogSingleActivity;",
  "app-screen-preview": "import { Flex } from \"@/registry/ui/layout\";\nimport { IconBellFill } from \"@daangn/react-monochrome-icon\";\nimport type { ActivityComponentType } from \"@stackflow/react/future\";\nimport {\n  AppBar,\n  AppScreen,\n  CloseButton,\n  IconButton,\n  Left,\n  Right,\n  Title,\n} from \"seed-design/ui/app-screen\";\n\ndeclare module \"@stackflow/config\" {\n  interface Register {\n    AppScreenPreview: unknown;\n  }\n}\n\nconst AppScreenPreviewActivity: ActivityComponentType<\"AppScreenPreview\"> = () => {\n  return (\n    <AppScreen\n      theme=\"cupertino\"\n      appBar={\n        <AppBar>\n          <Left>\n            <CloseButton />\n          </Left>\n          <Title>Preview</Title>\n          <Right>\n            <IconButton aria-label=\"Notification\">\n              <IconBellFill />\n            </IconButton>\n          </Right>\n        </AppBar>\n      }\n    >\n      <Flex height=\"full\" justifyContent=\"center\" alignItems=\"center\">\n        Preview\n      </Flex>\n    </AppScreen>\n  );\n};\n\nexport default AppScreenPreviewActivity;",
  "app-screen-transparent-bar": "import { Flex } from \"@/registry/ui/layout\";\nimport { IconBellFill } from \"@daangn/react-monochrome-icon\";\nimport type { ActivityComponentType } from \"@stackflow/react/future\";\nimport {\n  AppBar,\n  AppScreen,\n  CloseButton,\n  IconButton,\n  Left,\n  Right,\n  Title,\n} from \"seed-design/ui/app-screen\";\n\ndeclare module \"@stackflow/config\" {\n  interface Register {\n    AppScreenTransparentBar: unknown;\n  }\n}\n\nconst AppScreenTransparentBarActivity: ActivityComponentType<\"AppScreenTransparentBar\"> = () => {\n  return (\n    <AppScreen\n      theme=\"cupertino\"\n      appBar={\n        <AppBar tone=\"transparent\" border={false}>\n          <Left>\n            <CloseButton />\n          </Left>\n          <Title>Transparent Bar</Title>\n          <Right>\n            <IconButton aria-label=\"Notification\">\n              <IconBellFill />\n            </IconButton>\n          </Right>\n        </AppBar>\n      }\n    >\n      <Flex height=\"full\">\n        <img src=\"/penguin.webp\" alt=\"Penguin\" />\n      </Flex>\n    </AppScreen>\n  );\n};\n\nexport default AppScreenTransparentBarActivity;",
  "avatar-badge": "import { IdentityPlaceholder } from \"seed-design/ui/identity-placeholder\";\nimport { Avatar, AvatarBadge } from \"seed-design/ui/avatar\";\n\nexport default function AvatarWithBadge() {\n  return (\n    <Avatar\n      size=\"80\"\n      src=\"https://avatars.githubusercontent.com/u/54893898?v=4\"\n      fallback={<IdentityPlaceholder />}\n    >\n      <AvatarBadge>\n        <div style={{ background: \"green\", width: 20, height: 20, borderRadius: 9999 }} />\n      </AvatarBadge>\n    </Avatar>\n  );\n}",
  "avatar-preview": "import { Avatar, AvatarBadge } from \"seed-design/ui/avatar\";\nimport { IdentityPlaceholder } from \"seed-design/ui/identity-placeholder\";\nimport { Flex } from \"seed-design/ui/layout\";\n\nexport default function AvatarPreview() {\n  return (\n    <Flex gap=\"s4\">\n      <Avatar\n        size=\"80\"\n        src=\"https://avatars.githubusercontent.com/u/54893898?v=4\"\n        fallback={<IdentityPlaceholder />}\n      >\n        <AvatarBadge>\n          <div style={{ background: \"green\", width: 20, height: 20, borderRadius: 9999 }} />\n        </AvatarBadge>\n      </Avatar>\n      <Avatar size=\"80\" src={undefined} fallback={<IdentityPlaceholder />} />\n    </Flex>\n  );\n}",
  "avatar-size": "import { Avatar } from \"seed-design/ui/avatar\";\nimport { Flex } from \"seed-design/ui/layout\";\n\nexport default function AvatarSize() {\n  return (\n    <Flex gap=\"s4\">\n      <Avatar size=\"20\" src=\"https://avatars.githubusercontent.com/u/54893898?v=4\" fallback=\"L\" />\n      <Avatar size=\"24\" src=\"https://avatars.githubusercontent.com/u/54893898?v=4\" fallback=\"L\" />\n      <Avatar size=\"36\" src=\"https://avatars.githubusercontent.com/u/54893898?v=4\" fallback=\"L\" />\n      <Avatar size=\"48\" src=\"https://avatars.githubusercontent.com/u/54893898?v=4\" fallback=\"L\" />\n      <Avatar size=\"64\" src=\"https://avatars.githubusercontent.com/u/54893898?v=4\" fallback=\"L\" />\n      <Avatar size=\"80\" src=\"https://avatars.githubusercontent.com/u/54893898?v=4\" fallback=\"L\" />\n      <Avatar size=\"96\" src=\"https://avatars.githubusercontent.com/u/54893898?v=4\" fallback=\"L\" />\n    </Flex>\n  );\n}",
  "avatar-stack": "import { Avatar, AvatarStack } from \"seed-design/ui/avatar\";\nimport { IdentityPlaceholder } from \"seed-design/ui/identity-placeholder\";\n\nexport default function AvatarStackExample() {\n  return (\n    <AvatarStack size=\"64\">\n      <Avatar\n        src=\"https://avatars.githubusercontent.com/u/54893898?v=4\"\n        fallback={<IdentityPlaceholder />}\n      />\n      <Avatar\n        src=\"https://avatars.githubusercontent.com/u/54893898?v=4\"\n        fallback={<IdentityPlaceholder />}\n      />\n      <Avatar\n        src=\"https://avatars.githubusercontent.com/u/54893898?v=4\"\n        fallback={<IdentityPlaceholder />}\n      />\n      <Avatar\n        src=\"https://avatars.githubusercontent.com/u/54893898?v=4\"\n        fallback={<IdentityPlaceholder />}\n      />\n    </AvatarStack>\n  );\n}",
  "badge-as-child": "import { Badge } from \"seed-design/ui/badge\";\n\nexport default function BadgeAsChild() {\n  return (\n    <Badge asChild>\n      <a href=\"https://example.com\" target=\"_blank\" rel=\"noreferrer\">\n        링크\n      </a>\n    </Badge>\n  );\n}",
  "badge-brand": "import { Badge } from \"seed-design/ui/badge\";\n\nexport default function BadgeBrand() {\n  return <Badge tone=\"brand\">라벨</Badge>;\n}",
  "badge-danger": "import { Badge } from \"seed-design/ui/badge\";\n\nexport default function BadgeDanger() {\n  return <Badge tone=\"danger\">라벨</Badge>;\n}",
  "badge-informative": "import { Badge } from \"seed-design/ui/badge\";\n\nexport default function BadgeInformative() {\n  return <Badge tone=\"informative\">라벨</Badge>;\n}",
  "badge-large": "import { Badge } from \"seed-design/ui/badge\";\n\nexport default function BadgeLarge() {\n  return <Badge size=\"large\">라벨</Badge>;\n}",
  "badge-medium": "import { Badge } from \"seed-design/ui/badge\";\n\nexport default function BadgeMedium() {\n  return <Badge size=\"medium\">라벨</Badge>;\n}",
  "badge-neutral": "import { Badge } from \"seed-design/ui/badge\";\n\nexport default function BadgeNeutral() {\n  return <Badge tone=\"neutral\">라벨</Badge>;\n}",
  "badge-outlined": "import { Badge } from \"seed-design/ui/badge\";\n\nexport default function BadgeOutlined() {\n  return <Badge variant=\"outlined\">라벨</Badge>;\n}",
  "badge-pill": "import { Badge } from \"seed-design/ui/badge\";\n\nexport default function BadgeRectangle() {\n  return <Badge shape=\"pill\">라벨</Badge>;\n}",
  "badge-positive": "import { Badge } from \"seed-design/ui/badge\";\n\nexport default function BadgePositive() {\n  return <Badge tone=\"positive\">라벨</Badge>;\n}",
  "badge-preview": "import { Badge } from \"seed-design/ui/badge\";\n\nexport default function BadgePreview() {\n  return <Badge>라벨</Badge>;\n}",
  "badge-rectangle": "import { Badge } from \"seed-design/ui/badge\";\n\nexport default function BadgeRectangle() {\n  return <Badge shape=\"rectangle\">라벨</Badge>;\n}",
  "badge-solid": "import { Badge } from \"seed-design/ui/badge\";\n\nexport default function BadgeSolid() {\n  return <Badge variant=\"solid\">라벨</Badge>;\n}",
  "badge-weak": "import { Badge } from \"seed-design/ui/badge\";\n\nexport default function BadgeWeak() {\n  return <Badge variant=\"weak\">라벨</Badge>;\n}",
  "bottom-sheet-preview": "import { ActionButton } from \"seed-design/ui/action-button\";\nimport { BottomSheet, BottomSheetFooter } from \"seed-design/ui/bottom-sheet\";\nimport { Flex } from \"seed-design/ui/layout\";\n\nconst BottomSheetPreviewActivity = () => {\n  return (\n    <BottomSheet title=\"제목\" description=\"설명을 작성할 수 있어요\">\n      {/* Horizontal padding is 0 in default for full-width usage. */}\n      {/* If you need padding, you can set paddingX \"globalGutter\" to ensure consistent padding. */}\n      <Flex paddingX=\"globalGutter\" style={{ height: \"300px\" }}>\n        Content\n      </Flex>\n      <BottomSheetFooter>\n        <ActionButton variant=\"neutralSolid\">확인</ActionButton>\n      </BottomSheetFooter>\n    </BottomSheet>\n  );\n};\n\nexport default BottomSheetPreviewActivity;",
  "box-preview": "import { Box } from \"seed-design/ui/layout\";\n\nexport default function BoxPreview() {\n  return (\n    <Box\n      background=\"bg.neutralWeak\"\n      borderWidth={1}\n      borderColor=\"stroke.neutral\"\n      borderRadius=\"s2\"\n      paddingX=\"s3\"\n      paddingY=\"s2\"\n    >\n      Box Example\n    </Box>\n  );\n}",
  "callout-danger": "import { ActionableCallout, Callout, DismissibleCallout } from \"seed-design/ui/callout\";\n\nexport default function CalloutDanger() {\n  return (\n    <div className=\"flex flex-col gap-3 w-full\">\n      <Callout\n        tone=\"danger\"\n        description=\"기능에 대한 안내 또는 유익한 내용을 전달해요. 콜아웃은 꼭 필요한 경우에만 절제하여 사용해요.\"\n      />\n      <ActionableCallout\n        tone=\"danger\"\n        description=\"기능에 대한 안내 또는 유익한 내용을 전달해요. 콜아웃은 꼭 필요한 경우에만 절제하여 사용해요.\"\n      />\n      <DismissibleCallout\n        tone=\"danger\"\n        description=\"기능에 대한 안내 또는 유익한 내용을 전달해요. 콜아웃은 꼭 필요한 경우에만 절제하여 사용해요.\"\n      />\n    </div>\n  );\n}",
  "callout-informative": "import { ActionableCallout, Callout, DismissibleCallout } from \"seed-design/ui/callout\";\n\nexport default function CalloutInformative() {\n  return (\n    <div className=\"flex flex-col gap-3 w-full\">\n      <Callout\n        tone=\"informative\"\n        description=\"기능에 대한 안내 또는 유익한 내용을 전달해요. 콜아웃은 꼭 필요한 경우에만 절제하여 사용해요.\"\n      />\n      <ActionableCallout\n        tone=\"informative\"\n        description=\"기능에 대한 안내 또는 유익한 내용을 전달해요. 콜아웃은 꼭 필요한 경우에만 절제하여 사용해요.\"\n      />\n      <DismissibleCallout\n        tone=\"informative\"\n        description=\"기능에 대한 안내 또는 유익한 내용을 전달해요. 콜아웃은 꼭 필요한 경우에만 절제하여 사용해요.\"\n      />\n    </div>\n  );\n}",
  "callout-link-label-as-child": "import { Callout, DismissibleCallout } from \"seed-design/ui/callout\";\n\nexport default function CalloutLinkLabelAsChild() {\n  return (\n    <div className=\"flex flex-col gap-3 w-full\">\n      <Callout\n        description=\"기능에 대한 안내 또는 유익한 내용을 전달해요. 콜아웃은 꼭 필요한 경우에만 절제하여 사용해요.\"\n        linkLabel={\n          <a href=\"https://www.daangn.com\" target=\"_blank\" rel=\"noreferrer\">\n            시도해 보기\n          </a>\n        }\n        linkProps={{ asChild: true }}\n      />\n      <DismissibleCallout\n        description=\"기능에 대한 안내 또는 유익한 내용을 전달해요. 콜아웃은 꼭 필요한 경우에만 절제하여 사용해요.\"\n        linkLabel={\n          <a href=\"https://www.daangn.com\" target=\"_blank\" rel=\"noreferrer\">\n            시도해 보기\n          </a>\n        }\n        linkProps={{ asChild: true }}\n      />\n    </div>\n  );\n}",
  "callout-magic": "import { ActionableCallout, Callout, DismissibleCallout } from \"seed-design/ui/callout\";\n\nexport default function CalloutMagic() {\n  return (\n    <div className=\"flex flex-col gap-3 w-full\">\n      <Callout\n        tone=\"magic\"\n        description=\"기능에 대한 안내 또는 유익한 내용을 전달해요. 콜아웃은 꼭 필요한 경우에만 절제하여 사용해요.\"\n      />\n      <ActionableCallout\n        tone=\"magic\"\n        description=\"기능에 대한 안내 또는 유익한 내용을 전달해요. 콜아웃은 꼭 필요한 경우에만 절제하여 사용해요.\"\n      />\n      <DismissibleCallout\n        tone=\"magic\"\n        description=\"기능에 대한 안내 또는 유익한 내용을 전달해요. 콜아웃은 꼭 필요한 경우에만 절제하여 사용해요.\"\n      />\n    </div>\n  );\n}",
  "callout-neutral": "import { ActionableCallout, Callout, DismissibleCallout } from \"seed-design/ui/callout\";\n\nexport default function CalloutNeutral() {\n  return (\n    <div className=\"flex flex-col gap-3 w-full\">\n      <Callout\n        tone=\"neutral\"\n        description=\"기능에 대한 안내 또는 유익한 내용을 전달해요. 콜아웃은 꼭 필요한 경우에만 절제하여 사용해요.\"\n      />\n      <ActionableCallout\n        tone=\"neutral\"\n        description=\"기능에 대한 안내 또는 유익한 내용을 전달해요. 콜아웃은 꼭 필요한 경우에만 절제하여 사용해요.\"\n      />\n      <DismissibleCallout\n        tone=\"neutral\"\n        description=\"기능에 대한 안내 또는 유익한 내용을 전달해요. 콜아웃은 꼭 필요한 경우에만 절제하여 사용해요.\"\n      />\n    </div>\n  );\n}",
  "callout-preview": "import { ActionableCallout, Callout, DismissibleCallout } from \"seed-design/ui/callout\";\n\nexport default function CalloutPreview() {\n  return (\n    <div className=\"flex flex-col gap-3 w-full\">\n      <Callout description=\"Aute nulla proident tempor minim eiusmod. In nostrud officia irure laborum.\" />\n      <ActionableCallout description=\"Aute nulla proident tempor minim eiusmod. In nostrud officia irure laborum.\" />\n      <DismissibleCallout description=\"Aute nulla proident tempor minim eiusmod. In nostrud officia irure laborum.\" />\n    </div>\n  );\n}",
  "callout-text-only": "import { ActionableCallout, Callout, DismissibleCallout } from \"seed-design/ui/callout\";\n\nexport default function CalloutTextOnly() {\n  return (\n    <div className=\"flex flex-col gap-3 w-full\">\n      <Callout description=\"기능에 대한 안내 또는 유익한 내용을 전달해요. 콜아웃은 꼭 필요한 경우에만 절제하여 사용해요.\" />\n      <ActionableCallout description=\"기능에 대한 안내 또는 유익한 내용을 전달해요. 콜아웃은 꼭 필요한 경우에만 절제하여 사용해요.\" />\n      <DismissibleCallout description=\"기능에 대한 안내 또는 유익한 내용을 전달해요. 콜아웃은 꼭 필요한 경우에만 절제하여 사용해요.\" />\n    </div>\n  );\n}",
  "callout-warning": "import { ActionableCallout, Callout, DismissibleCallout } from \"seed-design/ui/callout\";\n\nexport default function CalloutWarning() {\n  return (\n    <div className=\"flex flex-col gap-3 w-full\">\n      <Callout\n        tone=\"warning\"\n        description=\"기능에 대한 안내 또는 유익한 내용을 전달해요. 콜아웃은 꼭 필요한 경우에만 절제하여 사용해요.\"\n      />\n      <ActionableCallout\n        tone=\"warning\"\n        description=\"기능에 대한 안내 또는 유익한 내용을 전달해요. 콜아웃은 꼭 필요한 경우에만 절제하여 사용해요.\"\n      />\n      <DismissibleCallout\n        tone=\"warning\"\n        description=\"기능에 대한 안내 또는 유익한 내용을 전달해요. 콜아웃은 꼭 필요한 경우에만 절제하여 사용해요.\"\n      />\n    </div>\n  );\n}",
  "callout-with-all": "import { IconCalendarFill } from \"@daangn/react-monochrome-icon\";\nimport { Callout } from \"seed-design/ui/callout\";\n\nexport default function CalloutWithAll() {\n  return (\n    <Callout\n      title=\"타이틀\"\n      icon={<IconCalendarFill />}\n      description=\"기능에 대한 안내 또는 유익한 내용을 전달해요. 콜아웃은 꼭 필요한 경우에만 절제하여 사용해요.\"\n      linkLabel=\"시도해 보기\"\n    />\n  );\n}",
  "callout-with-icon": "import { IconCalendarFill } from \"@daangn/react-monochrome-icon\";\nimport { Callout } from \"seed-design/ui/callout\";\n\nexport default function CalloutWithIcon() {\n  return (\n    <Callout\n      icon={<IconCalendarFill />}\n      description=\"기능에 대한 안내 또는 유익한 내용을 전달해요. 콜아웃은 꼭 필요한 경우에만 절제하여 사용해요.\"\n    />\n  );\n}",
  "callout-with-link-label": "import { Callout, DismissibleCallout } from \"seed-design/ui/callout\";\n\nexport default function CalloutWithLinkLabel() {\n  return (\n    <div className=\"flex flex-col gap-3 w-full\">\n      <Callout\n        description=\"기능에 대한 안내 또는 유익한 내용을 전달해요. 콜아웃은 꼭 필요한 경우에만 절제하여 사용해요.\"\n        linkLabel=\"시도해 보기\"\n      />\n      <DismissibleCallout\n        description=\"기능에 대한 안내 또는 유익한 내용을 전달해요. 콜아웃은 꼭 필요한 경우에만 절제하여 사용해요.\"\n        linkLabel=\"시도해 보기\"\n      />\n    </div>\n  );\n}",
  "callout-with-title-text": "import { ActionableCallout, Callout, DismissibleCallout } from \"seed-design/ui/callout\";\n\nexport default function CalloutWithTitleText() {\n  return (\n    <div className=\"flex flex-col gap-3 w-full\">\n      <Callout\n        title=\"타이틀\"\n        description=\"기능에 대한 안내 또는 유익한 내용을 전달해요. 콜아웃은 꼭 필요한 경우에만 절제하여 사용해요.\"\n      />\n      <ActionableCallout\n        title=\"타이틀\"\n        description=\"기능에 대한 안내 또는 유익한 내용을 전달해요. 콜아웃은 꼭 필요한 경우에만 절제하여 사용해요.\"\n      />\n      <DismissibleCallout\n        title=\"타이틀\"\n        description=\"기능에 대한 안내 또는 유익한 내용을 전달해요. 콜아웃은 꼭 필요한 경우에만 절제하여 사용해요.\"\n      />\n    </div>\n  );\n}",
  "checkbox-disabled": "import { Checkbox } from \"seed-design/ui/checkbox\";\n\nexport default function CheckboxDisabled() {\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"8px\" }}>\n      <Checkbox defaultChecked label=\"Disabled Checked, Square\" disabled />\n      <Checkbox checked={false} label=\"Disabled without Checked, Square\" disabled />\n      <Checkbox variant=\"ghost\" defaultChecked label=\"Disabled Checked, Ghost\" disabled />\n      <Checkbox variant=\"ghost\" checked={false} label=\"Disabled without Checked, Ghost\" disabled />\n    </div>\n  );\n}",
  "checkbox-indeterminate": "import { Checkbox } from \"seed-design/ui/checkbox\";\n\nexport default function CheckboxIndeterminate() {\n  return <Checkbox defaultChecked label=\"indeterminate\" indeterminate />;\n}",
  "checkbox-long-text": "import { Checkbox } from \"seed-design/ui/checkbox\";\n\nexport default function CheckboxLongText() {\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"8px\" }}>\n      <Checkbox\n        size=\"small\"\n        label=\"Lorem ipsum dolor sit, amet consectetur adipisicing elit. At a eaque fugiat sint sapiente.\n          Id, hic ex, blanditiis totam animi amet delectus temporibus quae fugiat magnam, quos eaque\n          dolorum a? Lorem ipsum dolor, sit amet consectetur adipisicing elit. Possimus labore unde\n          minus temporibus beatae commodi et nesciunt iure in dignissimos suscipit, alias ab\n          voluptatem facilis tempora numquam. Veritatis, dolorum suscipit! Lorem ipsum dolor sit,\n          amet consectetur adipisicing elit. Explicabo fugiat molestias iusto, ipsum distinctio\n          officia ad id ratione esse ducimus architecto deleniti illum reiciendis rerum, at\n          blanditiis molestiae. Cupiditate, nobis? Lorem ipsum dolor sit amet consectetur\n          adipisicing elit. Ab, magni. Aliquid inventore quaerat nemo architecto harum earum quas\n          porro repudiandae explicabo repellat repellendus magni, corporis omnis laborum, velit\n          dicta blanditiis. Lorem ipsum dolor sit, amet consectetur adipisicing elit. Debitis,\n          eveniet quas. Accusamus facere veritatis expedita delectus, asperiores numquam placeat\n          necessitatibus assumenda, nesciunt in dolorem sit provident repellendus, voluptatem earum!\n          Consequatur. Lorem ipsum dolor, sit amet consectetur adipisicing elit. Aut earum\n          asperiores aliquam magnam est delectus veritatis numquam sint porro tenetur dolores nobis,\n          deleniti voluptas quaerat, quia voluptatum soluta autem perspiciatis? Lorem ipsum dolor\n          sit amet consectetur adipisicing elit. Facilis possimus eaque aliquam maxime? Quidem enim,\n          sed itaque at veritatis nihil officia esse qui provident ipsa adipisci necessitatibus\n          officiis distinctio laborum!\"\n      />\n      <Checkbox\n        size=\"medium\"\n        label=\"Lorem ipsum dolor sit, amet consectetur adipisicing elit. At a eaque fugiat sint sapiente.\n          Id, hic ex, blanditiis totam animi amet delectus temporibus quae fugiat magnam, quos eaque\n          dolorum a? Lorem ipsum dolor, sit amet consectetur adipisicing elit. Possimus labore unde\n          minus temporibus beatae commodi et nesciunt iure in dignissimos suscipit, alias ab\n          voluptatem facilis tempora numquam. Veritatis, dolorum suscipit! Lorem ipsum dolor sit,\n          amet consectetur adipisicing elit. Explicabo fugiat molestias iusto, ipsum distinctio\n          officia ad id ratione esse ducimus architecto deleniti illum reiciendis rerum, at\n          blanditiis molestiae. Cupiditate, nobis? Lorem ipsum dolor sit amet consectetur\n          adipisicing elit. Ab, magni. Aliquid inventore quaerat nemo architecto harum earum quas\n          porro repudiandae explicabo repellat repellendus magni, corporis omnis laborum, velit\n          dicta blanditiis. Lorem ipsum dolor sit, amet consectetur adipisicing elit. Debitis,\n          eveniet quas. Accusamus facere veritatis expedita delectus, asperiores numquam placeat\n          necessitatibus assumenda, nesciunt in dolorem sit provident repellendus, voluptatem earum!\n          Consequatur. Lorem ipsum dolor, sit amet consectetur adipisicing elit. Aut earum\n          asperiores aliquam magnam est delectus veritatis numquam sint porro tenetur dolores nobis,\n          deleniti voluptas quaerat, quia voluptatum soluta autem perspiciatis? Lorem ipsum dolor\n          sit amet consectetur adipisicing elit. Facilis possimus eaque aliquam maxime? Quidem enim,\n          sed itaque at veritatis nihil officia esse qui provident ipsa adipisci necessitatibus\n          officiis distinctio laborum!\"\n      />\n      <Checkbox\n        size=\"large\"\n        label=\"Lorem ipsum dolor sit, amet consectetur adipisicing elit. At a eaque fugiat sint sapiente.\n          Id, hic ex, blanditiis totam animi amet delectus temporibus quae fugiat magnam, quos eaque\n          dolorum a? Lorem ipsum dolor, sit amet consectetur adipisicing elit. Possimus labore unde\n          minus temporibus beatae commodi et nesciunt iure in dignissimos suscipit, alias ab\n          voluptatem facilis tempora numquam. Veritatis, dolorum suscipit! Lorem ipsum dolor sit,\n          amet consectetur adipisicing elit. Explicabo fugiat molestias iusto, ipsum distinctio\n          officia ad id ratione esse ducimus architecto deleniti illum reiciendis rerum, at\n          blanditiis molestiae. Cupiditate, nobis? Lorem ipsum dolor sit amet consectetur\n          adipisicing elit. Ab, magni. Aliquid inventore quaerat nemo architecto harum earum quas\n          porro repudiandae explicabo repellat repellendus magni, corporis omnis laborum, velit\n          dicta blanditiis. Lorem ipsum dolor sit, amet consectetur adipisicing elit. Debitis,\n          eveniet quas. Accusamus facere veritatis expedita delectus, asperiores numquam placeat\n          necessitatibus assumenda, nesciunt in dolorem sit provident repellendus, voluptatem earum!\n          Consequatur. Lorem ipsum dolor, sit amet consectetur adipisicing elit. Aut earum\n          asperiores aliquam magnam est delectus veritatis numquam sint porro tenetur dolores nobis,\n          deleniti voluptas quaerat, quia voluptatum soluta autem perspiciatis? Lorem ipsum dolor\n          sit amet consectetur adipisicing elit. Facilis possimus eaque aliquam maxime? Quidem enim,\n          sed itaque at veritatis nihil officia esse qui provident ipsa adipisci necessitatibus\n          officiis distinctio laborum!\"\n      />\n    </div>\n  );\n}",
  "checkbox-preview": "import { Checkbox } from \"seed-design/ui/checkbox\";\n\nexport default function CheckboxPreview() {\n  return <Checkbox label=\"Hello World\" />;\n}",
  "checkbox-size": "import { Checkbox } from \"seed-design/ui/checkbox\";\n\nexport default function CheckboxSize() {\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"8px\" }}>\n      <Checkbox label=\"Small\" size=\"small\" />\n      <Checkbox label=\"Medium (default)\" size=\"medium\" />\n      <Checkbox label=\"Large\" size=\"large\" />\n    </div>\n  );\n}",
  "checkbox-stronger": "import { Checkbox } from \"seed-design/ui/checkbox\";\n\nexport default function CheckboxStronger() {\n  return <Checkbox label=\"Bold Label Text\" weight=\"stronger\" />;\n}",
  "checkbox-variant": "import { Checkbox } from \"seed-design/ui/checkbox\";\n\nexport default function CheckboxVariant() {\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"8px\" }}>\n      <Checkbox label=\"Square (default)\" variant=\"square\" />\n      <Checkbox label=\"Ghost\" variant=\"ghost\" />\n    </div>\n  );\n}",
  "chip-tabs-basic-activity": "import * as React from \"react\";\n\nimport { ChipTabs, ChipTabTrigger, ChipTabTriggerList } from \"seed-design/ui/chip-tabs\";\n\nimport type { ActivityComponentType } from \"@stackflow/react/future\";\nimport AppScreen from \"@/components/stackflow/ActivityLayout\";\n\ndeclare module \"@stackflow/config\" {\n  interface Register {\n    ChipTabsBasic: unknown;\n  }\n}\n\nconst ChipTabsBasicActivity: ActivityComponentType<\"ChipTabsBasic\"> = () => {\n  const [value, setValue] = React.useState(\"1\");\n\n  const commonStyle = {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#eeeeee\",\n    height: \"100%\",\n  };\n\n  return (\n    <AppScreen>\n      <ChipTabs\n        variant=\"neutralSolid\"\n        defaultValue=\"1\"\n        value={value}\n        onValueChange={(value) => setValue(value)}\n      >\n        <ChipTabTriggerList>\n          <ChipTabTrigger value=\"1\">라벨1</ChipTabTrigger>\n          <ChipTabTrigger value=\"2\">라벨2</ChipTabTrigger>\n          <ChipTabTrigger value=\"3\">라벨3</ChipTabTrigger>\n        </ChipTabTriggerList>\n      </ChipTabs>\n      {value === \"1\" && <div style={commonStyle}>content 1</div>}\n      {value === \"2\" && <div style={commonStyle}>content 2</div>}\n      {value === \"3\" && <div style={commonStyle}>content 3</div>}\n    </AppScreen>\n  );\n};\n\nexport default ChipTabsBasicActivity;",
  "chip-tabs-preview": "import * as React from \"react\";\nimport { ChipTabs, ChipTabTrigger, ChipTabTriggerList } from \"seed-design/ui/chip-tabs\";\n\nexport default function ChipTabsPreview() {\n  const [value, setValue] = React.useState(\"1\");\n  return (\n    <>\n      <ChipTabs\n        variant=\"neutralSolid\"\n        defaultValue=\"1\"\n        value={value}\n        onValueChange={(value) => setValue(value)}\n      >\n        <ChipTabTriggerList>\n          <ChipTabTrigger value=\"1\">라벨1</ChipTabTrigger>\n          <ChipTabTrigger value=\"2\">라벨2</ChipTabTrigger>\n          <ChipTabTrigger value=\"3\">라벨3</ChipTabTrigger>\n        </ChipTabTriggerList>\n      </ChipTabs>\n      {value === \"1\" && <div>content 1</div>}\n      {value === \"2\" && <div>content 2</div>}\n      {value === \"3\" && <div>content 3</div>}\n    </>\n  );\n}",
  "chip-tabs-variant-brand-solid": "import * as React from \"react\";\nimport { ChipTabs, ChipTabTrigger, ChipTabTriggerList } from \"seed-design/ui/chip-tabs\";\n\nexport default function ChipTabsVariantBrandSolid() {\n  const [value, setValue] = React.useState(\"1\");\n  return (\n    <>\n      <ChipTabs\n        variant=\"brandSolid\"\n        defaultValue=\"1\"\n        value={value}\n        onValueChange={(value) => setValue(value)}\n      >\n        <ChipTabTriggerList>\n          <ChipTabTrigger value=\"1\">라벨1</ChipTabTrigger>\n          <ChipTabTrigger value=\"2\">라벨2</ChipTabTrigger>\n          <ChipTabTrigger value=\"3\">라벨3</ChipTabTrigger>\n        </ChipTabTriggerList>\n      </ChipTabs>\n      {value === \"1\" && <div>content 1</div>}\n      {value === \"2\" && <div>content 2</div>}\n      {value === \"3\" && <div>content 3</div>}\n    </>\n  );\n}",
  "chip-tabs-variant-neutral-solid": "import * as React from \"react\";\nimport { ChipTabs, ChipTabTrigger, ChipTabTriggerList } from \"seed-design/ui/chip-tabs\";\n\nexport default function ChipTabsVariantNeutralSolid() {\n  const [value, setValue] = React.useState(\"1\");\n  return (\n    <>\n      <ChipTabs\n        variant=\"neutralSolid\"\n        defaultValue=\"1\"\n        value={value}\n        onValueChange={(value) => setValue(value)}\n      >\n        <ChipTabTriggerList>\n          <ChipTabTrigger value=\"1\">라벨1</ChipTabTrigger>\n          <ChipTabTrigger value=\"2\">라벨2</ChipTabTrigger>\n          <ChipTabTrigger value=\"3\">라벨3</ChipTabTrigger>\n        </ChipTabTriggerList>\n      </ChipTabs>\n      {value === \"1\" && <div>content 1</div>}\n      {value === \"2\" && <div>content 2</div>}\n      {value === \"3\" && <div>content 3</div>}\n    </>\n  );\n}",
  "control-chip-icon-only": "import { IconPlusFill } from \"@daangn/react-monochrome-icon\";\nimport { ControlChip } from \"seed-design/ui/control-chip\";\n\nexport default function ControlChipIconOnly() {\n  return (\n    <ControlChip.Toggle layout=\"iconOnly\">\n      <IconPlusFill />\n    </ControlChip.Toggle>\n  );\n}",
  "control-chip-medium": "import { ControlChip } from \"seed-design/ui/control-chip\";\n\nexport default function ActionChipMedium() {\n  return <ControlChip.Toggle size=\"medium\">라벨</ControlChip.Toggle>;\n}",
  "control-chip-prefix-icon": "import { IconPlusFill } from \"@daangn/react-monochrome-icon\";\nimport { ControlChip } from \"seed-design/ui/control-chip\";\n\nexport default function ControlChipPrefixIcon() {\n  return <ControlChip.Toggle prefixIcon={<IconPlusFill />}>라벨</ControlChip.Toggle>;\n}",
  "control-chip-preview": "import { ControlChip } from \"seed-design/ui/control-chip\";\n\nexport default function ControlChipPreview() {\n  return <ControlChip.Toggle>라벨</ControlChip.Toggle>;\n}",
  "control-chip-small": "import { ControlChip } from \"seed-design/ui/control-chip\";\n\nexport default function ActionChipSmall() {\n  return <ControlChip.Toggle size=\"small\">라벨</ControlChip.Toggle>;\n}",
  "control-chip-suffix-icon": "import { IconChevronDownFill } from \"@daangn/react-monochrome-icon\";\nimport { ControlChip } from \"seed-design/ui/control-chip\";\n\nexport default function ControlChipSuffixIcon() {\n  return <ControlChip.Toggle suffixIcon={<IconChevronDownFill />}>라벨</ControlChip.Toggle>;\n}",
  "extended-fab-layer-floating": "import { IconBellFill } from \"@daangn/react-monochrome-icon\";\nimport { ExtendedFab } from \"seed-design/ui/extended-fab\";\n\nexport default function ExtendedFabLayerFloating() {\n  return (\n    <ExtendedFab variant=\"layerFloating\" prefixIcon={<IconBellFill />}>\n      알림 설정\n    </ExtendedFab>\n  );\n}",
  "extended-fab-medium": "import { IconBellFill } from \"@daangn/react-monochrome-icon\";\nimport { ExtendedFab } from \"seed-design/ui/extended-fab\";\n\nexport default function ExtendedFabMedium() {\n  return (\n    <ExtendedFab size=\"medium\" prefixIcon={<IconBellFill />}>\n      알림 설정\n    </ExtendedFab>\n  );\n}",
  "extended-fab-neutral-solid": "import { IconBellFill } from \"@daangn/react-monochrome-icon\";\nimport { ExtendedFab } from \"seed-design/ui/extended-fab\";\n\nexport default function ExtendedFabNeutralSolid() {\n  return (\n    <ExtendedFab variant=\"neutralSolid\" prefixIcon={<IconBellFill />}>\n      알림 설정\n    </ExtendedFab>\n  );\n}",
  "extended-fab-preview": "import { IconBellFill } from \"@daangn/react-monochrome-icon\";\nimport { ExtendedFab } from \"seed-design/ui/extended-fab\";\n\nexport default function ExtendedFabPreview() {\n  return <ExtendedFab prefixIcon={<IconBellFill />}>알림 설정</ExtendedFab>;\n}",
  "extended-fab-small": "import { IconBellFill } from \"@daangn/react-monochrome-icon\";\nimport { ExtendedFab } from \"seed-design/ui/extended-fab\";\n\nexport default function ExtendedFabSmall() {\n  return (\n    <ExtendedFab size=\"small\" prefixIcon={<IconBellFill />}>\n      알림 설정\n    </ExtendedFab>\n  );\n}",
  "fab-preview": "import IconPlusLine from \"@daangn/react-monochrome-icon/IconPlusLine\";\nimport { Fab } from \"seed-design/ui/fab\";\n\nexport default function FabPreview() {\n  return (\n    <Fab aria-label=\"Example FAB\">\n      <IconPlusLine />\n    </Fab>\n  );\n}",
  "flex-preview": "import { Flex } from \"seed-design/ui/layout\";\n\nexport default function FlexPreview() {\n  return (\n    <Flex direction=\"column\" background=\"bg.dangerSolid\" gap=\"s4\" width=\"full\">\n      <Flex background=\"bg.neutralWeak\" paddingX=\"s4\" paddingY=\"s3\">\n        1\n      </Flex>\n      <Flex background=\"bg.neutralWeak\" paddingX=\"s4\" paddingY=\"s3\">\n        2\n      </Flex>\n      <Flex background=\"bg.neutralWeak\" paddingX=\"s4\" paddingY=\"s3\">\n        3\n      </Flex>\n    </Flex>\n  );\n}",
  "help-bubble-anchor": "import { Avatar } from \"seed-design/ui/avatar\";\nimport { HelpBubbleAnchor } from \"seed-design/ui/help-bubble\";\n\nexport default function HelpBubbleAnchorExample() {\n  return (\n    <HelpBubbleAnchor\n      open={true}\n      title=\"Anchor\"\n      description=\"클릭으로 열고 닫는 동작 없이 위치만 지정합니다.\"\n    >\n      <Avatar size=\"96\" src=\"https://avatars.githubusercontent.com/u/54893898?v=4\" fallback=\"L\" />\n    </HelpBubbleAnchor>\n  );\n}",
  "help-bubble-close-button": "import { ActionButton } from \"seed-design/ui/action-button\";\nimport { HelpBubbleTrigger } from \"seed-design/ui/help-bubble\";\n\nexport default function HelpBubbleCloseButton() {\n  return (\n    <HelpBubbleTrigger\n      defaultOpen\n      showCloseButton\n      title=\"Close Button\"\n      description=\"showCloseButton으로 닫기 버튼을 추가할 수 있어요.\"\n    >\n      <ActionButton>열기</ActionButton>\n    </HelpBubbleTrigger>\n  );\n}",
  "help-bubble-flip": "import { ActionButton } from \"seed-design/ui/action-button\";\nimport { HelpBubbleTrigger } from \"seed-design/ui/help-bubble\";\n\nexport default function HelpBubbleFlip() {\n  return (\n    <HelpBubbleTrigger\n      open\n      flip={false}\n      title=\"Flip\"\n      description=\"Flip을 끄면 화면 경계에서 방향이 바뀌지 않아요.\"\n    >\n      <ActionButton>열기</ActionButton>\n    </HelpBubbleTrigger>\n  );\n}",
  "help-bubble-placement": "import { ActionButton } from \"seed-design/ui/action-button\";\nimport { HelpBubbleTrigger } from \"seed-design/ui/help-bubble\";\n\nexport default function HelpBubblePreview() {\n  return (\n    <HelpBubbleTrigger\n      open\n      placement=\"bottom\"\n      title=\"Placement\"\n      description=\"Placement로 기본 위치를 설정할 수 있어요.\"\n    >\n      <ActionButton>열기</ActionButton>\n    </HelpBubbleTrigger>\n  );\n}",
  "help-bubble-preview": "import { ActionButton } from \"seed-design/ui/action-button\";\nimport { HelpBubbleTrigger } from \"seed-design/ui/help-bubble\";\n\nexport default function HelpBubblePreview() {\n  return (\n    <HelpBubbleTrigger\n      defaultOpen\n      flip={true}\n      title=\"타이틀\"\n      description=\"설명을 추가할 수 있어요.\"\n    >\n      <ActionButton>열기</ActionButton>\n    </HelpBubbleTrigger>\n  );\n}",
  "help-bubble-title-only": "import { ActionButton } from \"seed-design/ui/action-button\";\nimport { HelpBubbleTrigger } from \"seed-design/ui/help-bubble\";\n\nexport default function HelpBubbleTitleOnly() {\n  return (\n    <HelpBubbleTrigger open title=\"Title Only\">\n      <ActionButton>열기</ActionButton>\n    </HelpBubbleTrigger>\n  );\n}",
  "identity-placeholder-preview": "import { IdentityPlaceholder } from \"seed-design/ui/identity-placeholder\";\n\nexport default function IdentityPlaceholderPreview() {\n  return <IdentityPlaceholder />;\n}",
  "inline-banner-activity": "import * as React from \"react\";\n\nimport { InlineBanner, type InlineBannerProps } from \"seed-design/ui/inline-banner\";\nimport { ActionButton } from \"seed-design/ui/action-button\";\n\nimport type { ActivityComponentType } from \"@stackflow/react/future\";\nimport AppScreen from \"@/components/stackflow/ActivityLayout\";\n\ndeclare module \"@stackflow/config\" {\n  interface Register {\n    InlineBanner: unknown;\n  }\n}\n\nconst InlineBannerActivity: ActivityComponentType<\"InlineBanner\"> = () => {\n  const [variant, setVariant] =\n    React.useState<Extract<InlineBannerProps[\"variant\"], \"neutralWeak\" | \"dangerSolid\">>(\n      \"dangerSolid\",\n    );\n\n  return (\n    <AppScreen>\n      <InlineBanner\n        description=\"Lorem ipsum dolor sit amet consectetur adipisicing elit.\"\n        variant={variant}\n        {...(variant === \"dangerSolid\" && { style: { position: \"sticky\", top: 0 } })}\n      />\n      <div style={{ display: \"flex\", flexDirection: \"column\", padding: \"1rem\", gap: \"0.75rem\" }}>\n        <ActionButton\n          onClick={() =>\n            setVariant((prev) => (prev === \"dangerSolid\" ? \"neutralWeak\" : \"dangerSolid\"))\n          }\n        >\n          Toggle tone\n        </ActionButton>\n        <p style={{ marginBlock: 0, lineHeight: 1.35 }}>\n          Lorem ipsum dolor sit, amet consectetur adipisicing elit. At a eaque fugiat sint sapiente.\n          Id, hic ex, blanditiis totam animi amet delectus temporibus quae fugiat magnam, quos eaque\n          dolorum a? Lorem ipsum dolor, sit amet consectetur adipisicing elit. Possimus labore unde\n          minus temporibus beatae commodi et nesciunt iure in dignissimos suscipit, alias ab\n          voluptatem facilis tempora numquam. Veritatis, dolorum suscipit! Lorem ipsum dolor sit,\n          amet consectetur adipisicing elit. Explicabo fugiat molestias iusto, ipsum distinctio\n          officia ad id ratione esse ducimus architecto deleniti illum reiciendis rerum, at\n          blanditiis molestiae. Cupiditate, nobis? Lorem ipsum dolor sit amet consectetur\n          adipisicing elit. Ab, magni. Aliquid inventore quaerat nemo architecto harum earum quas\n          porro repudiandae explicabo repellat repellendus magni, corporis omnis laborum, velit\n          dicta blanditiis. Lorem ipsum dolor sit, amet consectetur adipisicing elit. Debitis,\n          eveniet quas. Accusamus facere veritatis expedita delectus, asperiores numquam placeat\n          necessitatibus assumenda, nesciunt in dolorem sit provident repellendus, voluptatem earum!\n          Consequatur. Lorem ipsum dolor, sit amet consectetur adipisicing elit. Aut earum\n          asperiores aliquam magnam est delectus veritatis numquam sint porro tenetur dolores nobis,\n          deleniti voluptas quaerat, quia voluptatum soluta autem perspiciatis? Lorem ipsum dolor\n          sit amet consectetur adipisicing elit. Facilis possimus eaque aliquam maxime? Quidem enim,\n          sed itaque at veritatis nihil officia esse qui provident ipsa adipisci necessitatibus\n          officiis distinctio laborum!\n        </p>\n      </div>\n    </AppScreen>\n  );\n};\n\nexport default InlineBannerActivity;",
  "inline-banner-danger-solid": "import {\n  ActionableInlineBanner,\n  InlineBanner,\n  LinkInlineBanner,\n} from \"seed-design/ui/inline-banner\";\nimport { IconExclamationmarkCircleFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function InlineBannerDangerSolid() {\n  return (\n    <div className=\"flex flex-col gap-3 w-full\">\n      <InlineBanner\n        variant=\"dangerSolid\"\n        icon={<IconExclamationmarkCircleFill />}\n        description=\"사업자 정보를 등록해주세요.\"\n      />\n      <LinkInlineBanner\n        variant=\"dangerSolid\"\n        icon={<IconExclamationmarkCircleFill />}\n        description=\"사업자 정보를 등록해주세요.\"\n        linkLabel=\"자세히보기\"\n      />\n      <ActionableInlineBanner\n        variant=\"dangerSolid\"\n        icon={<IconExclamationmarkCircleFill />}\n        description=\"사업자 정보를 등록해주세요.\"\n      />\n    </div>\n  );\n}",
  "inline-banner-danger-weak": "import {\n  ActionableInlineBanner,\n  InlineBanner,\n  LinkInlineBanner,\n} from \"seed-design/ui/inline-banner\";\nimport { IconExclamationmarkCircleFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function InlineBannerDangerWeak() {\n  return (\n    <div className=\"flex flex-col gap-3 w-full\">\n      <InlineBanner\n        variant=\"dangerWeak\"\n        icon={<IconExclamationmarkCircleFill />}\n        description=\"사업자 정보를 등록해주세요.\"\n      />\n      <LinkInlineBanner\n        variant=\"dangerWeak\"\n        icon={<IconExclamationmarkCircleFill />}\n        description=\"사업자 정보를 등록해주세요.\"\n        linkLabel=\"자세히보기\"\n      />\n      <ActionableInlineBanner\n        variant=\"dangerWeak\"\n        icon={<IconExclamationmarkCircleFill />}\n        description=\"사업자 정보를 등록해주세요.\"\n      />\n    </div>\n  );\n}",
  "inline-banner-informative-weak": "import {\n  ActionableInlineBanner,\n  DismissibleInlineBanner,\n  InlineBanner,\n  LinkInlineBanner,\n} from \"seed-design/ui/inline-banner\";\nimport { IconILowercaseSerifCircleFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function InlineBannerInformativeWeak() {\n  return (\n    <div className=\"flex flex-col gap-3 w-full\">\n      <InlineBanner\n        variant=\"informativeWeak\"\n        icon={<IconILowercaseSerifCircleFill />}\n        description=\"사업자 정보를 등록해주세요.\"\n      />\n      <LinkInlineBanner\n        variant=\"informativeWeak\"\n        icon={<IconILowercaseSerifCircleFill />}\n        description=\"사업자 정보를 등록해주세요.\"\n        linkLabel=\"자세히보기\"\n      />\n      <ActionableInlineBanner\n        variant=\"informativeWeak\"\n        icon={<IconILowercaseSerifCircleFill />}\n        description=\"사업자 정보를 등록해주세요.\"\n      />\n      <DismissibleInlineBanner\n        variant=\"informativeWeak\"\n        icon={<IconILowercaseSerifCircleFill />}\n        description=\"사업자 정보를 등록해주세요.\"\n      />\n    </div>\n  );\n}",
  "inline-banner-link-label-as-child": "import { LinkInlineBanner } from \"seed-design/ui/inline-banner\";\n\nexport default function InlineBannerLinkLabelAsChild() {\n  return (\n    <LinkInlineBanner\n      description=\"사업자 정보를 등록해주세요.\"\n      linkLabel={\n        <a href=\"https://www.daangn.com\" target=\"_blank\" rel=\"noreferrer\">\n          자세히보기\n        </a>\n      }\n      linkProps={{ asChild: true }}\n    />\n  );\n}",
  "inline-banner-neutral-weak": "import {\n  ActionableInlineBanner,\n  DismissibleInlineBanner,\n  InlineBanner,\n  LinkInlineBanner,\n} from \"seed-design/ui/inline-banner\";\nimport { IconBellFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function InlineBannerNeutralWeak() {\n  return (\n    <div className=\"flex flex-col gap-3 w-full\">\n      <InlineBanner\n        variant=\"neutralWeak\"\n        icon={<IconBellFill />}\n        description=\"사업자 정보를 등록해주세요.\"\n      />\n      <LinkInlineBanner\n        variant=\"neutralWeak\"\n        icon={<IconBellFill />}\n        description=\"사업자 정보를 등록해주세요.\"\n        linkLabel=\"자세히보기\"\n      />\n      <ActionableInlineBanner\n        variant=\"neutralWeak\"\n        icon={<IconBellFill />}\n        description=\"사업자 정보를 등록해주세요.\"\n      />\n      <DismissibleInlineBanner\n        variant=\"neutralWeak\"\n        icon={<IconBellFill />}\n        description=\"사업자 정보를 등록해주세요.\"\n      />\n    </div>\n  );\n}",
  "inline-banner-positive-weak": "import {\n  ActionableInlineBanner,\n  DismissibleInlineBanner,\n  InlineBanner,\n  LinkInlineBanner,\n} from \"seed-design/ui/inline-banner\";\nimport { IconCheckmarkCircleFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function InlineBannerPositiveWeak() {\n  return (\n    <div className=\"flex flex-col gap-3 w-full\">\n      <InlineBanner\n        variant=\"positiveWeak\"\n        icon={<IconCheckmarkCircleFill />}\n        description=\"사업자 정보를 등록해주세요.\"\n      />\n      <LinkInlineBanner\n        variant=\"positiveWeak\"\n        icon={<IconCheckmarkCircleFill />}\n        description=\"사업자 정보를 등록해주세요.\"\n        linkLabel=\"자세히보기\"\n      />\n      <ActionableInlineBanner\n        variant=\"positiveWeak\"\n        icon={<IconCheckmarkCircleFill />}\n        description=\"사업자 정보를 등록해주세요.\"\n      />\n      <DismissibleInlineBanner\n        variant=\"positiveWeak\"\n        icon={<IconCheckmarkCircleFill />}\n        description=\"사업자 정보를 등록해주세요.\"\n      />\n    </div>\n  );\n}",
  "inline-banner-preview": "import {\n  ActionableInlineBanner,\n  DismissibleInlineBanner,\n  InlineBanner,\n  LinkInlineBanner,\n} from \"seed-design/ui/inline-banner\";\n\nexport default function InlineBannerPreview() {\n  return (\n    <div className=\"flex flex-col gap-3 w-full\">\n      <InlineBanner description=\"Ut veniam in ea ea anim laborum magna dolore ea laborum duis ut aute mollit amet.\" />\n      <LinkInlineBanner\n        description=\"Ut veniam in ea ea anim laborum magna dolore ea laborum duis ut aute mollit amet.\"\n        linkLabel=\"자세히보기\"\n      />\n      <ActionableInlineBanner description=\"Ut veniam in ea ea anim laborum magna dolore ea laborum duis ut aute mollit amet.\" />\n      <DismissibleInlineBanner description=\"Ut veniam in ea ea anim laborum magna dolore ea laborum duis ut aute mollit amet.\" />\n    </div>\n  );\n}",
  "inline-banner-text-only": "import {\n  ActionableInlineBanner,\n  DismissibleInlineBanner,\n  InlineBanner,\n  LinkInlineBanner,\n} from \"seed-design/ui/inline-banner\";\n\nexport default function InlineBannerTextOnly() {\n  return (\n    <div className=\"flex flex-col gap-3 w-full\">\n      <InlineBanner description=\"사업자 정보를 등록해주세요.\" />\n      <LinkInlineBanner description=\"사업자 정보를 등록해주세요.\" linkLabel=\"자세히보기\" />\n      <ActionableInlineBanner description=\"사업자 정보를 등록해주세요.\" />\n      <DismissibleInlineBanner description=\"사업자 정보를 등록해주세요.\" />\n    </div>\n  );\n}",
  "inline-banner-warning-solid": "import {\n  ActionableInlineBanner,\n  DismissibleInlineBanner,\n  InlineBanner,\n  LinkInlineBanner,\n} from \"seed-design/ui/inline-banner\";\nimport { IconExclamationmarkCircleFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function InlineBannerWarningSolid() {\n  return (\n    <div className=\"flex flex-col gap-3 w-full\">\n      <InlineBanner\n        variant=\"warningSolid\"\n        icon={<IconExclamationmarkCircleFill />}\n        description=\"사업자 정보를 등록해주세요.\"\n      />\n      <LinkInlineBanner\n        variant=\"warningSolid\"\n        icon={<IconExclamationmarkCircleFill />}\n        description=\"사업자 정보를 등록해주세요.\"\n        linkLabel=\"자세히보기\"\n      />\n      <ActionableInlineBanner\n        variant=\"warningSolid\"\n        icon={<IconExclamationmarkCircleFill />}\n        description=\"사업자 정보를 등록해주세요.\"\n      />\n      <DismissibleInlineBanner\n        variant=\"warningSolid\"\n        icon={<IconExclamationmarkCircleFill />}\n        description=\"사업자 정보를 등록해주세요.\"\n      />\n    </div>\n  );\n}",
  "inline-banner-warning-weak": "import {\n  ActionableInlineBanner,\n  DismissibleInlineBanner,\n  InlineBanner,\n  LinkInlineBanner,\n} from \"seed-design/ui/inline-banner\";\nimport { IconExclamationmarkCircleFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function InlineBannerWarningWeak() {\n  return (\n    <div className=\"flex flex-col gap-3 w-full\">\n      <InlineBanner\n        variant=\"warningWeak\"\n        icon={<IconExclamationmarkCircleFill />}\n        description=\"사업자 정보를 등록해주세요.\"\n      />\n      <LinkInlineBanner\n        variant=\"warningWeak\"\n        icon={<IconExclamationmarkCircleFill />}\n        description=\"사업자 정보를 등록해주세요.\"\n        linkLabel=\"자세히보기\"\n      />\n      <ActionableInlineBanner\n        variant=\"warningWeak\"\n        icon={<IconExclamationmarkCircleFill />}\n        description=\"사업자 정보를 등록해주세요.\"\n      />\n      <DismissibleInlineBanner\n        variant=\"warningWeak\"\n        icon={<IconExclamationmarkCircleFill />}\n        description=\"사업자 정보를 등록해주세요.\"\n      />\n    </div>\n  );\n}",
  "inline-banner-with-all": "import {\n  ActionableInlineBanner,\n  DismissibleInlineBanner,\n  InlineBanner,\n  LinkInlineBanner,\n} from \"seed-design/ui/inline-banner\";\nimport { IconBellFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function InlineBannerWithAll() {\n  return (\n    <div className=\"flex flex-col gap-3 w-full\">\n      <InlineBanner\n        icon={<IconBellFill />}\n        title=\"타이틀\"\n        description=\"사업자 정보를 등록해주세요.\"\n      />\n      <LinkInlineBanner\n        icon={<IconBellFill />}\n        title=\"타이틀\"\n        description=\"사업자 정보를 등록해주세요.\"\n        linkLabel=\"자세히보기\"\n      />\n      <ActionableInlineBanner\n        icon={<IconBellFill />}\n        title=\"타이틀\"\n        description=\"사업자 정보를 등록해주세요.\"\n      />\n      <DismissibleInlineBanner\n        icon={<IconBellFill />}\n        title=\"타이틀\"\n        description=\"사업자 정보를 등록해주세요.\"\n      />\n    </div>\n  );\n}",
  "inline-banner-with-icon": "import {\n  ActionableInlineBanner,\n  DismissibleInlineBanner,\n  InlineBanner,\n  LinkInlineBanner,\n} from \"seed-design/ui/inline-banner\";\nimport { IconBellFill } from \"@daangn/react-monochrome-icon\";\n\nexport default function InlineBannerWithIcon() {\n  return (\n    <div className=\"flex flex-col gap-3 w-full\">\n      <InlineBanner icon={<IconBellFill />} description=\"사업자 정보를 등록해주세요.\" />\n      <LinkInlineBanner\n        icon={<IconBellFill />}\n        description=\"사업자 정보를 등록해주세요.\"\n        linkLabel=\"자세히보기\"\n      />\n      <ActionableInlineBanner icon={<IconBellFill />} description=\"사업자 정보를 등록해주세요.\" />\n      <DismissibleInlineBanner icon={<IconBellFill />} description=\"사업자 정보를 등록해주세요.\" />\n    </div>\n  );\n}",
  "inline-banner-with-title-text": "import {\n  ActionableInlineBanner,\n  DismissibleInlineBanner,\n  InlineBanner,\n  LinkInlineBanner,\n} from \"seed-design/ui/inline-banner\";\n\nexport default function InlineBannerWithTitleText() {\n  return (\n    <div className=\"flex flex-col gap-3 w-full\">\n      <InlineBanner title=\"타이틀\" description=\"사업자 정보를 등록해주세요.\" />\n      <LinkInlineBanner\n        title=\"타이틀\"\n        description=\"사업자 정보를 등록해주세요.\"\n        linkLabel=\"자세히보기\"\n      />\n      <ActionableInlineBanner title=\"타이틀\" description=\"사업자 정보를 등록해주세요.\" />\n      <DismissibleInlineBanner title=\"타이틀\" description=\"사업자 정보를 등록해주세요.\" />\n    </div>\n  );\n}",
  "multiline-text-field-constraints": "import { TextField, TextFieldTextarea } from \"seed-design/ui/text-field\";\n\nexport default function MultilineTextFieldConstraints() {\n  return (\n    <TextField label=\"라벨\" description=\"설명을 써주세요\">\n      <TextFieldTextarea\n        placeholder=\"플레이스홀더\"\n        style={{ minHeight: \"200px\", maxHeight: \"300px\" }}\n      />\n    </TextField>\n  );\n}",
  "multiline-text-field-disabled": "import { TextField, TextFieldTextarea } from \"seed-design/ui/text-field\";\n\nexport default function MultilineTextFieldDisabled() {\n  return (\n    <div className=\"grid grid-cols-2 gap-4 w-full\">\n      <TextField label=\"라벨\" description=\"설명을 써주세요\" disabled>\n        <TextFieldTextarea placeholder=\"플레이스홀더\" />\n      </TextField>\n      <TextField label=\"라벨\" description=\"설명을 써주세요\" disabled defaultValue=\"값\">\n        <TextFieldTextarea placeholder=\"플레이스홀더\" />\n      </TextField>\n      <TextField\n        label=\"라벨\"\n        description=\"설명을 써주세요\"\n        disabled\n        invalid\n        errorMessage=\"오류가 발생한 이유를 써주세요\"\n      >\n        <TextFieldTextarea placeholder=\"플레이스홀더\" />\n      </TextField>\n      <TextField\n        label=\"라벨\"\n        description=\"설명을 써주세요\"\n        disabled\n        invalid\n        errorMessage=\"오류가 발생한 이유를 써주세요\"\n        defaultValue=\"값\"\n      >\n        <TextFieldTextarea placeholder=\"플레이스홀더\" />\n      </TextField>\n    </div>\n  );\n}",
  "multiline-text-field-enabled": "import { TextField, TextFieldTextarea } from \"seed-design/ui/text-field\";\n\nexport default function MultilineTextFieldEnabled() {\n  return (\n    <div className=\"grid grid-cols-2 gap-4 w-full\">\n      <TextField label=\"라벨\" description=\"설명을 써주세요\">\n        <TextFieldTextarea placeholder=\"플레이스홀더\" />\n      </TextField>\n      <TextField label=\"라벨\" description=\"설명을 써주세요\" defaultValue=\"값\">\n        <TextFieldTextarea placeholder=\"플레이스홀더\" />\n      </TextField>\n      <TextField\n        label=\"라벨\"\n        description=\"설명을 써주세요\"\n        invalid\n        errorMessage=\"오류가 발생한 이유를 써주세요\"\n      >\n        <TextFieldTextarea placeholder=\"플레이스홀더\" />\n      </TextField>\n      <TextField\n        label=\"라벨\"\n        description=\"설명을 써주세요\"\n        invalid\n        errorMessage=\"오류가 발생한 이유를 써주세요\"\n        defaultValue=\"값\"\n      >\n        <TextFieldTextarea placeholder=\"플레이스홀더\" />\n      </TextField>\n    </div>\n  );\n}",
  "multiline-text-field-fixed-height": "import { TextField, TextFieldTextarea } from \"seed-design/ui/text-field\";\n\nexport default function MultilineTextFieldSpecifiedHeight() {\n  return (\n    <TextField label=\"라벨\" description=\"설명을 써주세요\">\n      <TextFieldTextarea placeholder=\"플레이스홀더\" style={{ height: \"250px\" }} />\n    </TextField>\n  );\n}",
  "multiline-text-field-formatting": "import { useMemo, useState } from \"react\";\nimport { TextField, TextFieldTextarea } from \"seed-design/ui/text-field\";\n\nexport default function MultilineTextFieldFormatting() {\n  const [value, setValue] = useState(\"\");\n\n  const formattedValue = useMemo(\n    () =>\n      value\n        .split(\"\")\n        .filter((char) => char !== \" \")\n        .join(\"\"),\n    [value],\n  );\n\n  return (\n    <TextField\n      label=\"레이블\"\n      description=\"공백을 입력할 수 없어요\"\n      value={formattedValue}\n      onValueChange={({ value }) => setValue(value)}\n    >\n      <TextFieldTextarea placeholder=\"공백을 입력해보세요\" />\n    </TextField>\n  );\n}",
  "multiline-text-field-grapheme-count": "import { TextField, TextFieldTextarea } from \"seed-design/ui/text-field\";\n\nexport default function MultilineTextFieldGraphemeCount() {\n  return (\n    <TextField label=\"라벨\" description=\"설명을 써주세요\" maxGraphemeCount={8}>\n      <TextFieldTextarea placeholder=\"플레이스홀더\" />\n    </TextField>\n  );\n}",
  "multiline-text-field-large": "import { TextField, TextFieldTextarea } from \"seed-design/ui/text-field\";\n\nexport default function MultilineTextFieldLarge() {\n  return (\n    <TextField label=\"라벨\" description=\"설명을 써주세요\" size=\"large\">\n      <TextFieldTextarea placeholder=\"플레이스홀더\" />\n    </TextField>\n  );\n}",
  "multiline-text-field-medium": "import { TextField, TextFieldTextarea } from \"seed-design/ui/text-field\";\n\nexport default function MultilineTextFieldMedium() {\n  return (\n    <TextField label=\"라벨\" description=\"설명을 써주세요\" size=\"medium\">\n      <TextFieldTextarea placeholder=\"플레이스홀더\" />\n    </TextField>\n  );\n}",
  "multiline-text-field-optional": "import { TextField, TextFieldTextarea } from \"seed-design/ui/text-field\";\n\nexport default function MultilineTextFieldOptional() {\n  return (\n    <TextField label=\"라벨\" description=\"설명을 써주세요\" indicator=\"(선택)\">\n      <TextFieldTextarea placeholder=\"플레이스홀더\" />\n    </TextField>\n  );\n}",
  "multiline-text-field-preview": "import { useState } from \"react\";\nimport { TextField, TextFieldTextarea } from \"seed-design/ui/text-field\";\n\nexport default function MultilineTextFieldPreview() {\n  const [value, setValue] = useState(\"\");\n\n  return (\n    <div className=\"flex flex-col items-center w-full\">\n      <TextField value={value} onValueChange={({ value }) => setValue(value)}>\n        <TextFieldTextarea autoFocus />\n      </TextField>\n      <p className=\"text-center\">현재 값: {value}</p>\n    </div>\n  );\n}",
  "multiline-text-field-react-hook-form": "import { ActionButton } from \"seed-design/ui/action-button\";\nimport { IconHouseLine } from \"@daangn/react-monochrome-icon\";\nimport { useForm } from \"react-hook-form\";\nimport { TextField, TextFieldTextarea } from \"seed-design/ui/text-field\";\n\ninterface FormValues {\n  bio: string;\n  address: string;\n}\n\nexport default function MultilineTextFieldReactHookForm() {\n  const {\n    register,\n    handleSubmit,\n    clearErrors,\n    formState: { errors },\n  } = useForm<FormValues>();\n\n  const onValid = (data: FormValues) => {\n    window.alert(JSON.stringify(data, null, 2));\n  };\n\n  return (\n    <form className=\"grid grid-cols-2 gap-3 w-full\" onSubmit={handleSubmit(onValid)}>\n      <TextField\n        {...register(\"bio\", { required: \"필수 입력 항목입니다\" })}\n        label=\"자기소개\"\n        description=\"자기소개를 써주세요\"\n        invalid={!!errors.bio}\n        errorMessage={errors.bio?.message}\n        indicator=\"(필수)\"\n        required\n      >\n        <TextFieldTextarea placeholder=\"저는…\" />\n      </TextField>\n      <TextField\n        {...register(\"address\", {\n          required: \"필수 입력 항목입니다\",\n          pattern: {\n            value: /^대한민국/,\n            message: \"대한민국으로 시작해주세요\",\n          },\n        })}\n        label=\"주소\"\n        description=\"주소를 써주세요\"\n        invalid={!!errors.address}\n        errorMessage={errors.address?.message}\n        indicator=\"(필수)\"\n        required\n      >\n        <TextFieldTextarea placeholder=\"대한민국 서울특별시 은평구\" />\n      </TextField>\n      <div className=\"col-span-2 flex gap-2\">\n        <ActionButton type=\"submit\" className=\"grow\">\n          제출\n        </ActionButton>\n        <ActionButton\n          type=\"reset\"\n          onClick={() => clearErrors([\"bio\", \"address\"])}\n          variant=\"neutralWeak\"\n        >\n          초기화\n        </ActionButton>\n      </div>\n    </form>\n  );\n}",
  "multiline-text-field-read-only": "import { TextField, TextFieldTextarea } from \"seed-design/ui/text-field\";\n\nexport default function MultilineTextFieldReadOnly() {\n  return (\n    <div className=\"grid grid-cols-2 gap-4 w-full\">\n      <TextField label=\"라벨\" description=\"설명을 써주세요\" readOnly>\n        <TextFieldTextarea placeholder=\"플레이스홀더\" />\n      </TextField>\n      <TextField label=\"라벨\" description=\"설명을 써주세요\" readOnly defaultValue=\"값\">\n        <TextFieldTextarea placeholder=\"플레이스홀더\" />\n      </TextField>\n      <TextField\n        label=\"라벨\"\n        description=\"설명을 써주세요\"\n        readOnly\n        invalid\n        errorMessage=\"오류가 발생한 이유를 써주세요\"\n      >\n        <TextFieldTextarea placeholder=\"플레이스홀더\" />\n      </TextField>\n      <TextField\n        label=\"라벨\"\n        description=\"설명을 써주세요\"\n        readOnly\n        invalid\n        errorMessage=\"오류가 발생한 이유를 써주세요\"\n        defaultValue=\"값\"\n      >\n        <TextFieldTextarea placeholder=\"플레이스홀더\" />\n      </TextField>\n    </div>\n  );\n}",
  "multiline-text-field-required": "import { TextField, TextFieldTextarea } from \"seed-design/ui/text-field\";\n\nexport default function MultilineTextFieldRequired() {\n  return (\n    <TextField label=\"라벨\" description=\"설명을 써주세요\" required indicator=\"(필수)\">\n      <TextFieldTextarea placeholder=\"플레이스홀더\" />\n    </TextField>\n  );\n}",
  "multiline-text-field-slicing": "import { useState } from \"react\";\nimport { TextField, TextFieldTextarea } from \"seed-design/ui/text-field\";\n\nexport default function MultilineTextFieldSlicing() {\n  const [value, setValue] = useState(\"\");\n\n  return (\n    <TextField\n      label=\"라벨\"\n      description=\"6글자까지 입력 가능합니다\"\n      maxGraphemeCount={6}\n      value={value}\n      onValueChange={({ slicedValue }) => setValue(slicedValue)}\n    >\n      <TextFieldTextarea placeholder=\"플레이스홀더\" />\n    </TextField>\n  );\n}",
  "multiline-text-field-xlarge": "import { TextField, TextFieldTextarea } from \"seed-design/ui/text-field\";\n\nexport default function MultilineTextFieldXlarge() {\n  return (\n    <TextField label=\"라벨\" description=\"설명을 써주세요\" size=\"xlarge\">\n      <TextFieldTextarea placeholder=\"플레이스홀더\" />\n    </TextField>\n  );\n}",
  "progress-circle-24": "import { ProgressCircle } from \"seed-design/ui/progress-circle\";\n\nexport default function ProgressCircle24() {\n  return <ProgressCircle size=\"24\" />;\n}",
  "progress-circle-40": "import { ProgressCircle } from \"seed-design/ui/progress-circle\";\n\nexport default function ProgressCircle40() {\n  return <ProgressCircle size=\"40\" />;\n}",
  "progress-circle-brand": "import { ProgressCircle } from \"seed-design/ui/progress-circle\";\n\nexport default function ProgressCircleBrand() {\n  return <ProgressCircle tone=\"brand\" />;\n}",
  "progress-circle-determinate": "import { ProgressCircle } from \"seed-design/ui/progress-circle\";\n\nexport default function ProgressCircleDeterminate() {\n  return <ProgressCircle minValue={0} maxValue={100} value={40} />;\n}",
  "progress-circle-indeterminate": "import { ProgressCircle } from \"seed-design/ui/progress-circle\";\n\nexport default function ProgressCirclePreview() {\n  // if you want to show an indeterminate progress circle, you can pass `undefined` or omit the `value` prop\n  return <ProgressCircle value={undefined} />;\n}",
  "progress-circle-neutral": "import { ProgressCircle } from \"seed-design/ui/progress-circle\";\n\nexport default function ProgressCircleNeutral() {\n  return <ProgressCircle tone=\"neutral\" />;\n}",
  "progress-circle-preview": "import { ProgressCircle } from \"seed-design/ui/progress-circle\";\n\nexport default function ProgressCirclePreview() {\n  return <ProgressCircle tone=\"neutral\" size=\"40\" />;\n}",
  "progress-circle-small": "import { ProgressCircle } from \"seed-design/ui/progress-circle\";\n\nexport default function ProgressCirclePreview() {\n  return <ProgressCircle size=\"40\" />;\n}",
  "progress-circle-static-white": "import { ProgressCircle } from \"seed-design/ui/progress-circle\";\n\nexport default function ProgressCircleStaticWhite() {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flex: 1,\n        width: \"100%\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        background: \"#000\",\n      }}\n    >\n      <ProgressCircle tone=\"staticWhite\" />\n    </div>\n  );\n}",
  "reaction-button-disabled": "import { IconFaceSmileCircleFill } from \"@daangn/react-monochrome-icon\";\nimport { ReactionButton } from \"seed-design/ui/reaction-button\";\n\nexport default function ReactionButtonDisabled() {\n  return (\n    <ReactionButton prefixIcon={<IconFaceSmileCircleFill />} disabled>\n      비활성\n    </ReactionButton>\n  );\n}",
  "reaction-button-loading": "import { IconFaceSmileCircleFill } from \"@daangn/react-monochrome-icon\";\nimport { useState } from \"react\";\nimport { ReactionButton } from \"seed-design/ui/reaction-button\";\n\nexport default function ReactionButtonLoading() {\n  const [pressed, setPressed] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  function handleToggle() {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n      setPressed((prev) => !prev);\n    }, 2000);\n  }\n\n  // 이벤트 핸들링이 필요할 수 있으므로 loading은 disabled를 포함하지 않습니다. 이벤트 발생을 원하지 않는 경우, disabled 속성을 추가해주세요.\n  return (\n    <ReactionButton\n      prefixIcon={<IconFaceSmileCircleFill />}\n      loading={loading}\n      pressed={pressed}\n      onPressedChange={handleToggle}\n    >\n      시간이 걸리는 토글\n    </ReactionButton>\n  );\n}",
  "reaction-button-preview": "import { IconFaceSmileCircleFill } from \"@daangn/react-monochrome-icon\";\nimport { ReactionButton } from \"seed-design/ui/reaction-button\";\n\nexport default function ReactionButtonPreview() {\n  return (\n    <ReactionButton prefixIcon={<IconFaceSmileCircleFill />} count={1}>\n      도움돼요\n    </ReactionButton>\n  );\n}",
  "reaction-button-small": "import { IconFaceSmileCircleFill } from \"@daangn/react-monochrome-icon\";\nimport { ReactionButton } from \"seed-design/ui/reaction-button\";\n\nexport default function ReactionButtonSmall() {\n  return (\n    <ReactionButton prefixIcon={<IconFaceSmileCircleFill />} size=\"small\" count={1}>\n      도움돼요\n    </ReactionButton>\n  );\n}",
  "reaction-button-xsmall": "import { IconFaceSmileCircleFill } from \"@daangn/react-monochrome-icon\";\nimport { ReactionButton } from \"seed-design/ui/reaction-button\";\n\nexport default function ReactionButtonXsmall() {\n  return (\n    <ReactionButton prefixIcon={<IconFaceSmileCircleFill />} size=\"xsmall\" count={1}>\n      도움돼요\n    </ReactionButton>\n  );\n}",
  "segmented-control-disabled": "import { SegmentedControl, Segment } from \"seed-design/ui/segmented-control\";\n\nexport default function SegmentedControlPreview() {\n  return (\n    <SegmentedControl defaultValue=\"Hot\" disabled>\n      <Segment value=\"Hot\">Hot</Segment>\n      <Segment value=\"New\">New</Segment>\n    </SegmentedControl>\n  );\n}",
  "segmented-control-fixed-width": "import { SegmentedControl, Segment } from \"seed-design/ui/segmented-control\";\n\nexport default function SegmentedControlFixedWidth() {\n  return (\n    <SegmentedControl defaultValue=\"new\">\n      <Segment value=\"new\">New</Segment>\n      <Segment value=\"hot\">Hot</Segment>\n    </SegmentedControl>\n  );\n}",
  "segmented-control-long-label-fixed-width": "import { SegmentedControl, Segment } from \"seed-design/ui/segmented-control\";\n\nexport default function SegmentedControlLongLabelFixedWidth() {\n  return (\n    <SegmentedControl defaultValue=\"price\">\n      <Segment value=\"price\">가격 높은 순</Segment>\n      <Segment value=\"discount\">할인율 높은 순</Segment>\n      <Segment value=\"popularity\">인기 많은 순</Segment>\n    </SegmentedControl>\n  );\n}",
  "segmented-control-long-label": "import { SegmentedControl, Segment } from \"seed-design/ui/segmented-control\";\n\nexport default function SegmentedControlLongLabel() {\n  return (\n    <SegmentedControl defaultValue=\"price\">\n      <Segment value=\"price\">가격 높은 순</Segment>\n      <Segment value=\"discount\">할인율 높은 순</Segment>\n      <Segment value=\"popularity\">인기 많은 순</Segment>\n    </SegmentedControl>\n  );\n}",
  "segmented-control-preview": "import { SegmentedControl, Segment } from \"seed-design/ui/segmented-control\";\n\nexport default function SegmentedControlPreview() {\n  return (\n    <SegmentedControl defaultValue=\"Hot\">\n      <Segment value=\"Hot\">Hot</Segment>\n      <Segment value=\"New\">New</Segment>\n    </SegmentedControl>\n  );\n}",
  "select-box-check-preview": "import { SelectBoxCheck, SelectBoxCheckGroup } from \"seed-design/ui/select-box\";\n\nexport default function SelectBoxCheckPreview() {\n  return (\n    <SelectBoxCheckGroup>\n      <SelectBoxCheck label=\"Culpa\" defaultChecked />\n      <SelectBoxCheck\n        label=\"Voluptate\"\n        description=\"Elit cupidatat dolore fugiat enim veniam culpa.\"\n      />\n      <SelectBoxCheck label=\"Eiusmod\" />\n    </SelectBoxCheckGroup>\n  );\n}",
  "select-box-radio-preview": "import { SelectBoxRadioGroup, SelectBoxRadio } from \"seed-design/ui/select-box\";\n\nexport default function SelectBoxRadioPreview() {\n  return (\n    <SelectBoxRadioGroup defaultValue=\"apple\" aria-label=\"과일\">\n      <SelectBoxRadio value=\"apple\" label=\"Culpa\" />\n      <SelectBoxRadio\n        value=\"voluptate\"\n        label=\"Voluptate\"\n        description=\"Elit cupidatat dolore fugiat enim veniam culpa.\"\n      />\n      <SelectBoxRadio value=\"eiusmod\" label=\"Eiusmod\" />\n    </SelectBoxRadioGroup>\n  );\n}",
  "skeleton-preview": "import { Flex } from \"seed-design/ui/layout\";\nimport { Skeleton } from \"seed-design/ui/skeleton\";\n\nexport default function SkeletonPreview() {\n  return (\n    <Flex gap=\"s4\" alignItems=\"center\">\n      <Skeleton radius=\"full\" width=\"s12\" height=\"s12\" />\n      <Flex flexDirection=\"column\" gap=\"s2\">\n        <Skeleton radius=\"8\" height=\"s4\" width=\"250px\" />\n        <Skeleton radius=\"8\" height=\"s4\" width=\"250px\" />\n      </Flex>\n    </Flex>\n  );\n}",
  "skeleton-radius": "import { Skeleton } from \"seed-design/ui/skeleton\";\nimport { Flex } from \"seed-design/ui/layout\";\n\nexport default function SkeletonRadius() {\n  return (\n    <Flex gap=\"s4\" alignItems=\"center\">\n      <Skeleton radius=\"0\" width=\"s12\" height=\"s12\" />\n      <Skeleton radius=\"8\" width=\"s12\" height=\"s12\" />\n      <Skeleton radius=\"16\" width=\"s12\" height=\"s12\" />\n      <Skeleton radius=\"full\" width=\"s12\" height=\"s12\" />\n    </Flex>\n  );\n}",
  "switch-disabled": "import { Switch } from \"seed-design/ui/switch\";\n\nexport default function SwitchDisabled() {\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\", gap: 10 }}>\n      <Switch disabled />\n      <Switch checked disabled />\n    </div>\n  );\n}",
  "switch-medium": "import { useState } from \"react\";\nimport { Switch } from \"seed-design/ui/switch\";\n\nexport default function SwitchMedium() {\n  const [isChecked, setIsChecked] = useState(false);\n\n  return <Switch size=\"medium\" checked={isChecked} onCheckedChange={setIsChecked} />;\n}",
  "switch-preview": "import { useState } from \"react\";\nimport { Switch } from \"seed-design/ui/switch\";\n\nexport default function SwitchPreview() {\n  const [isChecked, setIsChecked] = useState(false);\n\n  return <Switch checked={isChecked} onCheckedChange={setIsChecked} />;\n}",
  "switch-small": "import { useState } from \"react\";\nimport { Switch } from \"seed-design/ui/switch\";\n\nexport default function SwitchSmall() {\n  const [isChecked, setIsChecked] = useState(false);\n\n  return <Switch size=\"small\" checked={isChecked} onCheckedChange={setIsChecked} />;\n}",
  "tabs-alert": "import { Tabs, TabContent, TabContentList, TabTrigger, TabTriggerList } from \"seed-design/ui/tabs\";\n\nexport default function TabsAlert() {\n  return (\n    <div style={{ width: \"360px\" }}>\n      <Tabs defaultValue=\"1\">\n        <TabTriggerList>\n          <TabTrigger value=\"1\">라벨1</TabTrigger>\n          <TabTrigger value=\"2\" alert>\n            라벨2\n          </TabTrigger>\n          <TabTrigger value=\"3\">라벨3</TabTrigger>\n        </TabTriggerList>\n        <TabContentList>\n          <TabContent value=\"1\">\n            <Content>Content 1</Content>\n          </TabContent>\n          <TabContent value=\"2\">\n            <Content>Content 2</Content>\n          </TabContent>\n          <TabContent value=\"3\">\n            <Content>Content 3</Content>\n          </TabContent>\n        </TabContentList>\n      </Tabs>\n    </div>\n  );\n}\n\nconst Content = (props: React.PropsWithChildren) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"300px\",\n        backgroundColor: \"var(--seed-color-bg-layer-default)\",\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};",
  "tabs-disabled": "import { Tabs, TabContent, TabContentList, TabTrigger, TabTriggerList } from \"seed-design/ui/tabs\";\n\nexport default function TabsDisabled() {\n  return (\n    <div style={{ width: \"360px\" }}>\n      <Tabs defaultValue=\"1\">\n        <TabTriggerList>\n          <TabTrigger value=\"1\">라벨1</TabTrigger>\n          <TabTrigger value=\"2\" isDisabled>\n            라벨2\n          </TabTrigger>\n          <TabTrigger value=\"3\">라벨3</TabTrigger>\n        </TabTriggerList>\n        <TabContentList>\n          <TabContent value=\"1\">\n            <Content>Content 1</Content>\n          </TabContent>\n          <TabContent value=\"2\">\n            <Content>Content 2</Content>\n          </TabContent>\n          <TabContent value=\"3\">\n            <Content>Content 3</Content>\n          </TabContent>\n        </TabContentList>\n      </Tabs>\n    </div>\n  );\n}\n\nconst Content = (props: React.PropsWithChildren) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"300px\",\n        backgroundColor: \"var(--seed-color-bg-layer-default)\",\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};",
  "tabs-dynamic-height": "import { Tabs, TabContent, TabContentList, TabTrigger, TabTriggerList } from \"seed-design/ui/tabs\";\n\nexport default function TabsDynamicHeight() {\n  return (\n    <div style={{ width: \"360px\" }}>\n      <Tabs defaultValue=\"1\" lazyMode=\"unmount\" isLazy={true} isSwipeable={false}>\n        <TabTriggerList>\n          <TabTrigger value=\"1\">라벨1</TabTrigger>\n          <TabTrigger value=\"2\">라벨2</TabTrigger>\n          <TabTrigger value=\"3\">라벨3</TabTrigger>\n        </TabTriggerList>\n        <TabContentList>\n          <TabContent value=\"1\">\n            <Content height=\"100px\">Content 1</Content>\n          </TabContent>\n          <TabContent value=\"2\">\n            <Content height=\"200px\">Content 2</Content>\n          </TabContent>\n          <TabContent value=\"3\">\n            <Content height=\"300px\">Content 3</Content>\n          </TabContent>\n        </TabContentList>\n      </Tabs>\n      <div style={{ height: \"100px\", backgroundColor: \"gray\" }}>아래 컨텐츠</div>\n    </div>\n  );\n}\n\nconst Content = (props: React.PropsWithChildren<{ height: string }>) => {\n  const { height, children } = props;\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height,\n        backgroundColor: \"var(--seed-color-bg-layer-default)\",\n      }}\n    >\n      {children}\n    </div>\n  );\n};",
  "tabs-fix-trigger-list": "import { Tabs, TabContent, TabContentList, TabTrigger, TabTriggerList } from \"seed-design/ui/tabs\";\n\nexport default function TabsFixTriggerList() {\n  return (\n    // 600은 화면 높이라고 가정합니다.\n    <div style={{ width: \"360px\", height: \"600px\" }}>\n      <Tabs\n        defaultValue=\"1\"\n        lazyMode=\"keepMounted\"\n        isLazy={true}\n        size=\"medium\"\n        isSwipeable={false}\n        fixTriggerList\n        style={{ height: \"100%\" }} // 탭 영역을 전체 화면으로 설정합니다.\n      >\n        <TabTriggerList>\n          <TabTrigger value=\"1\">라벨1</TabTrigger>\n          <TabTrigger value=\"2\">라벨2</TabTrigger>\n          <TabTrigger value=\"3\">라벨3</TabTrigger>\n        </TabTriggerList>\n        <TabContentList>\n          <TabContent value=\"1\">\n            <Content height=\"1000px\">Content 1</Content>\n          </TabContent>\n          <TabContent value=\"2\">\n            <Content height=\"1000px\">Content 2</Content>\n          </TabContent>\n          <TabContent value=\"3\">\n            <Content height=\"1000px\">Content 3</Content>\n          </TabContent>\n        </TabContentList>\n      </Tabs>\n    </div>\n  );\n}\n\nconst Content = (props: React.PropsWithChildren<{ height: string }>) => {\n  const { height, children } = props;\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height,\n        background: \"linear-gradient(to bottom, white, gray)\",\n      }}\n    >\n      {children}\n    </div>\n  );\n};",
  "tabs-layout-fill": "import { Tabs, TabContent, TabContentList, TabTrigger, TabTriggerList } from \"seed-design/ui/tabs\";\n\nexport default function TabsLayoutFill() {\n  return (\n    <div style={{ width: \"360px\" }}>\n      <Tabs defaultValue=\"2\" layout=\"fill\">\n        <TabTriggerList>\n          <TabTrigger value=\"1\">라벨1</TabTrigger>\n          <TabTrigger value=\"2\">라벨2</TabTrigger>\n          <TabTrigger value=\"3\">라벨3</TabTrigger>\n        </TabTriggerList>\n        <TabContentList>\n          <TabContent value=\"1\">\n            <Content>Content 1</Content>\n          </TabContent>\n          <TabContent value=\"2\">\n            <Content>Content 2</Content>\n          </TabContent>\n          <TabContent value=\"3\">\n            <Content>Content 3</Content>\n          </TabContent>\n        </TabContentList>\n      </Tabs>\n    </div>\n  );\n}\n\nconst Content = (props: React.PropsWithChildren) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"300px\",\n        backgroundColor: \"var(--seed-color-bg-layer-default)\",\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};",
  "tabs-layout-hug": "import { Tabs, TabContent, TabContentList, TabTrigger, TabTriggerList } from \"seed-design/ui/tabs\";\n\nexport default function TabsLayoutHug() {\n  return (\n    <div style={{ width: \"360px\" }}>\n      <Tabs defaultValue=\"1\" layout=\"hug\">\n        <TabTriggerList>\n          <TabTrigger value=\"1\">라벨1</TabTrigger>\n          <TabTrigger value=\"2\">라벨2</TabTrigger>\n          <TabTrigger value=\"3\">라벨3</TabTrigger>\n        </TabTriggerList>\n        <TabContentList>\n          <TabContent value=\"1\">\n            <Content>Content 1</Content>\n          </TabContent>\n          <TabContent value=\"2\">\n            <Content>Content 2</Content>\n          </TabContent>\n          <TabContent value=\"3\">\n            <Content>Content 3</Content>\n          </TabContent>\n        </TabContentList>\n      </Tabs>\n    </div>\n  );\n}\n\nconst Content = (props: React.PropsWithChildren) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"300px\",\n        backgroundColor: \"var(--seed-color-bg-layer-default)\",\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};",
  "tabs-preview": "import { Tabs, TabContent, TabContentList, TabTrigger, TabTriggerList } from \"seed-design/ui/tabs\";\n\nexport default function TabsPreview() {\n  return (\n    <div style={{ width: \"360px\" }}>\n      <Tabs defaultValue=\"1\">\n        <TabTriggerList>\n          <TabTrigger value=\"1\">라벨1</TabTrigger>\n          <TabTrigger value=\"2\">라벨2</TabTrigger>\n          <TabTrigger value=\"3\">라벨3</TabTrigger>\n        </TabTriggerList>\n        <TabContentList>\n          <TabContent value=\"1\">\n            <Content>Content 1</Content>\n          </TabContent>\n          <TabContent value=\"2\">\n            <Content>Content 2</Content>\n          </TabContent>\n          <TabContent value=\"3\">\n            <Content>Content 3</Content>\n          </TabContent>\n        </TabContentList>\n      </Tabs>\n    </div>\n  );\n}\n\nconst Content = (props: React.PropsWithChildren) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"300px\",\n        backgroundColor: \"var(--seed-color-bg-layer-default)\",\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};",
  "tabs-scroll-top": "import { RefObject, useRef, useState } from \"react\";\nimport { TabContent, TabContentList, Tabs, TabTrigger, TabTriggerList } from \"seed-design/ui/tabs\";\n\nexport default function TabsScrollTop() {\n  const [currentTab, setCurrentTab] = useState(\"1\");\n  const contentRefs: Record<string, RefObject<HTMLDivElement>> = {\n    \"1\": useRef(null),\n    \"2\": useRef(null),\n  };\n\n  const handleTriggerClick = (value: string) => {\n    if (value === currentTab) {\n      contentRefs[value].current?.scrollTo({ top: 0, behavior: \"smooth\" });\n    }\n  };\n\n  return (\n    <div style={{ width: \"360px\" }}>\n      <Tabs layout=\"fill\" value={currentTab} onValueChange={setCurrentTab} isSwipeable={false}>\n        <TabTriggerList>\n          <TabTrigger onClick={() => handleTriggerClick(\"1\")} value=\"1\">\n            라벨1\n          </TabTrigger>\n          <TabTrigger onClick={() => handleTriggerClick(\"2\")} value=\"2\">\n            라벨2\n          </TabTrigger>\n        </TabTriggerList>\n        <TabContentList>\n          <TabContent ref={contentRefs[\"1\"]} value=\"1\" style={{ maxHeight: \"200px\" }}>\n            <Content height=\"1000px\">Content 1</Content>\n          </TabContent>\n          <TabContent ref={contentRefs[\"2\"]} value=\"2\" style={{ maxHeight: \"200px\" }}>\n            <Content height=\"1000px\">Content 2</Content>\n          </TabContent>\n        </TabContentList>\n      </Tabs>\n    </div>\n  );\n}\n\nconst Content = (props: React.PropsWithChildren<{ height: string }>) => {\n  const { height, children } = props;\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        height,\n        backgroundColor: \"var(--seed-color-bg-layer-default)\",\n      }}\n    >\n      {children}\n    </div>\n  );\n};",
  "tabs-size-medium": "import { Tabs, TabContent, TabContentList, TabTrigger, TabTriggerList } from \"seed-design/ui/tabs\";\n\nexport default function TabsSizeMedium() {\n  return (\n    <div style={{ width: \"360px\" }}>\n      <Tabs defaultValue=\"1\" size=\"medium\">\n        <TabTriggerList>\n          <TabTrigger value=\"1\">라벨1</TabTrigger>\n          <TabTrigger value=\"2\">라벨2</TabTrigger>\n          <TabTrigger value=\"3\">라벨3</TabTrigger>\n        </TabTriggerList>\n        <TabContentList>\n          <TabContent value=\"1\">\n            <Content>Content 1</Content>\n          </TabContent>\n          <TabContent value=\"2\">\n            <Content>Content 2</Content>\n          </TabContent>\n          <TabContent value=\"3\">\n            <Content>Content 3</Content>\n          </TabContent>\n        </TabContentList>\n      </Tabs>\n    </div>\n  );\n}\n\nconst Content = (props: React.PropsWithChildren) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"300px\",\n        backgroundColor: \"var(--seed-color-bg-layer-default)\",\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};",
  "tabs-size-small": "import { Tabs, TabContent, TabContentList, TabTrigger, TabTriggerList } from \"seed-design/ui/tabs\";\n\nexport default function TabsSizeSmall() {\n  return (\n    <div style={{ width: \"360px\" }}>\n      <Tabs defaultValue=\"1\" size=\"small\">\n        <TabTriggerList>\n          <TabTrigger value=\"1\">라벨1</TabTrigger>\n          <TabTrigger value=\"2\">라벨2</TabTrigger>\n          <TabTrigger value=\"3\">라벨3</TabTrigger>\n        </TabTriggerList>\n        <TabContentList>\n          <TabContent value=\"1\">\n            <Content>Content 1</Content>\n          </TabContent>\n          <TabContent value=\"2\">\n            <Content>Content 2</Content>\n          </TabContent>\n          <TabContent value=\"3\">\n            <Content>Content 3</Content>\n          </TabContent>\n        </TabContentList>\n      </Tabs>\n    </div>\n  );\n}\n\nconst Content = (props: React.PropsWithChildren) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"300px\",\n        backgroundColor: \"var(--seed-color-bg-layer-default)\",\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};",
  "tabs-standalone": "import { useState } from \"react\";\nimport { Tabs, TabTrigger, TabTriggerList } from \"seed-design/ui/tabs\";\n\nexport default function TabsStandalone() {\n  const [activeTab, setActiveTab] = useState(\"1\");\n\n  return (\n    <div style={{ width: \"360px\" }}>\n      <Tabs defaultValue=\"1\" onValueChange={setActiveTab}>\n        <TabTriggerList>\n          <TabTrigger value=\"1\">라벨1</TabTrigger>\n          <TabTrigger value=\"2\">라벨2</TabTrigger>\n          <TabTrigger value=\"3\">라벨3</TabTrigger>\n        </TabTriggerList>\n        {activeTab === \"1\" && (\n          <div>\n            <Content>Content 1</Content>\n          </div>\n        )}\n        {activeTab === \"2\" && (\n          <div>\n            <Content>Content 2</Content>\n          </div>\n        )}\n        {activeTab === \"3\" && (\n          <div>\n            <Content>Content 3</Content>\n          </div>\n        )}\n      </Tabs>\n    </div>\n  );\n}\n\nconst Content = (props: React.PropsWithChildren) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"300px\",\n        backgroundColor: \"var(--seed-color-bg-layer-default)\",\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};",
  "tabs-swipeable": "import { Tabs, TabContent, TabContentList, TabTrigger, TabTriggerList } from \"seed-design/ui/tabs\";\n\nexport default function TabsSwipeable() {\n  return (\n    <div style={{ width: \"360px\" }}>\n      <Tabs\n        defaultValue=\"2\"\n        isSwipeable\n        onSwipeStart={() => console.log(\"swipe start\")}\n        onSwipeEnd={() => console.log(\"swipe end\")}\n      >\n        <TabTriggerList>\n          <TabTrigger value=\"1\">라벨1</TabTrigger>\n          <TabTrigger value=\"2\">라벨2</TabTrigger>\n          <TabTrigger value=\"3\">라벨3</TabTrigger>\n        </TabTriggerList>\n        <TabContentList>\n          <TabContent value=\"1\">\n            <Content>Content 1</Content>\n          </TabContent>\n          <TabContent value=\"2\">\n            <Content>Content 2</Content>\n          </TabContent>\n          <TabContent value=\"3\">\n            <Content>Content 3</Content>\n          </TabContent>\n        </TabContentList>\n      </Tabs>\n    </div>\n  );\n}\n\nconst Content = (props: React.PropsWithChildren) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"300px\",\n        backgroundColor: \"var(--seed-color-bg-layer-default)\",\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};",
  "text-button-brand": "import { IconPlusCircleLine } from \"@daangn/react-monochrome-icon\";\nimport { TextButton } from \"seed-design/ui/text-button\";\n\nexport default function TextButtonBrand() {\n  return (\n    <TextButton tone=\"brand\" prefixIcon={<IconPlusCircleLine />}>\n      추가\n    </TextButton>\n  );\n}",
  "text-button-danger": "import { IconTrashcanLine } from \"@daangn/react-monochrome-icon\";\nimport { TextButton } from \"seed-design/ui/text-button\";\n\nexport default function TextButtonDanger() {\n  return (\n    <TextButton tone=\"danger\" prefixIcon={<IconTrashcanLine />}>\n      삭제\n    </TextButton>\n  );\n}",
  "text-button-disabled": "import { IconPenHorizlineLine } from \"@daangn/react-monochrome-icon\";\nimport { TextButton } from \"seed-design/ui/text-button\";\n\nexport default function TextButtonPreview() {\n  return (\n    <TextButton disabled prefixIcon={<IconPenHorizlineLine />}>\n      새 글\n    </TextButton>\n  );\n}",
  "text-button-large": "import { IconPlusCircleLine } from \"@daangn/react-monochrome-icon\";\nimport { TextButton } from \"seed-design/ui/text-button\";\n\nexport default function TextButtonLarge() {\n  return (\n    <TextButton tone=\"neutral\" prefixIcon={<IconPlusCircleLine />} size=\"large\">\n      추가\n    </TextButton>\n  );\n}",
  "text-button-medium": "import { IconPlusCircleLine } from \"@daangn/react-monochrome-icon\";\nimport { TextButton } from \"seed-design/ui/text-button\";\n\nexport default function TextButtonMedium() {\n  return (\n    <TextButton tone=\"neutral\" prefixIcon={<IconPlusCircleLine />} size=\"medium\">\n      추가\n    </TextButton>\n  );\n}",
  "text-button-neutral-subtle": "import { IconPlusCircleLine } from \"@daangn/react-monochrome-icon\";\nimport { TextButton } from \"seed-design/ui/text-button\";\n\nexport default function TextButtonNeutralSubtle() {\n  return (\n    <TextButton tone=\"neutralSubtle\" prefixIcon={<IconPlusCircleLine />}>\n      추가\n    </TextButton>\n  );\n}",
  "text-button-neutral": "import { IconPlusCircleLine } from \"@daangn/react-monochrome-icon\";\nimport { TextButton } from \"seed-design/ui/text-button\";\n\nexport default function TextButtonNeutral() {\n  return (\n    <TextButton tone=\"neutral\" prefixIcon={<IconPlusCircleLine />}>\n      추가\n    </TextButton>\n  );\n}",
  "text-button-prefix-icon": "import { IconPlusCircleLine } from \"@daangn/react-monochrome-icon\";\nimport { TextButton } from \"seed-design/ui/text-button\";\n\nexport default function TextButtonPrefixIcon() {\n  return <TextButton prefixIcon={<IconPlusCircleLine />}>추가</TextButton>;\n}",
  "text-button-preview": "import { IconPenHorizlineLine } from \"@daangn/react-monochrome-icon\";\nimport { TextButton } from \"seed-design/ui/text-button\";\n\nexport default function TextButtonPreview() {\n  return <TextButton prefixIcon={<IconPenHorizlineLine />}>새 글</TextButton>;\n}",
  "text-button-small": "import { IconPlusCircleLine } from \"@daangn/react-monochrome-icon\";\nimport { TextButton } from \"seed-design/ui/text-button\";\n\nexport default function TextButtonSmall() {\n  return (\n    <TextButton tone=\"neutral\" prefixIcon={<IconPlusCircleLine />} size=\"small\">\n      추가\n    </TextButton>\n  );\n}",
  "text-button-suffix-icon": "import { IconChevronRightLine } from \"@daangn/react-monochrome-icon\";\nimport { TextButton } from \"seed-design/ui/text-button\";\n\nexport default function TextButtonSuffixIcon() {\n  return <TextButton suffixIcon={<IconChevronRightLine />}>추가</TextButton>;\n}",
  "text-field-both-affixes": "import { IconPlusCircleLine, IconWonLine } from \"@daangn/react-monochrome-icon\";\nimport { TextField, TextFieldInput } from \"seed-design/ui/text-field\";\n\nexport default function TextFieldSuffix() {\n  return (\n    <div className=\"flex gap-4 w-full\">\n      <TextField label=\"라벨\" description=\"설명을 써주세요\" prefix=\"만\" suffix=\"세\">\n        <TextFieldInput placeholder=\"플레이스홀더\" />\n      </TextField>\n      <TextField\n        label=\"라벨\"\n        description=\"설명을 써주세요\"\n        prefixIcon={<IconPlusCircleLine />}\n        suffixIcon={<IconWonLine />}\n      >\n        <TextFieldInput placeholder=\"플레이스홀더\" />\n      </TextField>\n    </div>\n  );\n}",
  "text-field-disabled": "import { TextField, TextFieldInput } from \"seed-design/ui/text-field\";\n\nexport default function TextFieldDisabled() {\n  return (\n    <div className=\"grid grid-cols-2 gap-4 w-full\">\n      <TextField label=\"라벨\" description=\"설명을 써주세요\" disabled>\n        <TextFieldInput placeholder=\"플레이스홀더\" />\n      </TextField>\n      <TextField label=\"라벨\" description=\"설명을 써주세요\" disabled defaultValue=\"값\">\n        <TextFieldInput placeholder=\"플레이스홀더\" />\n      </TextField>\n      <TextField\n        label=\"라벨\"\n        description=\"설명을 써주세요\"\n        disabled\n        invalid\n        errorMessage=\"오류가 발생한 이유를 써주세요\"\n      >\n        <TextFieldInput placeholder=\"플레이스홀더\" />\n      </TextField>\n      <TextField\n        label=\"라벨\"\n        description=\"설명을 써주세요\"\n        disabled\n        invalid\n        errorMessage=\"오류가 발생한 이유를 써주세요\"\n        defaultValue=\"값\"\n      >\n        <TextFieldInput placeholder=\"플레이스홀더\" />\n      </TextField>\n    </div>\n  );\n}",
  "text-field-enabled": "import { TextField, TextFieldInput } from \"seed-design/ui/text-field\";\n\nexport default function TextFieldEnabled() {\n  return (\n    <div className=\"grid grid-cols-2 gap-4 w-full\">\n      <TextField label=\"라벨\" description=\"설명을 써주세요\">\n        <TextFieldInput placeholder=\"플레이스홀더\" />\n      </TextField>\n      <TextField label=\"라벨\" description=\"설명을 써주세요\" defaultValue=\"값\">\n        <TextFieldInput placeholder=\"플레이스홀더\" />\n      </TextField>\n      <TextField\n        label=\"라벨\"\n        description=\"설명을 써주세요\"\n        invalid\n        errorMessage=\"오류가 발생한 이유를 써주세요\"\n      >\n        <TextFieldInput placeholder=\"플레이스홀더\" />\n      </TextField>\n      <TextField\n        label=\"라벨\"\n        description=\"설명을 써주세요\"\n        invalid\n        errorMessage=\"오류가 발생한 이유를 써주세요\"\n        defaultValue=\"값\"\n      >\n        <TextFieldInput placeholder=\"플레이스홀더\" />\n      </TextField>\n    </div>\n  );\n}",
  "text-field-grapheme-count": "import { TextField, TextFieldInput } from \"seed-design/ui/text-field\";\n\nexport default function TextFieldGraphemeCount() {\n  return (\n    <TextField label=\"라벨\" description=\"설명을 써주세요\" maxGraphemeCount={8}>\n      <TextFieldInput placeholder=\"플레이스홀더\" />\n    </TextField>\n  );\n}",
  "text-field-large": "import { TextField, TextFieldInput } from \"seed-design/ui/text-field\";\n\nexport default function TextFieldLarge() {\n  return (\n    <TextField label=\"라벨\" description=\"설명을 써주세요\" size=\"large\">\n      <TextFieldInput placeholder=\"플레이스홀더\" />\n    </TextField>\n  );\n}",
  "text-field-medium": "import { TextField, TextFieldInput } from \"seed-design/ui/text-field\";\n\nexport default function TextFieldMedium() {\n  return (\n    <TextField label=\"라벨\" description=\"설명을 써주세요\" size=\"medium\">\n      <TextFieldInput placeholder=\"플레이스홀더\" />\n    </TextField>\n  );\n}",
  "text-field-number-formatting": "import { useMemo, useState } from \"react\";\nimport { TextField, TextFieldInput } from \"seed-design/ui/text-field\";\n\nexport default function TextFieldNumberFormatting() {\n  const [value, setValue] = useState(\"1000\");\n\n  const formattedValue = useMemo(() => {\n    if (value === \"\") return value;\n\n    const number = Number(value.replace(/,/g, \"\"));\n    if (Number.isNaN(number)) return \"\";\n\n    return number.toLocaleString();\n  }, [value]);\n\n  return (\n    <TextField\n      label=\"금액\"\n      description=\"금액을 써주세요\"\n      value={formattedValue}\n      onValueChange={({ value }) => setValue(value)}\n    >\n      <TextFieldInput placeholder=\"9,999,999\" />\n    </TextField>\n  );\n}",
  "text-field-optional": "import { TextField, TextFieldInput } from \"seed-design/ui/text-field\";\n\nexport default function TextFieldOptional() {\n  return (\n    <TextField label=\"라벨\" description=\"설명을 써주세요\" indicator=\"(선택)\">\n      <TextFieldInput placeholder=\"플레이스홀더\" />\n    </TextField>\n  );\n}",
  "text-field-prefix": "import { IconMagnifyingglassLine } from \"@daangn/react-monochrome-icon\";\nimport { TextField, TextFieldInput } from \"seed-design/ui/text-field\";\n\nexport default function TextFieldPrefix() {\n  return (\n    <div className=\"flex gap-4 w-full\">\n      <TextField label=\"라벨\" description=\"설명을 써주세요\" prefix=\"https://\">\n        <TextFieldInput placeholder=\"플레이스홀더\" />\n      </TextField>\n      <TextField\n        label=\"라벨\"\n        description=\"설명을 써주세요\"\n        prefixIcon={<IconMagnifyingglassLine />}\n      >\n        <TextFieldInput placeholder=\"플레이스홀더\" />\n      </TextField>\n    </div>\n  );\n}",
  "text-field-preview": "import { useState } from \"react\";\nimport { TextField, TextFieldInput } from \"seed-design/ui/text-field\";\n\nexport default function TextFieldPreview() {\n  const [value, setValue] = useState(\"\");\n\n  return (\n    <div className=\"flex flex-col items-center w-full\">\n      <TextField value={value} onValueChange={({ value }) => setValue(value)}>\n        <TextFieldInput autoFocus />\n      </TextField>\n      <p className=\"text-center\">현재 값: {value}</p>\n    </div>\n  );\n}",
  "text-field-react-hook-form": "import { ActionButton } from \"seed-design/ui/action-button\";\nimport { IconHouseLine } from \"@daangn/react-monochrome-icon\";\nimport { useForm } from \"react-hook-form\";\nimport { TextField, TextFieldInput } from \"seed-design/ui/text-field\";\n\ninterface FormValues {\n  name: string;\n  address: string;\n}\n\nexport default function TextFieldReactHookForm() {\n  const {\n    register,\n    handleSubmit,\n    clearErrors,\n    formState: { errors },\n  } = useForm<FormValues>();\n\n  const onValid = (data: FormValues) => {\n    window.alert(JSON.stringify(data, null, 2));\n  };\n\n  return (\n    <form className=\"grid grid-cols-2 gap-3 w-full\" onSubmit={handleSubmit(onValid)}>\n      <TextField\n        {...register(\"name\", { required: \"필수 입력 항목입니다\" })}\n        label=\"이름\"\n        description=\"이름을 써주세요\"\n        invalid={!!errors.name}\n        errorMessage={errors.name?.message}\n        indicator=\"(필수)\"\n        required\n      >\n        <TextFieldInput placeholder=\"홍길동\" />\n      </TextField>\n      <TextField\n        {...register(\"address\", {\n          required: \"필수 입력 항목입니다\",\n          pattern: {\n            value: /^대한민국/,\n            message: \"대한민국으로 시작해주세요\",\n          },\n        })}\n        label=\"주소\"\n        description=\"주소를 써주세요\"\n        invalid={!!errors.address}\n        errorMessage={errors.address?.message}\n        required\n        indicator=\"(필수)\"\n        prefixIcon={<IconHouseLine />}\n      >\n        <TextFieldInput placeholder=\"대한민국 서울특별시 은평구\" />\n      </TextField>\n      <div className=\"col-span-2 flex gap-2\">\n        <ActionButton type=\"submit\" className=\"grow\">\n          제출\n        </ActionButton>\n        <ActionButton\n          type=\"reset\"\n          onClick={() => clearErrors([\"name\", \"address\"])}\n          variant=\"neutralWeak\"\n        >\n          초기화\n        </ActionButton>\n      </div>\n    </form>\n  );\n}",
  "text-field-read-only": "import { TextField, TextFieldInput } from \"seed-design/ui/text-field\";\n\nexport default function TextFieldReadOnly() {\n  return (\n    <div className=\"grid grid-cols-2 gap-4 w-full\">\n      <TextField label=\"라벨\" description=\"설명을 써주세요\" readOnly>\n        <TextFieldInput placeholder=\"플레이스홀더\" />\n      </TextField>\n      <TextField label=\"라벨\" description=\"설명을 써주세요\" readOnly defaultValue=\"값\">\n        <TextFieldInput placeholder=\"플레이스홀더\" />\n      </TextField>\n      <TextField\n        label=\"라벨\"\n        description=\"설명을 써주세요\"\n        readOnly\n        invalid\n        errorMessage=\"오류가 발생한 이유를 써주세요\"\n      >\n        <TextFieldInput placeholder=\"플레이스홀더\" />\n      </TextField>\n      <TextField\n        label=\"라벨\"\n        description=\"설명을 써주세요\"\n        readOnly\n        invalid\n        errorMessage=\"오류가 발생한 이유를 써주세요\"\n        defaultValue=\"값\"\n      >\n        <TextFieldInput placeholder=\"플레이스홀더\" />\n      </TextField>\n    </div>\n  );\n}",
  "text-field-required": "import { TextField, TextFieldInput } from \"seed-design/ui/text-field\";\n\nexport default function TextFieldRequired() {\n  return (\n    <TextField label=\"라벨\" description=\"설명을 써주세요\" required indicator=\"(필수)\">\n      <TextFieldInput placeholder=\"플레이스홀더\" />\n    </TextField>\n  );\n}",
  "text-field-slicing": "import { useState } from \"react\";\nimport { TextField, TextFieldInput } from \"seed-design/ui/text-field\";\n\nexport default function TextFieldSlicing() {\n  const [value, setValue] = useState(\"\");\n\n  return (\n    <TextField\n      label=\"라벨\"\n      description=\"6글자까지 입력 가능합니다\"\n      maxGraphemeCount={6}\n      value={value}\n      onValueChange={({ slicedValue }) => setValue(slicedValue)}\n    >\n      <TextFieldInput placeholder=\"플레이스홀더\" />\n    </TextField>\n  );\n}",
  "text-field-suffix": "import { IconWonLine } from \"@daangn/react-monochrome-icon\";\nimport { TextField, TextFieldInput } from \"seed-design/ui/text-field\";\n\nexport default function TextFieldSuffix() {\n  return (\n    <div className=\"flex gap-4 w-full\">\n      <TextField label=\"라벨\" description=\"설명을 써주세요\" suffix=\"cm\">\n        <TextFieldInput placeholder=\"플레이스홀더\" />\n      </TextField>\n      <TextField label=\"라벨\" description=\"설명을 써주세요\" suffixIcon={<IconWonLine />}>\n        <TextFieldInput placeholder=\"플레이스홀더\" />\n      </TextField>\n    </div>\n  );\n}",
  "text-field-xlarge": "import { TextField, TextFieldInput } from \"seed-design/ui/text-field\";\n\nexport default function TextFieldXlarge() {\n  return (\n    <TextField label=\"라벨\" description=\"설명을 써주세요\" size=\"xlarge\">\n      <TextFieldInput placeholder=\"플레이스홀더\" />\n    </TextField>\n  );\n}",
  "text-preview": "import { Flex } from \"seed-design/ui/layout\";\nimport { Text } from \"seed-design/ui/text\";\n\nexport default function TextPreview() {\n  return (\n    <Flex direction=\"column\" gap=\"s2\">\n      <Text color=\"fg.neutral\" variant=\"labelSmallDefault\">\n        다람쥐 헌 쳇바퀴에 타고파\n      </Text>\n      <Text color=\"fg.neutral\" variant=\"labelMediumDefault\">\n        다람쥐 헌 쳇바퀴에 타고파\n      </Text>\n      <Text color=\"fg.neutral\" variant=\"labelLargeDefault\">\n        다람쥐 헌 쳇바퀴에 타고파\n      </Text>\n      <Text color=\"fg.neutral\" variant=\"bodySmallDefault\">\n        다람쥐 헌 쳇바퀴에 타고파\n      </Text>\n      <Text color=\"fg.neutral\" variant=\"bodyMediumDefault\">\n        다람쥐 헌 쳇바퀴에 타고파\n      </Text>\n      <Text color=\"fg.neutral\" variant=\"titleSmallDefault\">\n        다람쥐 헌 쳇바퀴에 타고파\n      </Text>\n      <Text color=\"fg.neutral\" variant=\"titleMediumDefault\">\n        다람쥐 헌 쳇바퀴에 타고파\n      </Text>\n      <Text color=\"fg.neutral\" variant=\"titleLargeDefault\">\n        다람쥐 헌 쳇바퀴에 타고파\n      </Text>\n      <Text color=\"fg.neutral\" variant=\"headingSmallDefault\">\n        다람쥐 헌 쳇바퀴에 타고파\n      </Text>\n      <Text color=\"fg.neutral\" variant=\"headingMediumDefault\">\n        다람쥐 헌 쳇바퀴에 타고파\n      </Text>\n      <Text color=\"fg.neutral\" variant=\"headingLargeDefault\">\n        다람쥐 헌 쳇바퀴에 타고파\n      </Text>\n    </Flex>\n  );\n}",
  "toggle-button-brand-solid": "import { useState } from \"react\";\nimport { ToggleButton } from \"seed-design/ui/toggle-button\";\n\nexport default function ToggleButtonBrandSolid() {\n  const [pressed, setPressed] = useState(false);\n\n  return (\n    <ToggleButton variant=\"brandSolid\" pressed={pressed} onPressedChange={setPressed}>\n      {pressed ? \"선택됨\" : \"미선택\"}\n    </ToggleButton>\n  );\n}",
  "toggle-button-disabled": "import { ToggleButton } from \"seed-design/ui/toggle-button\";\n\nexport default function ToggleButtonDisabled() {\n  return <ToggleButton disabled>비활성</ToggleButton>;\n}",
  "toggle-button-loading": "import { useState } from \"react\";\nimport { ToggleButton } from \"seed-design/ui/toggle-button\";\n\nexport default function ToggleButtonLoading() {\n  const [pressed, setPressed] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  function handleToggle() {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n      setPressed((prev) => !prev);\n    }, 2000);\n  }\n\n  // 이벤트 핸들링이 필요할 수 있으므로 loading은 disabled를 포함하지 않습니다. 이벤트 발생을 원하지 않는 경우, disabled 속성을 추가해주세요.\n  return (\n    <ToggleButton loading={loading} pressed={pressed} onPressedChange={handleToggle}>\n      시간이 걸리는 토글\n    </ToggleButton>\n  );\n}",
  "toggle-button-neutral-weak": "import { useState } from \"react\";\nimport { ToggleButton } from \"seed-design/ui/toggle-button\";\n\nexport default function ToggleButtonBrandSolid() {\n  const [pressed, setPressed] = useState(false);\n\n  return (\n    <ToggleButton variant=\"neutralWeak\" pressed={pressed} onPressedChange={setPressed}>\n      {pressed ? \"선택됨\" : \"미선택\"}\n    </ToggleButton>\n  );\n}",
  "toggle-button-prefix-icon": "import { IconCheckmarkLine, IconPlusLine } from \"@daangn/react-monochrome-icon\";\nimport { useState } from \"react\";\nimport { ToggleButton } from \"seed-design/ui/toggle-button\";\n\nexport default function ToggleButtonPrefixIcon() {\n  const [pressed, setPressed] = useState(false);\n\n  return (\n    <ToggleButton\n      prefixIcon={pressed ? <IconPlusLine /> : <IconCheckmarkLine />}\n      pressed={pressed}\n      onPressedChange={setPressed}\n    >\n      {pressed ? \"선택됨\" : \"미선택\"}\n    </ToggleButton>\n  );\n}",
  "toggle-button-preview": "import { useState } from \"react\";\nimport { ToggleButton } from \"seed-design/ui/toggle-button\";\n\nexport default function ToggleButtonPreview() {\n  const [pressed, setPressed] = useState(false);\n\n  return (\n    <ToggleButton pressed={pressed} onPressedChange={setPressed}>\n      {pressed ? \"선택됨\" : \"미선택\"}\n    </ToggleButton>\n  );\n}",
  "toggle-button-small": "import { useState } from \"react\";\nimport { ToggleButton } from \"seed-design/ui/toggle-button\";\n\nexport default function ToggleButtonSmall() {\n  const [pressed, setPressed] = useState(false);\n\n  return (\n    <ToggleButton size=\"small\" pressed={pressed} onPressedChange={setPressed}>\n      {pressed ? \"선택됨\" : \"미선택\"}\n    </ToggleButton>\n  );\n}",
  "toggle-button-xsmall": "import { useState } from \"react\";\nimport { ToggleButton } from \"seed-design/ui/toggle-button\";\n\nexport default function ToggleButtonXsmall() {\n  const [pressed, setPressed] = useState(false);\n\n  return (\n    <ToggleButton size=\"xsmall\" pressed={pressed} onPressedChange={setPressed}>\n      {pressed ? \"선택됨\" : \"미선택\"}\n    </ToggleButton>\n  );\n}"
}