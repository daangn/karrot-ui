{
  "name": "link-inline-banner",
  "dependencies": [
    "@radix-ui/react-slot"
  ],
  "registries": [
    {
      "name": "link-inline-banner.tsx",
      "type": "ui",
      "content": "\"use client\";\n\nimport \"@seed-design/stylesheet/inlineBanner.css\";\n\nimport * as React from \"react\";\nimport clsx from \"clsx\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport {\n  inlineBanner,\n  type InlineBannerVariantProps,\n} from \"@seed-design/recipe/inlineBanner\";\n\nexport type LinkInlineBannerProps = Omit<InlineBannerVariantProps, \"type\"> & {\n  icon?: React.ReactNode;\n  titleText?: string;\n  linkLabel: string;\n  onLinkLabelClick: React.MouseEventHandler<HTMLButtonElement>;\n};\n\ntype ReactLinkInlineBannerProps = React.HTMLAttributes<HTMLDivElement> &\n  LinkInlineBannerProps;\n\nexport const LinkInlineBanner = React.forwardRef<\n  HTMLDivElement,\n  ReactLinkInlineBannerProps\n>(\n  (\n    {\n      children,\n      className,\n      variant = \"neutralWeak\",\n      icon,\n      onClick,\n      titleText,\n      linkLabel,\n      onLinkLabelClick: onLinkClick,\n      ...otherProps\n    },\n    ref,\n  ) => {\n    const classNames = inlineBanner({ variant, type: \"link\" });\n\n    return (\n      <div\n        ref={ref}\n        className={clsx(classNames.root, className)}\n        {...otherProps}\n      >\n        <div className={classNames.content}>\n          {icon && <Slot className={classNames.icon}>{icon}</Slot>}\n          <div>\n            {titleText && (\n              <>\n                <span className={classNames.title}>{titleText}</span>\n                <span className={classNames.spacer}> </span>\n              </>\n            )}\n            <span className={classNames.label}>{children}</span>\n          </div>\n        </div>\n        <button\n          type=\"button\"\n          className={classNames.linkLabel}\n          onClick={onLinkClick}\n        >\n          {linkLabel}\n        </button>\n      </div>\n    );\n  },\n);\nLinkInlineBanner.displayName = \"LinkInlineBanner\";\n"
    }
  ]
}