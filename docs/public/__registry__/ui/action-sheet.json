{
  "name": "action-sheet",
  "dependencies": [
    "@seed-design/react"
  ],
  "registries": [
    {
      "name": "action-sheet.tsx",
      "type": "ui",
      "content": "\"use client\";\n\nimport \"@seed-design/stylesheet/actionSheet.css\";\nimport \"@seed-design/stylesheet/actionSheetCloseButton.css\";\nimport \"@seed-design/stylesheet/actionSheetItem.css\";\n\nimport { ActionSheet as SeedActionSheet } from \"@seed-design/react\";\nimport { forwardRef } from \"react\";\n\nexport interface ActionSheetRootProps extends SeedActionSheet.RootProps {}\n\n/**\n * @see https://v3.seed-design.io/docs/react/components/action-sheet\n */\nexport const ActionSheetRoot = (props: ActionSheetRootProps) => {\n  const { children, ...otherProps } = props;\n  return (\n    <SeedActionSheet.Root closeOnInteractOutside={true} {...otherProps}>\n      {children}\n    </SeedActionSheet.Root>\n  );\n};\n\nexport interface ActionSheetTriggerProps extends SeedActionSheet.TriggerProps {}\n\nexport const ActionSheetTrigger = SeedActionSheet.Trigger;\n\nexport interface ActionSheetContentProps\n  extends Omit<SeedActionSheet.ContentProps, \"title\"> {\n  title?: React.ReactNode;\n\n  description?: React.ReactNode;\n\n  layerIndex?: number;\n}\n\nexport const ActionSheetContent = forwardRef<\n  HTMLDivElement,\n  ActionSheetContentProps\n>(({ children, title, description, layerIndex, ...otherProps }, ref) => {\n  if (\n    !title &&\n    !otherProps[\"aria-labelledby\"] &&\n    !otherProps[\"aria-label\"] &&\n    process.env.NODE_ENV !== \"production\"\n  ) {\n    console.warn(\n      \"ActionSheetContent: aria-labelledby or aria-label should be provided if title is not provided.\",\n    );\n  }\n\n  const shouldRenderHeader = title || description;\n\n  return (\n    <SeedActionSheet.Positioner\n      style={{ \"--layer-index\": layerIndex } as React.CSSProperties}\n    >\n      <SeedActionSheet.Backdrop />\n      <SeedActionSheet.Content ref={ref} {...otherProps}>\n        {shouldRenderHeader && (\n          <SeedActionSheet.Header>\n            {title && <SeedActionSheet.Title>{title}</SeedActionSheet.Title>}\n            {description && (\n              <SeedActionSheet.Description>\n                {description}\n              </SeedActionSheet.Description>\n            )}\n          </SeedActionSheet.Header>\n        )}\n        <SeedActionSheet.List>{children}</SeedActionSheet.List>\n        {/* You may implement your own i18n for dismiss label */}\n        <SeedActionSheet.CloseButton>\n          <SeedActionSheet.CloseButtonLabel>\n            취소\n          </SeedActionSheet.CloseButtonLabel>\n        </SeedActionSheet.CloseButton>\n      </SeedActionSheet.Content>\n    </SeedActionSheet.Positioner>\n  );\n});\n\nexport interface ActionSheetItemProps\n  extends Omit<SeedActionSheet.ItemProps, \"asChild\" | \"children\"> {\n  label: React.ReactNode;\n}\n\nexport const ActionSheetItem = forwardRef<\n  HTMLButtonElement,\n  ActionSheetItemProps\n>(({ label, ...otherProps }, ref) => {\n  return (\n    <SeedActionSheet.Item ref={ref} {...otherProps}>\n      <SeedActionSheet.ItemLabel>{label}</SeedActionSheet.ItemLabel>\n    </SeedActionSheet.Item>\n  );\n});\n"
    }
  ]
}