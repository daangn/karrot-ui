{
  "name": "action-button",
  "dependencies": [
    "@radix-ui/react-slot"
  ],
  "registries": [
    {
      "name": "action-button.tsx",
      "type": "ui",
      "content": "\"use client\";\n\nimport \"@seed-design/stylesheet/actionButton.css\";\n\nimport * as React from \"react\";\nimport clsx from \"clsx\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport {\n  actionButton,\n  type ActionButtonVariantProps,\n} from \"@seed-design/recipe/actionButton\";\n\nexport interface ActionButtonProps extends ActionButtonVariantProps {\n  prefixIcon?: React.ReactNode;\n\n  suffixIcon?: React.ReactNode;\n\n  /**\n   * @default false\n   */\n  asChild?: boolean;\n}\n\ninterface ReactActionButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    ActionButtonProps {}\n\n/**\n * @see https://v3.seed-design.io/docs/react/components/action-button\n */\nexport const ActionButton = React.forwardRef<\n  HTMLButtonElement,\n  ReactActionButtonProps\n>(\n  (\n    {\n      className,\n      variant = \"brandSolid\",\n      size = \"medium\",\n      children,\n      prefixIcon,\n      suffixIcon,\n      layout = \"withText\",\n      asChild = false,\n      ...otherProps\n    },\n    ref,\n  ) => {\n    const Comp = asChild ? Slot : \"button\";\n    const classNames = actionButton({ variant, layout, size });\n    return (\n      <Comp\n        ref={ref}\n        className={clsx(classNames.root, className)}\n        {...otherProps}\n      >\n        {layout === \"withText\" ? (\n          <>\n            {prefixIcon && (\n              <Slot className={classNames.prefixIcon}>{prefixIcon}</Slot>\n            )}\n            <span className={classNames.label}>{children}</span>\n            {suffixIcon && (\n              <Slot className={classNames.suffixIcon}>{suffixIcon}</Slot>\n            )}\n          </>\n        ) : (\n          <Slot className={classNames.icon}>{children}</Slot>\n        )}\n      </Comp>\n    );\n  },\n);\nActionButton.displayName = \"ActionButton\";\n"
    }
  ]
}