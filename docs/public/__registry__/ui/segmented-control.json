{
  "name": "segmented-control",
  "dependencies": [
    "@seed-design/react"
  ],
  "registries": [
    {
      "name": "segmented-control.tsx",
      "type": "ui",
      "content": "\"use client\";\n\nimport \"@seed-design/stylesheet/segmentedControl.css\";\n\nimport { SegmentedControl as SeedSegmentedControl } from \"@seed-design/react\";\nimport * as React from \"react\";\n\nexport interface SegmentedControlProps extends SeedSegmentedControl.RootProps {}\n\nexport const SegmentedControl = React.forwardRef<\n  HTMLDivElement,\n  SegmentedControlProps\n>(({ children, ...otherProps }, ref) => {\n  if (!otherProps[\"aria-label\"] && !otherProps[\"aria-labelledby\"]) {\n    console.warn(\n      \"SegmentedControl component requires either an `aria-label` or `aria-labelledby` attribute.\",\n    );\n  }\n\n  if (otherProps.value === undefined && otherProps.defaultValue === undefined) {\n    console.warn(\n      \"SegmentedControl component requires either a `value` or `defaultValue` attribute.\",\n    );\n  }\n\n  return (\n    <SeedSegmentedControl.Root ref={ref} {...otherProps}>\n      {children}\n      <SeedSegmentedControl.Indicator />\n    </SeedSegmentedControl.Root>\n  );\n});\nSegmentedControl.displayName = \"SegmentedControl\";\n\nexport interface SegmentedControlSegmentProps\n  extends SeedSegmentedControl.SegmentProps {\n  inputProps?: React.InputHTMLAttributes<HTMLInputElement>;\n\n  rootRef?: React.Ref<HTMLLabelElement>;\n}\n\nexport const SegmentedControlSegment = React.forwardRef<\n  HTMLInputElement,\n  SegmentedControlSegmentProps\n>(({ children, inputProps, rootRef, ...otherProps }, ref) => {\n  return (\n    <SeedSegmentedControl.Segment ref={rootRef} {...otherProps}>\n      <SeedSegmentedControl.SegmentHiddenInput ref={ref} {...inputProps} />\n      <SeedSegmentedControl.SegmentLabel>\n        {children}\n      </SeedSegmentedControl.SegmentLabel>\n      <SeedSegmentedControl.SegmentLabelPlaceholder aria-hidden>\n        {children}\n      </SeedSegmentedControl.SegmentLabelPlaceholder>\n    </SeedSegmentedControl.Segment>\n  );\n});\nSegmentedControlSegment.displayName = \"SegmentedControlSegment\";\n"
    }
  ]
}