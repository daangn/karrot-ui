{
  "name": "extended-action-sheet",
  "dependencies": [
    "@seed-design/react"
  ],
  "registries": [
    {
      "name": "extended-action-sheet.tsx",
      "type": "ui",
      "content": "\"use client\";\n\nimport { ExtendedActionSheet as SeedExtendedActionSheet } from \"@seed-design/react\";\nimport { forwardRef } from \"react\";\n\nexport interface ExtendedActionSheetRootProps\n  extends SeedExtendedActionSheet.RootProps {}\n\n/**\n * @see https://v3.seed-design.io/docs/react/components/extended-action-sheet\n */\nexport const ExtendedActionSheetRoot = (\n  props: ExtendedActionSheetRootProps,\n) => {\n  const { children, ...otherProps } = props;\n  return (\n    <SeedExtendedActionSheet.Root closeOnInteractOutside={true} {...otherProps}>\n      {children}\n    </SeedExtendedActionSheet.Root>\n  );\n};\n\nexport interface ExtendedActionSheetTriggerProps\n  extends SeedExtendedActionSheet.TriggerProps {}\n\nexport const ExtendedActionSheetTrigger = SeedExtendedActionSheet.Trigger;\n\nexport interface ExtendedActionSheetContentProps\n  extends Omit<SeedExtendedActionSheet.ContentProps, \"title\"> {\n  title?: React.ReactNode;\n\n  layerIndex?: number;\n}\n\nexport const ExtendedActionSheetContent = forwardRef<\n  HTMLDivElement,\n  ExtendedActionSheetContentProps\n>(({ children, title, layerIndex, ...otherProps }, ref) => {\n  if (\n    !title &&\n    !otherProps[\"aria-labelledby\"] &&\n    !otherProps[\"aria-label\"] &&\n    process.env.NODE_ENV !== \"production\"\n  ) {\n    console.warn(\n      \"ExtendedActionSheetContent: aria-labelledby or aria-label should be provided if title is not provided.\",\n    );\n  }\n\n  return (\n    <SeedExtendedActionSheet.Positioner\n      style={{ \"--layer-index\": layerIndex } as React.CSSProperties}\n    >\n      <SeedExtendedActionSheet.Backdrop />\n      <SeedExtendedActionSheet.Content ref={ref} {...otherProps}>\n        {title && (\n          <SeedExtendedActionSheet.Header>\n            <SeedExtendedActionSheet.Title>\n              {title}\n            </SeedExtendedActionSheet.Title>\n          </SeedExtendedActionSheet.Header>\n        )}\n        <SeedExtendedActionSheet.List>{children}</SeedExtendedActionSheet.List>\n        <SeedExtendedActionSheet.Footer>\n          {/* You may implement your own i18n for dismiss label */}\n          <SeedExtendedActionSheet.CloseButton>\n            <SeedExtendedActionSheet.CloseButtonLabel>\n              취소\n            </SeedExtendedActionSheet.CloseButtonLabel>\n          </SeedExtendedActionSheet.CloseButton>\n        </SeedExtendedActionSheet.Footer>\n      </SeedExtendedActionSheet.Content>\n    </SeedExtendedActionSheet.Positioner>\n  );\n});\n\nexport interface ExtendedActionSheetGroupProps\n  extends SeedExtendedActionSheet.GroupProps {}\n\nexport const ExtendedActionSheetGroup = SeedExtendedActionSheet.Group;\n\nexport interface ExtendedActionSheetItemProps\n  extends Omit<SeedExtendedActionSheet.ItemProps, \"asChild\" | \"children\"> {\n  label: React.ReactNode;\n\n  prefixIcon?: React.ReactNode;\n}\n\nexport const ExtendedActionSheetItem = forwardRef<\n  HTMLButtonElement,\n  ExtendedActionSheetItemProps\n>(({ label, prefixIcon, ...otherProps }, ref) => {\n  return (\n    <SeedExtendedActionSheet.Item ref={ref} {...otherProps}>\n      <SeedExtendedActionSheet.ItemPrefixIcon svg={prefixIcon} />\n      <SeedExtendedActionSheet.ItemLabel>\n        {label}\n      </SeedExtendedActionSheet.ItemLabel>\n    </SeedExtendedActionSheet.Item>\n  );\n});\n"
    }
  ]
}