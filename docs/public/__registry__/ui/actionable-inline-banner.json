{
  "name": "actionable-inline-banner",
  "dependencies": [
    "@daangn/react-monochrome-icon",
    "@radix-ui/react-slot"
  ],
  "registries": [
    {
      "name": "actionable-inline-banner.tsx",
      "type": "ui",
      "content": "\"use client\";\n\nimport \"@seed-design/stylesheet/inlineBanner.css\";\n\nimport * as React from \"react\";\nimport clsx from \"clsx\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport {\n  inlineBanner,\n  type InlineBannerVariantProps,\n} from \"@seed-design/recipe/inlineBanner\";\nimport { IconChevronRightLine } from \"@daangn/react-monochrome-icon\";\n\nexport type ActionableInlineBannerProps = Omit<\n  InlineBannerVariantProps,\n  \"type\"\n> & {\n  icon?: React.ReactNode;\n  titleText?: string;\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\n};\n\ntype ReactActionableInlineBannerProps = React.DetailedHTMLProps<\n  React.ButtonHTMLAttributes<HTMLButtonElement>,\n  HTMLButtonElement\n> &\n  ActionableInlineBannerProps;\n\nexport const ActionableInlineBanner = React.forwardRef<\n  HTMLButtonElement,\n  ReactActionableInlineBannerProps\n>(\n  (\n    {\n      children,\n      className,\n      type = \"button\",\n      variant = \"neutralWeak\",\n      icon,\n      onClick,\n      titleText,\n      ...otherProps\n    },\n    ref,\n  ) => {\n    const classNames = inlineBanner({ variant, type: \"actionable\" });\n\n    return (\n      <button\n        onClick={onClick}\n        ref={ref}\n        className={clsx(classNames.root, className)}\n        type={type}\n        {...otherProps}\n      >\n        <div className={classNames.content}>\n          {icon && <Slot className={classNames.icon}>{icon}</Slot>}\n          <div>\n            {titleText && (\n              <>\n                <span className={classNames.title}>{titleText}</span>\n                <span className={classNames.spacer}> </span>\n              </>\n            )}\n            <span className={classNames.label}>{children}</span>\n          </div>\n        </div>\n        <IconChevronRightLine className={classNames.chevronRightIcon} />\n      </button>\n    );\n  },\n);\nActionableInlineBanner.displayName = \"ActionableInlineBanner\";\n"
    }
  ]
}