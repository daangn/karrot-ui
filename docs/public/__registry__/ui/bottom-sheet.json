{
  "name": "bottom-sheet",
  "dependencies": [
    "@seed-design/react"
  ],
  "registries": [
    {
      "name": "bottom-sheet.tsx",
      "type": "ui",
      "content": "\"use client\";\n\nimport IconXmarkLine from \"@daangn/react-monochrome-icon/IconXmarkLine\";\nimport { OnlyIcon, BottomSheet as SeedBottomSheet } from \"@seed-design/react\";\nimport { forwardRef } from \"react\";\n\nexport interface BottomSheetRootProps extends SeedBottomSheet.RootProps {}\n\n/**\n * @see https://v3.seed-design.io/docs/react/components/action-sheet\n */\nexport const BottomSheetRoot = (props: BottomSheetRootProps) => {\n  const { children, ...otherProps } = props;\n  return (\n    <SeedBottomSheet.Root closeOnInteractOutside={true} {...otherProps}>\n      {children}\n    </SeedBottomSheet.Root>\n  );\n};\n\nexport interface BottomSheetTriggerProps extends SeedBottomSheet.TriggerProps {}\n\nexport const BottomSheetTrigger = SeedBottomSheet.Trigger;\n\nexport interface BottomSheetContentProps\n  extends Omit<SeedBottomSheet.ContentProps, \"title\"> {\n  title?: React.ReactNode;\n\n  description?: React.ReactNode;\n\n  layerIndex?: number;\n}\n\nexport const BottomSheetContent = forwardRef<\n  HTMLDivElement,\n  BottomSheetContentProps\n>(({ children, title, description, layerIndex, ...otherProps }, ref) => {\n  if (\n    !title &&\n    !otherProps[\"aria-labelledby\"] &&\n    !otherProps[\"aria-label\"] &&\n    process.env.NODE_ENV !== \"production\"\n  ) {\n    console.warn(\n      \"BottomSheetContent: aria-labelledby or aria-label should be provided if title is not provided.\",\n    );\n  }\n\n  const shouldRenderHeader = title || description;\n\n  return (\n    <SeedBottomSheet.Positioner\n      style={{ \"--layer-index\": layerIndex } as React.CSSProperties}\n    >\n      <SeedBottomSheet.Backdrop />\n      <SeedBottomSheet.Content ref={ref} {...otherProps}>\n        {shouldRenderHeader && (\n          <SeedBottomSheet.Header>\n            {title && <SeedBottomSheet.Title>{title}</SeedBottomSheet.Title>}\n            {description && (\n              <SeedBottomSheet.Description>\n                {description}\n              </SeedBottomSheet.Description>\n            )}\n          </SeedBottomSheet.Header>\n        )}\n        {children}\n        {/* You may implement your own i18n for dismiss label */}\n        <SeedBottomSheet.CloseButton>\n          <OnlyIcon svg={<IconXmarkLine />} />\n        </SeedBottomSheet.CloseButton>\n      </SeedBottomSheet.Content>\n    </SeedBottomSheet.Positioner>\n  );\n});\n\nexport interface BottomSheetBodyProps extends SeedBottomSheet.BodyProps {}\n\nexport const BottomSheetBody = SeedBottomSheet.Body;\n\nexport interface BottomSheetFooterProps extends SeedBottomSheet.FooterProps {}\n\nexport const BottomSheetFooter = SeedBottomSheet.Footer;\n\n/**\n * This file is generated snippet from the Seed Design.\n * You can extend the functionality from this snippet if needed.\n */\n"
    }
  ]
}