{
  "name": "control-chip",
  "dependencies": [
    "@seed-design/react"
  ],
  "registries": [
    {
      "name": "control-chip.tsx",
      "type": "ui",
      "content": "\"use client\";\n\nimport { ControlChip as SeedControlChip } from \"@seed-design/react\";\nimport * as React from \"react\";\n\nimport \"@seed-design/stylesheet/controlChip.css\";\n\nexport interface ControlChipToggleProps extends SeedControlChip.RootProps {\n  prefixIcon?: React.ReactNode;\n\n  suffixIcon?: React.ReactNode;\n\n  count?: number;\n}\n\nexport const ControlChipToggle = React.forwardRef<\n  HTMLLabelElement,\n  ControlChipToggleProps\n>(\n  (\n    { className, children, prefixIcon, suffixIcon, count, ...otherProps },\n    ref,\n  ) => {\n    return (\n      <SeedControlChip.Root ref={ref} {...otherProps}>\n        {otherProps.layout === \"withText\" ? (\n          <>\n            {prefixIcon && <SeedControlChip.PrefixIcon svg={prefixIcon} />}\n            <SeedControlChip.Label>{children}</SeedControlChip.Label>\n            {count && <SeedControlChip.Count>{count}</SeedControlChip.Count>}\n            {suffixIcon && <SeedControlChip.SuffixIcon svg={suffixIcon} />}\n          </>\n        ) : (\n          <SeedControlChip.Icon svg={children} />\n        )}\n      </SeedControlChip.Root>\n    );\n  },\n);\nControlChipToggle.displayName = \"ControlChip.Toggle\";\n\nexport const ControlChip = Object.assign(\n  () => {\n    console.warn(\n      \"ControlChip is a base component and should not be rendered. Use ControlChip.Toggle or ControlChip.Radio instead.\",\n    );\n  },\n  {\n    Toggle: ControlChipToggle,\n  },\n);\n\n/**\n * This file is generated snippet from the Seed Design.\n * You can extend the functionality from this snippet if needed.\n */\n"
    }
  ]
}