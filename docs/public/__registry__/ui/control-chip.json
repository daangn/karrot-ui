{
  "name": "control-chip",
  "dependencies": [
    "@seed-design/react"
  ],
  "registries": [
    {
      "name": "control-chip.tsx",
      "type": "ui",
      "content": "\"use client\";\n\nimport { ControlChip as SeedControlChip } from \"@seed-design/react\";\nimport { Checkbox, RadioGroup } from \"@seed-design/react/primitive\";\nimport * as React from \"react\";\n\nexport interface ToggleControlChipProps\n  extends SeedControlChip.RootBaseProps,\n    Checkbox.RootProps {\n  prefixIcon?: React.ReactNode;\n\n  suffixIcon?: React.ReactNode;\n\n  count?: number;\n\n  inputProps?: React.InputHTMLAttributes<HTMLInputElement>;\n\n  rootRef?: React.Ref<HTMLLabelElement>;\n}\n\nexport const ToggleControlChip = React.forwardRef<\n  HTMLInputElement,\n  ToggleControlChipProps\n>(\n  (\n    {\n      children,\n      prefixIcon,\n      suffixIcon,\n      count,\n      size,\n      layout = \"withText\",\n      inputProps,\n      rootRef,\n      ...otherProps\n    },\n    ref,\n  ) => {\n    return (\n      <SeedControlChip.Root asChild size={size} layout={layout}>\n        <Checkbox.Root ref={rootRef} {...otherProps}>\n          {layout === \"withText\" ? (\n            <>\n              {prefixIcon && <SeedControlChip.PrefixIcon svg={prefixIcon} />}\n              <SeedControlChip.Label>{children}</SeedControlChip.Label>\n              {count && <SeedControlChip.Count>{count}</SeedControlChip.Count>}\n              {suffixIcon && <SeedControlChip.SuffixIcon svg={suffixIcon} />}\n            </>\n          ) : (\n            <SeedControlChip.Icon svg={children} />\n          )}\n          <Checkbox.HiddenInput ref={ref} {...inputProps} />\n        </Checkbox.Root>\n      </SeedControlChip.Root>\n    );\n  },\n);\nToggleControlChip.displayName = \"ControlChip.Toggle\";\n\nexport interface ButtonControlChipProps extends SeedControlChip.RootProps {\n  prefixIcon?: React.ReactNode;\n\n  suffixIcon?: React.ReactNode;\n}\n\nexport const ButtonControlChip = React.forwardRef<\n  HTMLButtonElement,\n  ButtonControlChipProps\n>(\n  (\n    { children, prefixIcon, suffixIcon, layout = \"withText\", ...otherProps },\n    ref,\n  ) => {\n    return (\n      <SeedControlChip.Root ref={ref} layout={layout} {...otherProps}>\n        {layout === \"withText\" ? (\n          <>\n            {prefixIcon && <SeedControlChip.PrefixIcon svg={prefixIcon} />}\n            <SeedControlChip.Label>{children}</SeedControlChip.Label>\n            {suffixIcon && <SeedControlChip.SuffixIcon svg={suffixIcon} />}\n          </>\n        ) : (\n          <SeedControlChip.Icon svg={children} />\n        )}\n      </SeedControlChip.Root>\n    );\n  },\n);\nButtonControlChip.displayName = \"ControlChip.Button\";\n\nexport interface RadioControlChipRootProps extends RadioGroup.RootProps {}\n\nexport const RadioControlChipRoot = RadioGroup.Root;\n\nexport interface RadioControlChipItemProps\n  extends SeedControlChip.RootBaseProps,\n    RadioGroup.ItemProps {\n  prefixIcon?: React.ReactNode;\n\n  suffixIcon?: React.ReactNode;\n\n  count?: number;\n\n  inputProps?: React.InputHTMLAttributes<HTMLInputElement>;\n\n  rootRef?: React.Ref<HTMLLabelElement>;\n}\n\nexport const RadioControlChipItem = React.forwardRef<\n  HTMLInputElement,\n  RadioControlChipItemProps\n>(\n  (\n    {\n      children,\n      prefixIcon,\n      suffixIcon,\n      count,\n      size,\n      layout = \"withText\",\n      inputProps,\n      rootRef,\n      ...otherProps\n    },\n    ref,\n  ) => {\n    return (\n      <SeedControlChip.Root asChild size={size} layout={layout}>\n        <RadioGroup.Item ref={rootRef} {...otherProps}>\n          {layout === \"withText\" ? (\n            <>\n              {prefixIcon && <SeedControlChip.PrefixIcon svg={prefixIcon} />}\n              <SeedControlChip.Label>{children}</SeedControlChip.Label>\n              {count && <SeedControlChip.Count>{count}</SeedControlChip.Count>}\n              {suffixIcon && <SeedControlChip.SuffixIcon svg={suffixIcon} />}\n            </>\n          ) : (\n            <SeedControlChip.Icon svg={children} />\n          )}\n          <RadioGroup.ItemHiddenInput ref={ref} {...inputProps} />\n        </RadioGroup.Item>\n      </SeedControlChip.Root>\n    );\n  },\n);\nRadioControlChipItem.displayName = \"ControlChip.RadioItem\";\n\n/**\n * @see https://v3.seed-design.io/docs/react/components/control-chip\n */\nexport const ControlChip = Object.assign(\n  () => {\n    console.warn(\n      \"ControlChip is a base component and should not be rendered. Use ControlChip.Toggle or ControlChip.Radio instead.\",\n    );\n  },\n  {\n    Toggle: ToggleControlChip,\n    Button: ButtonControlChip,\n    RadioRoot: RadioControlChipRoot,\n    RadioItem: RadioControlChipItem,\n  },\n);\n\n/**\n * This file is generated snippet from the Seed Design.\n * You can extend the functionality from this snippet if needed.\n */\n"
    }
  ]
}