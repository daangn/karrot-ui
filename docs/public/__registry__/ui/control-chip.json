{
  "name": "control-chip",
  "dependencies": [
    "@seed-design/react"
  ],
  "registries": [
    {
      "name": "control-chip.tsx",
      "type": "ui",
      "content": "\"use client\";\n\nimport {\n  ControlChip as SeedControlChip,\n  type ControlChipBaseProps as SeedControlChipBaseProps,\n  type ControlChipProps as SeedControlChipProps,\n} from \"@seed-design/react\";\nimport { Checkbox, RadioGroup } from \"@seed-design/react/primitive\";\nimport * as React from \"react\";\n\nexport interface ToggleControlChipProps extends SeedControlChipBaseProps, Checkbox.RootProps {\n  inputProps?: React.InputHTMLAttributes<HTMLInputElement>;\n\n  rootRef?: React.Ref<HTMLLabelElement>;\n}\n\nexport const ToggleControlChip = React.forwardRef<HTMLInputElement, ToggleControlChipProps>(\n  ({ children, size, layout = \"withText\", inputProps, rootRef, ...otherProps }, ref) => {\n    return (\n      <SeedControlChip asChild size={size} layout={layout}>\n        <Checkbox.Root ref={rootRef} {...otherProps}>\n          {children}\n          <Checkbox.HiddenInput ref={ref} {...inputProps} />\n        </Checkbox.Root>\n      </SeedControlChip>\n    );\n  },\n);\nToggleControlChip.displayName = \"ControlChip.Toggle\";\n\nexport interface ButtonControlChipProps extends SeedControlChipProps {}\n\nexport const ButtonControlChip = React.forwardRef<HTMLButtonElement, ButtonControlChipProps>(\n  ({ children, ...otherProps }, ref) => {\n    return (\n      <SeedControlChip ref={ref} {...otherProps}>\n        {children}\n      </SeedControlChip>\n    );\n  },\n);\nButtonControlChip.displayName = \"ControlChip.Button\";\n\nexport interface RadioControlChipRootProps extends RadioGroup.RootProps {}\n\nexport const RadioControlChipRoot = RadioGroup.Root;\n\nexport interface RadioControlChipItemProps extends SeedControlChipBaseProps, RadioGroup.ItemProps {\n  inputProps?: React.InputHTMLAttributes<HTMLInputElement>;\n\n  rootRef?: React.Ref<HTMLLabelElement>;\n}\n\nexport const RadioControlChipItem = React.forwardRef<HTMLInputElement, RadioControlChipItemProps>(\n  ({ children, inputProps, rootRef, size, layout = \"withText\", ...otherProps }, ref) => {\n    return (\n      <SeedControlChip asChild size={size} layout={layout}>\n        <RadioGroup.Item ref={rootRef} {...otherProps}>\n          {children}\n          <RadioGroup.ItemHiddenInput ref={ref} {...inputProps} />\n        </RadioGroup.Item>\n      </SeedControlChip>\n    );\n  },\n);\nRadioControlChipItem.displayName = \"ControlChip.RadioItem\";\n\nexport const ControlChip = Object.assign(\n  () => {\n    console.warn(\n      \"ControlChip is a base component and should not be rendered. Use ControlChip.Toggle or ControlChip.Button instead.\",\n    );\n  },\n  {\n    Toggle: ToggleControlChip,\n    Button: ButtonControlChip,\n    RadioRoot: RadioControlChipRoot,\n    RadioItem: RadioControlChipItem,\n  },\n);\n\n/**\n * This file is generated snippet from the Seed Design.\n * You can extend the functionality from this snippet if needed.\n */\n"
    }
  ]
}