{
  "name": "switch",
  "dependencies": [
    "@seed-design/react-switch@alpha"
  ],
  "registries": [
    {
      "name": "switch.tsx",
      "type": "ui",
      "content": "import { type UseSwitchProps, useSwitch } from \"@seed-design/react-switch\";\nimport {\n  type SwitchVariantProps,\n  switchStyle,\n} from \"@seed-design/recipe/switch\";\nimport clsx from \"clsx\";\nimport * as React from \"react\";\n\nimport type { Assign } from \"../util/types\";\nimport { visuallyHidden } from \"../util/visuallyHidden\";\n\nimport \"@seed-design/stylesheet/switch.css\";\n\nexport interface SwitchProps extends SwitchVariantProps {}\n\ninterface ReactSwitchProps\n  extends Assign<React.HTMLAttributes<HTMLInputElement>, UseSwitchProps>,\n    SwitchProps {}\n\nexport const Switch = React.forwardRef<HTMLInputElement, ReactSwitchProps>(\n  ({ className, size = \"medium\", ...otherProps }, ref) => {\n    const { restProps, controlProps, hiddenInputProps, rootProps, thumbProps } =\n      useSwitch(otherProps);\n    const classNames = switchStyle({ size });\n\n    return (\n      <label className={clsx(classNames.root, className)} {...rootProps}>\n        <div {...controlProps} className={classNames.control}>\n          <div {...thumbProps} className={classNames.thumb} />\n        </div>\n        <input\n          ref={ref}\n          {...hiddenInputProps}\n          {...restProps}\n          style={visuallyHidden}\n        />\n      </label>\n    );\n  },\n);\nSwitch.displayName = \"Switch\";\n"
    }
  ]
}