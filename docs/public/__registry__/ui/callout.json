{
  "name": "callout",
  "dependencies": [
    "@seed-design/react",
    "@daangn/react-monochrome-icon"
  ],
  "registries": [
    {
      "name": "callout.tsx",
      "type": "ui",
      "content": "\"use client\";\n\nimport {\n  PrefixIcon,\n  Callout as SeedCallout,\n  SuffixIcon,\n} from \"@seed-design/react\";\nimport * as React from \"react\";\n\nimport {\n  IconChevronRightLine,\n  IconXmarkLine,\n} from \"@daangn/react-monochrome-icon\";\n\nexport interface CalloutProps\n  extends Omit<\n    SeedCallout.RootProps,\n    \"children\" | \"title\" | \"asChild\" | \"open\" | \"defaultOpen\" | \"onDismiss\"\n  > {\n  prefixIcon?: React.ReactNode;\n\n  title?: React.ReactNode;\n\n  description: React.ReactNode;\n\n  linkProps?: SeedCallout.LinkProps;\n}\n\n/**\n * @see https://v3.seed-design.io/docs/react/components/callout\n */\nexport const Callout = React.forwardRef<\n  React.ElementRef<typeof SeedCallout.Root>,\n  CalloutProps\n>(({ prefixIcon, title, description, linkProps, ...otherProps }, ref) => {\n  return (\n    <SeedCallout.Root ref={ref} {...otherProps}>\n      {prefixIcon && <PrefixIcon svg={prefixIcon} />}\n      <SeedCallout.Content>\n        {title && <SeedCallout.Title>{title}</SeedCallout.Title>}\n        <SeedCallout.Description>{description}</SeedCallout.Description>\n        {linkProps && <SeedCallout.Link {...linkProps} />}\n      </SeedCallout.Content>\n    </SeedCallout.Root>\n  );\n});\nCallout.displayName = \"Callout\";\n\nexport interface ActionableCalloutProps\n  extends Omit<\n    SeedCallout.RootProps,\n    \"children\" | \"title\" | \"asChild\" | \"open\" | \"defaultOpen\" | \"onDismiss\"\n  > {\n  title?: React.ReactNode;\n\n  description: React.ReactNode;\n}\n\n/**\n * @see https://v3.seed-design.io/docs/react/components/callout\n */\nexport const ActionableCallout = React.forwardRef<\n  React.ElementRef<typeof SeedCallout.Root>,\n  ActionableCalloutProps\n>(({ title, description, ...otherProps }, ref) => {\n  return (\n    <SeedCallout.Root ref={ref} {...otherProps} asChild>\n      <button type=\"button\">\n        <SeedCallout.Content>\n          {title && <SeedCallout.Title>{title}</SeedCallout.Title>}\n          <SeedCallout.Description>{description}</SeedCallout.Description>\n        </SeedCallout.Content>\n        <SuffixIcon svg={<IconChevronRightLine />} />\n      </button>\n    </SeedCallout.Root>\n  );\n});\nActionableCallout.displayName = \"ActionableCallout\";\n\nexport interface DismissibleCalloutProps\n  extends Omit<SeedCallout.RootProps, \"children\" | \"title\" | \"asChild\"> {\n  title?: React.ReactNode;\n\n  description: React.ReactNode;\n\n  linkProps?: SeedCallout.LinkProps;\n}\n\n/**\n * @see https://v3.seed-design.io/docs/react/components/callout\n */\nexport const DismissibleCallout = React.forwardRef<\n  React.ElementRef<typeof SeedCallout.Root>,\n  DismissibleCalloutProps\n>(\n  (\n    {\n      title,\n      description,\n      linkProps,\n      defaultOpen,\n      open,\n      onDismiss,\n      ...otherProps\n    },\n    ref,\n  ) => {\n    return (\n      <SeedCallout.Root ref={ref} {...otherProps}>\n        <SeedCallout.Content>\n          {title && <SeedCallout.Title>{title}</SeedCallout.Title>}\n          <SeedCallout.Description>{description}</SeedCallout.Description>\n          {linkProps && <SeedCallout.Link {...linkProps} />}\n        </SeedCallout.Content>\n        {/* You may implement your own i18n for dismiss label */}\n        <SeedCallout.CloseButton aria-label=\"닫기\">\n          <SuffixIcon svg={<IconXmarkLine />} />\n        </SeedCallout.CloseButton>\n      </SeedCallout.Root>\n    );\n  },\n);\nDismissibleCallout.displayName = \"DismissibleCallout\";\n"
    }
  ]
}