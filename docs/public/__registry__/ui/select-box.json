{
  "name": "select-box",
  "dependencies": [
    "@seed-design/react",
    "@daangn/react-monochrome-icon"
  ],
  "registries": [
    {
      "name": "select-box.tsx",
      "type": "ui",
      "content": "\"use client\";\n\nimport { IconCheckmarkFatFill } from \"@daangn/react-monochrome-icon\";\nimport {\n  SelectBoxCheck as SeedSelectBoxCheck,\n  SelectBoxRadio as SeedSelectBoxRadio,\n} from \"@seed-design/react\";\nimport * as React from \"react\";\n\nimport \"@seed-design/stylesheet/selectBox.css\";\nimport \"@seed-design/stylesheet/selectBoxGroup.css\";\n\nexport interface SelectBoxRadioGroupProps\n  extends SeedSelectBoxRadio.GroupProps {}\n\nexport const SelectBoxRadioGroup = React.forwardRef<\n  HTMLDivElement,\n  SelectBoxRadioGroupProps\n>((props, ref) => {\n  if (!props[\"aria-label\"] && !props[\"aria-labelledby\"]) {\n    console.warn(\n      \"SelectBoxRadioGroup component requires either an `aria-label` or `aria-labelledby` attribute.\",\n    );\n  }\n\n  return <SeedSelectBoxRadio.Group ref={ref} {...props} />;\n});\n\nexport interface SelectBoxRadioProps extends SeedSelectBoxRadio.RootProps {\n  label: string;\n\n  description?: string;\n\n  inputProps?: React.InputHTMLAttributes<HTMLInputElement>;\n\n  rootRef?: React.Ref<HTMLLabelElement>;\n}\n\nexport const SelectBoxRadio = React.forwardRef<\n  HTMLInputElement,\n  SelectBoxRadioProps\n>(({ label, description, inputProps, rootRef, ...otherProps }, ref) => {\n  return (\n    <SeedSelectBoxRadio.Root ref={rootRef} {...otherProps}>\n      <SeedSelectBoxRadio.HiddenInput ref={ref} {...inputProps} />\n      <SeedSelectBoxRadio.Content>\n        <SeedSelectBoxRadio.Label>{label}</SeedSelectBoxRadio.Label>\n        {description && (\n          <SeedSelectBoxRadio.Description>\n            {description}\n          </SeedSelectBoxRadio.Description>\n        )}\n      </SeedSelectBoxRadio.Content>\n      <SeedSelectBoxRadio.Control>\n        <SeedSelectBoxRadio.Icon\n          svg={\n            <svg aria-hidden viewBox=\"0 0 24 24\">\n              <circle cx=\"12\" cy=\"12\" r=\"12\" fill=\"currentColor\" />\n            </svg>\n          }\n        />\n      </SeedSelectBoxRadio.Control>\n    </SeedSelectBoxRadio.Root>\n  );\n});\nSelectBoxRadio.displayName = \"SelectBoxRadio\";\n\nexport interface SelectBoxCheckGroupProps\n  extends SeedSelectBoxCheck.GroupProps {}\n\nexport const SelectBoxCheckGroup = SeedSelectBoxCheck.Group;\n\nexport interface SelectBoxCheckProps extends SeedSelectBoxCheck.RootProps {\n  label: string;\n\n  description?: string;\n\n  inputProps?: React.InputHTMLAttributes<HTMLInputElement>;\n\n  rootRef?: React.Ref<HTMLLabelElement>;\n}\n\nexport const SelectBoxCheck = React.forwardRef<\n  HTMLInputElement,\n  SelectBoxCheckProps\n>(({ label, description, inputProps, rootRef, ...otherProps }, ref) => {\n  return (\n    <SeedSelectBoxCheck.Root ref={rootRef} {...otherProps}>\n      <SeedSelectBoxCheck.HiddenInput ref={ref} {...inputProps} />\n      <SeedSelectBoxCheck.Content>\n        <SeedSelectBoxCheck.Label>{label}</SeedSelectBoxCheck.Label>\n        {description && (\n          <SeedSelectBoxCheck.Description>\n            {description}\n          </SeedSelectBoxCheck.Description>\n        )}\n      </SeedSelectBoxCheck.Content>\n      <SeedSelectBoxCheck.Control>\n        <SeedSelectBoxCheck.Icon svg={<IconCheckmarkFatFill />} />\n      </SeedSelectBoxCheck.Control>\n    </SeedSelectBoxCheck.Root>\n  );\n});\nSelectBoxCheck.displayName = \"SelectBoxCheck\";\n"
    }
  ]
}