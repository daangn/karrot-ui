{
  "name": "select-box",
  "dependencies": ["@seed-design/react", "@daangn/react-monochrome-icon"],
  "registries": [
    {
      "name": "select-box.tsx",
      "type": "ui",
      "content": "\"use client\";\n\nimport { IconCheckmarkFatFill } from \"@daangn/react-monochrome-icon\";\nimport {\n  CheckSelectBox as SeedCheckSelectBox,\n  RadioSelectBox as SeedRadioSelectBox,\n} from \"@seed-design/react\";\nimport * as React from \"react\";\n\nimport \"@seed-design/stylesheet/selectBox.css\";\nimport \"@seed-design/stylesheet/selectBoxGroup.css\";\n\nexport interface RadioSelectBoxGroupProps\n  extends SeedRadioSelectBox.GroupProps {}\n\nexport const RadioSelectBoxGroup = React.forwardRef<\n  HTMLDivElement,\n  RadioSelectBoxGroupProps\n>((props, ref) => {\n  if (!props[\"aria-label\"] && !props[\"aria-labelledby\"]) {\n    console.warn(\n      \"RadioSelectBoxGroup component requires either an `aria-label` or `aria-labelledby` attribute.\",\n    );\n  }\n\n  return <SeedRadioSelectBox.Group ref={ref} {...props} />;\n});\n\nexport interface RadioSelectBoxProps extends SeedRadioSelectBox.RootProps {\n  label: string;\n\n  description?: string;\n\n  inputProps?: React.InputHTMLAttributes<HTMLInputElement>;\n\n  rootRef?: React.Ref<HTMLLabelElement>;\n}\n\nexport const RadioSelectBox = React.forwardRef<\n  HTMLInputElement,\n  RadioSelectBoxProps\n>(({ label, description, inputProps, rootRef, ...otherProps }, ref) => {\n  return (\n    <SeedRadioSelectBox.Root ref={rootRef} {...otherProps}>\n      <SeedRadioSelectBox.HiddenInput ref={ref} {...inputProps} />\n      <SeedRadioSelectBox.Content>\n        <SeedRadioSelectBox.Label>{label}</SeedRadioSelectBox.Label>\n        {description && (\n          <SeedRadioSelectBox.Description>\n            {description}\n          </SeedRadioSelectBox.Description>\n        )}\n      </SeedRadioSelectBox.Content>\n      <SeedRadioSelectBox.Control>\n        <SeedRadioSelectBox.Icon\n          svg={\n            <svg aria-hidden viewBox=\"0 0 24 24\">\n              <circle cx=\"12\" cy=\"12\" r=\"12\" fill=\"currentColor\" />\n            </svg>\n          }\n        />\n      </SeedRadioSelectBox.Control>\n    </SeedRadioSelectBox.Root>\n  );\n});\nRadioSelectBox.displayName = \"RadioSelectBox\";\n\nexport interface CheckSelectBoxGroupProps\n  extends SeedCheckSelectBox.GroupProps {}\n\nexport const CheckSelectBoxGroup = SeedCheckSelectBox.Group;\n\nexport interface CheckSelectBoxProps extends SeedCheckSelectBox.RootProps {\n  label: string;\n\n  description?: string;\n\n  inputProps?: React.InputHTMLAttributes<HTMLInputElement>;\n\n  rootRef?: React.Ref<HTMLLabelElement>;\n}\n\nexport const CheckSelectBox = React.forwardRef<\n  HTMLInputElement,\n  CheckSelectBoxProps\n>(({ label, description, inputProps, rootRef, ...otherProps }, ref) => {\n  return (\n    <SeedCheckSelectBox.Root ref={rootRef} {...otherProps}>\n      <SeedCheckSelectBox.HiddenInput ref={ref} {...inputProps} />\n      <SeedCheckSelectBox.Content>\n        <SeedCheckSelectBox.Label>{label}</SeedCheckSelectBox.Label>\n        {description && (\n          <SeedCheckSelectBox.Description>\n            {description}\n          </SeedCheckSelectBox.Description>\n        )}\n      </SeedCheckSelectBox.Content>\n      <SeedCheckSelectBox.Control>\n        <SeedCheckSelectBox.Icon svg={<IconCheckmarkFatFill />} />\n      </SeedCheckSelectBox.Control>\n    </SeedCheckSelectBox.Root>\n  );\n});\nCheckSelectBox.displayName = \"CheckSelectBox\";\n"
    }
  ]
}
