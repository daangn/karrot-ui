{
  "name": "inline-banner",
  "dependencies": [
    "@seed-design/react",
    "@daangn/react-monochrome-icon"
  ],
  "registries": [
    {
      "name": "inline-banner.tsx",
      "type": "ui",
      "content": "\"use client\";\n\nimport {\n  PrefixIcon,\n  InlineBanner as SeedInlineBanner,\n  SuffixIcon,\n} from \"@seed-design/react\";\nimport * as React from \"react\";\n\nimport {\n  IconChevronRightLine,\n  IconXmarkLine,\n} from \"@daangn/react-monochrome-icon\";\n\nexport interface InlineBannerProps\n  extends Omit<\n    SeedInlineBanner.RootProps,\n    \"children\" | \"title\" | \"asChild\" | \"open\" | \"defaultOpen\" | \"onDismiss\"\n  > {\n  prefixIcon?: React.ReactNode;\n\n  title?: React.ReactNode;\n\n  description: React.ReactNode;\n\n  linkProps?: SeedInlineBanner.LinkProps;\n}\n\n/**\n * @see https://v3.seed-design.io/docs/react/components/inline-banner\n */\nexport const InlineBanner = React.forwardRef<\n  React.ElementRef<typeof SeedInlineBanner.Root>,\n  InlineBannerProps\n>(({ prefixIcon, title, description, linkProps, ...otherProps }, ref) => {\n  return (\n    <SeedInlineBanner.Root ref={ref} {...otherProps}>\n      {prefixIcon && <PrefixIcon svg={prefixIcon} />}\n      <SeedInlineBanner.Content>\n        {title && <SeedInlineBanner.Title>{title}</SeedInlineBanner.Title>}\n        <SeedInlineBanner.Description>\n          {description}\n        </SeedInlineBanner.Description>\n      </SeedInlineBanner.Content>\n      {linkProps && <SeedInlineBanner.Link {...linkProps} />}\n    </SeedInlineBanner.Root>\n  );\n});\nInlineBanner.displayName = \"InlineBanner\";\n\nexport interface ActionableInlineBannerProps\n  extends Omit<\n    SeedInlineBanner.RootProps,\n    \"children\" | \"title\" | \"asChild\" | \"open\" | \"defaultOpen\" | \"onDismiss\"\n  > {\n  prefixIcon?: React.ReactNode;\n\n  title?: React.ReactNode;\n\n  description: React.ReactNode;\n}\n\n/**\n * @see https://v3.seed-design.io/docs/react/components/inline-banner\n */\nexport const ActionableInlineBanner = React.forwardRef<\n  React.ElementRef<typeof SeedInlineBanner.Root>,\n  ActionableInlineBannerProps\n>(({ prefixIcon, title, description, ...otherProps }, ref) => {\n  return (\n    <SeedInlineBanner.Root ref={ref} {...otherProps} asChild>\n      <button type=\"button\">\n        {prefixIcon && <PrefixIcon svg={prefixIcon} />}\n        <SeedInlineBanner.Content>\n          {title && <SeedInlineBanner.Title>{title}</SeedInlineBanner.Title>}\n          <SeedInlineBanner.Description>\n            {description}\n          </SeedInlineBanner.Description>\n        </SeedInlineBanner.Content>\n        <SuffixIcon svg={<IconChevronRightLine />} />\n      </button>\n    </SeedInlineBanner.Root>\n  );\n});\nActionableInlineBanner.displayName = \"ActionableInlineBanner\";\n\nexport interface DismissibleInlineBannerProps\n  extends Omit<\n    SeedInlineBanner.RootProps,\n    \"variant\" | \"children\" | \"title\" | \"asChild\"\n  > {\n  prefixIcon?: React.ReactNode;\n\n  title?: React.ReactNode;\n\n  description: React.ReactNode;\n\n  // While critical variants are discouraged in dismissible, you may remove the restriction if needed.\n  variant?: Exclude<\n    SeedInlineBanner.RootProps[\"variant\"],\n    \"criticalWeak\" | \"criticalSolid\"\n  >;\n}\n\n/**\n * @see https://v3.seed-design.io/docs/react/components/inline-banner\n */\nexport const DismissibleInlineBanner = React.forwardRef<\n  React.ElementRef<typeof SeedInlineBanner.Root>,\n  DismissibleInlineBannerProps\n>(({ prefixIcon, title, description, ...otherProps }, ref) => {\n  return (\n    <SeedInlineBanner.Root ref={ref} {...otherProps}>\n      {prefixIcon && <PrefixIcon svg={prefixIcon} />}\n      <SeedInlineBanner.Content>\n        {title && <SeedInlineBanner.Title>{title}</SeedInlineBanner.Title>}\n        <SeedInlineBanner.Description>\n          {description}\n        </SeedInlineBanner.Description>\n      </SeedInlineBanner.Content>\n      {/* You may implement your own i18n for dismiss label */}\n      <SeedInlineBanner.CloseButton aria-label=\"닫기\">\n        <SuffixIcon svg={<IconXmarkLine />} />\n      </SeedInlineBanner.CloseButton>\n    </SeedInlineBanner.Root>\n  );\n});\nDismissibleInlineBanner.displayName = \"DismissibleInlineBanner\";\n"
    }
  ]
}