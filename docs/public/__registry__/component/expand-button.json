{
  "name": "expand-button",
  "dependencies": [
    "@radix-ui/react-slot"
  ],
  "registries": [
    {
      "name": "expand-button.tsx",
      "content": "\"use client\";\n\nimport \"@seed-design/stylesheet/expandButton.css\";\n\nimport * as React from \"react\";\nimport clsx from \"clsx\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport {\n  expandButton,\n  type ExpandButtonVariantProps,\n} from \"@seed-design/recipe/expandButton\";\n\nexport interface ExpandButtonProps extends ExpandButtonVariantProps {\n  suffixIcon?: React.ReactNode;\n\n  /**\n   * @default false\n   */\n  asChild?: boolean;\n}\n\nexport interface ReactExpandButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    ExpandButtonProps {}\n\n/**\n * @see https://v3.seed-design.io/docs/react/components/expand-button\n */\nexport const ExpandButton = React.forwardRef<\n  HTMLButtonElement,\n  ReactExpandButtonProps\n>(\n  (\n    { className, children, suffixIcon, asChild = false, ...otherProps },\n    ref,\n  ) => {\n    const Comp = asChild ? Slot : \"button\";\n    const classNames = expandButton({});\n    return (\n      <Comp\n        ref={ref}\n        className={clsx(classNames.root, className)}\n        {...otherProps}\n      >\n        <span className={classNames.label}>{children}</span>\n        {suffixIcon && (\n          <Slot className={classNames.suffixIcon}>{suffixIcon}</Slot>\n        )}\n      </Comp>\n    );\n  },\n);\nExpandButton.displayName = \"ExpandButton\";\n"
    }
  ]
}